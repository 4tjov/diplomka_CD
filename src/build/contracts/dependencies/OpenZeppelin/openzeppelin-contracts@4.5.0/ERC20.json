{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "13": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "5": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "6": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "7": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol"
  },
  "ast": {
    "absolutePath": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "exportedSymbols": {
      "Context": [
        2838
      ],
      "ERC20": [
        1950
      ],
      "IERC20": [
        3413
      ],
      "IERC20Metadata": [
        3438
      ]
    },
    "id": 1951,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1364,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "105:23:5"
      },
      {
        "absolutePath": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 1365,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1951,
        "sourceUnit": 3414,
        "src": "130:22:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "./extensions/IERC20Metadata.sol",
        "id": 1366,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1951,
        "sourceUnit": 3439,
        "src": "153:41:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 1367,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1951,
        "sourceUnit": 2839,
        "src": "195:33:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1369,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2838,
              "src": "1421:7:5"
            },
            "id": 1370,
            "nodeType": "InheritanceSpecifier",
            "src": "1421:7:5"
          },
          {
            "baseName": {
              "id": 1371,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3413,
              "src": "1430:6:5"
            },
            "id": 1372,
            "nodeType": "InheritanceSpecifier",
            "src": "1430:6:5"
          },
          {
            "baseName": {
              "id": 1373,
              "name": "IERC20Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3438,
              "src": "1438:14:5"
            },
            "id": 1374,
            "nodeType": "InheritanceSpecifier",
            "src": "1438:14:5"
          }
        ],
        "contractDependencies": [
          2838,
          3413,
          3438
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1368,
          "nodeType": "StructuredDocumentation",
          "src": "230:1172:5",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 1950,
        "linearizedBaseContracts": [
          1950,
          3438,
          3413,
          2838
        ],
        "name": "ERC20",
        "nameLocation": "1412:5:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1378,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1495:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 1950,
            "src": "1459:45:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1377,
              "keyType": {
                "id": 1375,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1467:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1459:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1376,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1478:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1384,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1567:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 1950,
            "src": "1511:67:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 1383,
              "keyType": {
                "id": 1379,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1519:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1511:47:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 1382,
                "keyType": {
                  "id": 1380,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1538:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1530:27:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 1381,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1549:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1386,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1601:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 1950,
            "src": "1585:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1385,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1585:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1388,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1635:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 1950,
            "src": "1620:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1387,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1620:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1390,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1661:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 1950,
            "src": "1646:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1389,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1646:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1406,
              "nodeType": "Block",
              "src": "2034:57:5",
              "statements": [
                {
                  "expression": {
                    "id": 1400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1398,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1388,
                      "src": "2044:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1399,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1393,
                      "src": "2052:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2044:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1401,
                  "nodeType": "ExpressionStatement",
                  "src": "2044:13:5"
                },
                {
                  "expression": {
                    "id": 1404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1402,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1390,
                      "src": "2067:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1403,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1395,
                      "src": "2077:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2067:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1405,
                  "nodeType": "ExpressionStatement",
                  "src": "2067:17:5"
                }
              ]
            },
            "documentation": {
              "id": 1391,
              "nodeType": "StructuredDocumentation",
              "src": "1675:298:5",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 1407,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1393,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2004:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1407,
                  "src": "1990:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1392,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1395,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2025:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1407,
                  "src": "2011:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1394,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2011:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1989:44:5"
            },
            "returnParameters": {
              "id": 1397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2034:0:5"
            },
            "scope": 1950,
            "src": "1978:113:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3425
            ],
            "body": {
              "id": 1416,
              "nodeType": "Block",
              "src": "2225:29:5",
              "statements": [
                {
                  "expression": {
                    "id": 1414,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1388,
                    "src": "2242:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1413,
                  "id": 1415,
                  "nodeType": "Return",
                  "src": "2235:12:5"
                }
              ]
            },
            "documentation": {
              "id": 1408,
              "nodeType": "StructuredDocumentation",
              "src": "2097:54:5",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 1417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2165:4:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1410,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2192:8:5"
            },
            "parameters": {
              "id": 1409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2169:2:5"
            },
            "returnParameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1417,
                  "src": "2210:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1411,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2209:15:5"
            },
            "scope": 1950,
            "src": "2156:98:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3431
            ],
            "body": {
              "id": 1426,
              "nodeType": "Block",
              "src": "2438:31:5",
              "statements": [
                {
                  "expression": {
                    "id": 1424,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1390,
                    "src": "2455:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1423,
                  "id": 1425,
                  "nodeType": "Return",
                  "src": "2448:14:5"
                }
              ]
            },
            "documentation": {
              "id": 1418,
              "nodeType": "StructuredDocumentation",
              "src": "2260:102:5",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 1427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2376:6:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1420,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2405:8:5"
            },
            "parameters": {
              "id": 1419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2382:2:5"
            },
            "returnParameters": {
              "id": 1423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1422,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1427,
                  "src": "2423:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1421,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2423:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2422:15:5"
            },
            "scope": 1950,
            "src": "2367:102:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3437
            ],
            "body": {
              "id": 1436,
              "nodeType": "Block",
              "src": "3158:26:5",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 1434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3175:2:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 1433,
                  "id": 1435,
                  "nodeType": "Return",
                  "src": "3168:9:5"
                }
              ]
            },
            "documentation": {
              "id": 1428,
              "nodeType": "StructuredDocumentation",
              "src": "2475:613:5",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 1437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3102:8:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1430,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3133:8:5"
            },
            "parameters": {
              "id": 1429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3110:2:5"
            },
            "returnParameters": {
              "id": 1433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1437,
                  "src": "3151:5:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1431,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3151:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3150:7:5"
            },
            "scope": 1950,
            "src": "3093:91:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3344
            ],
            "body": {
              "id": 1446,
              "nodeType": "Block",
              "src": "3314:36:5",
              "statements": [
                {
                  "expression": {
                    "id": 1444,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1386,
                    "src": "3331:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1443,
                  "id": 1445,
                  "nodeType": "Return",
                  "src": "3324:19:5"
                }
              ]
            },
            "documentation": {
              "id": 1438,
              "nodeType": "StructuredDocumentation",
              "src": "3190:49:5",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 1447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3253:11:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1440,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3287:8:5"
            },
            "parameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3264:2:5"
            },
            "returnParameters": {
              "id": 1443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1442,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1447,
                  "src": "3305:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1441,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3305:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3304:9:5"
            },
            "scope": 1950,
            "src": "3244:106:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3352
            ],
            "body": {
              "id": 1460,
              "nodeType": "Block",
              "src": "3491:42:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1456,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1378,
                      "src": "3508:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1458,
                    "indexExpression": {
                      "id": 1457,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1450,
                      "src": "3518:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3508:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1455,
                  "id": 1459,
                  "nodeType": "Return",
                  "src": "3501:25:5"
                }
              ]
            },
            "documentation": {
              "id": 1448,
              "nodeType": "StructuredDocumentation",
              "src": "3356:47:5",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 1461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3417:9:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1452,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3464:8:5"
            },
            "parameters": {
              "id": 1451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1450,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3435:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "3427:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3427:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3426:17:5"
            },
            "returnParameters": {
              "id": 1455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1454,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "3482:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3482:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3481:9:5"
            },
            "scope": 1950,
            "src": "3408:125:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3362
            ],
            "body": {
              "id": 1485,
              "nodeType": "Block",
              "src": "3814:104:5",
              "statements": [
                {
                  "assignments": [
                    1473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1473,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3832:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1485,
                      "src": "3824:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1472,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3824:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1476,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1474,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2828,
                      "src": "3840:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3840:12:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3824:28:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1478,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "3872:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1479,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1464,
                        "src": "3879:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1480,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1466,
                        "src": "3883:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1477,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1711,
                      "src": "3862:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3862:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1482,
                  "nodeType": "ExpressionStatement",
                  "src": "3862:28:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3907:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1471,
                  "id": 1484,
                  "nodeType": "Return",
                  "src": "3900:11:5"
                }
              ]
            },
            "documentation": {
              "id": 1462,
              "nodeType": "StructuredDocumentation",
              "src": "3539:185:5",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 1486,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3738:8:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1468,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3790:8:5"
            },
            "parameters": {
              "id": 1467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1464,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3755:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1486,
                  "src": "3747:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3747:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1466,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3767:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1486,
                  "src": "3759:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3759:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3746:28:5"
            },
            "returnParameters": {
              "id": 1471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1470,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1486,
                  "src": "3808:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1469,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3808:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3807:6:5"
            },
            "scope": 1950,
            "src": "3729:189:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3372
            ],
            "body": {
              "id": 1503,
              "nodeType": "Block",
              "src": "4074:51:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1497,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1384,
                        "src": "4091:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 1499,
                      "indexExpression": {
                        "id": 1498,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1489,
                        "src": "4103:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4091:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1501,
                    "indexExpression": {
                      "id": 1500,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1491,
                      "src": "4110:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4091:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1496,
                  "id": 1502,
                  "nodeType": "Return",
                  "src": "4084:34:5"
                }
              ]
            },
            "documentation": {
              "id": 1487,
              "nodeType": "StructuredDocumentation",
              "src": "3924:47:5",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 1504,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "3985:9:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1493,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4047:8:5"
            },
            "parameters": {
              "id": 1492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1489,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4003:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1504,
                  "src": "3995:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3995:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1491,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4018:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1504,
                  "src": "4010:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4010:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3994:32:5"
            },
            "returnParameters": {
              "id": 1496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1495,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1504,
                  "src": "4065:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4065:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4064:9:5"
            },
            "scope": 1950,
            "src": "3976:149:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3382
            ],
            "body": {
              "id": 1528,
              "nodeType": "Block",
              "src": "4522:108:5",
              "statements": [
                {
                  "assignments": [
                    1516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1516,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4540:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1528,
                      "src": "4532:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1515,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4532:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1519,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1517,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2828,
                      "src": "4548:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4548:12:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4532:28:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1521,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1516,
                        "src": "4579:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1522,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1507,
                        "src": "4586:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1523,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1509,
                        "src": "4595:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1520,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1884,
                      "src": "4570:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4570:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1525,
                  "nodeType": "ExpressionStatement",
                  "src": "4570:32:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4619:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1514,
                  "id": 1527,
                  "nodeType": "Return",
                  "src": "4612:11:5"
                }
              ]
            },
            "documentation": {
              "id": 1505,
              "nodeType": "StructuredDocumentation",
              "src": "4131:297:5",
              "text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 1529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4442:7:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1511,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4498:8:5"
            },
            "parameters": {
              "id": 1510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1507,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4458:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1529,
                  "src": "4450:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4450:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1509,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4475:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1529,
                  "src": "4467:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4467:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4449:33:5"
            },
            "returnParameters": {
              "id": 1514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1513,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1529,
                  "src": "4516:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1512,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4516:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4515:6:5"
            },
            "scope": 1950,
            "src": "4433:197:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3394
            ],
            "body": {
              "id": 1561,
              "nodeType": "Block",
              "src": "5325:153:5",
              "statements": [
                {
                  "assignments": [
                    1543
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1543,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "5343:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1561,
                      "src": "5335:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1542,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5335:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1546,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1544,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2828,
                      "src": "5353:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5353:12:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5335:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1548,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1532,
                        "src": "5391:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1549,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1543,
                        "src": "5397:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1550,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1536,
                        "src": "5406:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1547,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1927,
                      "src": "5375:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5375:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1552,
                  "nodeType": "ExpressionStatement",
                  "src": "5375:38:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1554,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1532,
                        "src": "5433:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1555,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1534,
                        "src": "5439:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1556,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1536,
                        "src": "5443:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1553,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1711,
                      "src": "5423:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5423:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1558,
                  "nodeType": "ExpressionStatement",
                  "src": "5423:27:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5467:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1541,
                  "id": 1560,
                  "nodeType": "Return",
                  "src": "5460:11:5"
                }
              ]
            },
            "documentation": {
              "id": 1530,
              "nodeType": "StructuredDocumentation",
              "src": "4636:551:5",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 1562,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5201:12:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1538,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5301:8:5"
            },
            "parameters": {
              "id": 1537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1532,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5231:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "5223:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5223:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1534,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5253:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "5245:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5245:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1536,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5273:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "5265:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5265:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5213:72:5"
            },
            "returnParameters": {
              "id": 1541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1540,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "5319:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5319:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5318:6:5"
            },
            "scope": 1950,
            "src": "5192:286:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1591,
              "nodeType": "Block",
              "src": "5967:142:5",
              "statements": [
                {
                  "assignments": [
                    1573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1573,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "5985:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1591,
                      "src": "5977:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1572,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5977:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1576,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1574,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2828,
                      "src": "5993:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5993:12:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5977:28:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1578,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1573,
                        "src": "6024:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1579,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1565,
                        "src": "6031:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1580,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1384,
                              "src": "6040:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1582,
                            "indexExpression": {
                              "id": 1581,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1573,
                              "src": "6052:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6040:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1584,
                          "indexExpression": {
                            "id": 1583,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1565,
                            "src": "6059:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6040:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 1585,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1567,
                          "src": "6070:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6040:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1577,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1884,
                      "src": "6015:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6015:66:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1588,
                  "nodeType": "ExpressionStatement",
                  "src": "6015:66:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6098:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1571,
                  "id": 1590,
                  "nodeType": "Return",
                  "src": "6091:11:5"
                }
              ]
            },
            "documentation": {
              "id": 1563,
              "nodeType": "StructuredDocumentation",
              "src": "5484:384:5",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 1592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "5882:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1565,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5908:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1592,
                  "src": "5900:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5900:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "5925:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1592,
                  "src": "5917:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5917:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5899:37:5"
            },
            "returnParameters": {
              "id": 1571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1570,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1592,
                  "src": "5961:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1569,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5961:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5960:6:5"
            },
            "scope": 1950,
            "src": "5873:236:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1633,
              "nodeType": "Block",
              "src": "6695:330:5",
              "statements": [
                {
                  "assignments": [
                    1603
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1603,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6713:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1633,
                      "src": "6705:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1602,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6705:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1606,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1604,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2828,
                      "src": "6721:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6721:12:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6705:28:5"
                },
                {
                  "assignments": [
                    1608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1608,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "6751:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1633,
                      "src": "6743:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1607,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6743:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1614,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1609,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1384,
                        "src": "6770:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 1611,
                      "indexExpression": {
                        "id": 1610,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1603,
                        "src": "6782:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6770:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1613,
                    "indexExpression": {
                      "id": 1612,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1595,
                      "src": "6789:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6770:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6743:54:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1616,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1608,
                          "src": "6815:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1617,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1597,
                          "src": "6835:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6815:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 1619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6852:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 1615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6807:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6807:85:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1621,
                  "nodeType": "ExpressionStatement",
                  "src": "6807:85:5"
                },
                {
                  "id": 1630,
                  "nodeType": "UncheckedBlock",
                  "src": "6902:95:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1623,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1603,
                            "src": "6935:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1624,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1595,
                            "src": "6942:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1625,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1608,
                              "src": "6951:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1626,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1597,
                              "src": "6970:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6951:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1622,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1884,
                          "src": "6926:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 1628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6926:60:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1629,
                      "nodeType": "ExpressionStatement",
                      "src": "6926:60:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7014:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1601,
                  "id": 1632,
                  "nodeType": "Return",
                  "src": "7007:11:5"
                }
              ]
            },
            "documentation": {
              "id": 1593,
              "nodeType": "StructuredDocumentation",
              "src": "6115:476:5",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 1634,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6605:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1595,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6631:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1634,
                  "src": "6623:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6623:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1597,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6648:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1634,
                  "src": "6640:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6640:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6622:42:5"
            },
            "returnParameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1600,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1634,
                  "src": "6689:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1599,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6689:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6688:6:5"
            },
            "scope": 1950,
            "src": "6596:429:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1710,
              "nodeType": "Block",
              "src": "7596:543:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1645,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1637,
                          "src": "7614:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7630:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7622:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1646,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7622:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7622:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7614:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 1651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7634:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 1644,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7606:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7606:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1653,
                  "nodeType": "ExpressionStatement",
                  "src": "7606:68:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1655,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1639,
                          "src": "7692:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7706:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7698:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1656,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7698:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7698:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7692:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 1661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7710:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 1654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7684:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7684:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1663,
                  "nodeType": "ExpressionStatement",
                  "src": "7684:64:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1665,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1637,
                        "src": "7780:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1666,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "7786:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1667,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "7790:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1664,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1938,
                      "src": "7759:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7759:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1669,
                  "nodeType": "ExpressionStatement",
                  "src": "7759:38:5"
                },
                {
                  "assignments": [
                    1671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1671,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "7816:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1710,
                      "src": "7808:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1670,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7808:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1675,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1672,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1378,
                      "src": "7830:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1674,
                    "indexExpression": {
                      "id": 1673,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1637,
                      "src": "7840:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7830:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7808:37:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1677,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1671,
                          "src": "7863:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1678,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1641,
                          "src": "7878:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7863:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 1680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7886:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 1676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7855:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7855:72:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1682,
                  "nodeType": "ExpressionStatement",
                  "src": "7855:72:5"
                },
                {
                  "id": 1691,
                  "nodeType": "UncheckedBlock",
                  "src": "7937:73:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 1689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1683,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1378,
                            "src": "7961:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1685,
                          "indexExpression": {
                            "id": 1684,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1637,
                            "src": "7971:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7961:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1686,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1671,
                            "src": "7979:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1687,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "7993:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7979:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7961:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1690,
                      "nodeType": "ExpressionStatement",
                      "src": "7961:38:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 1696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1692,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1378,
                        "src": "8019:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1694,
                      "indexExpression": {
                        "id": 1693,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "8029:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8019:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1695,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1641,
                      "src": "8036:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8019:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1697,
                  "nodeType": "ExpressionStatement",
                  "src": "8019:23:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1699,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1637,
                        "src": "8067:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1700,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "8073:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1701,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "8077:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1698,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3403,
                      "src": "8058:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8058:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1703,
                  "nodeType": "EmitStatement",
                  "src": "8053:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1705,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1637,
                        "src": "8115:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1706,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "8121:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1707,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "8125:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1704,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1949,
                      "src": "8095:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8095:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1709,
                  "nodeType": "ExpressionStatement",
                  "src": "8095:37:5"
                }
              ]
            },
            "documentation": {
              "id": 1635,
              "nodeType": "StructuredDocumentation",
              "src": "7031:452:5",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
            },
            "id": 1711,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7497:9:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1637,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7524:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1711,
                  "src": "7516:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1636,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7516:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1639,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7546:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1711,
                  "src": "7538:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7538:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1641,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7566:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1711,
                  "src": "7558:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7558:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7506:72:5"
            },
            "returnParameters": {
              "id": 1643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7596:0:5"
            },
            "scope": 1950,
            "src": "7488:651:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1766,
              "nodeType": "Block",
              "src": "8480:324:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1720,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1714,
                          "src": "8498:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8517:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8509:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1721,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8509:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8509:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8498:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 1726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8521:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 1719,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8490:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8490:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1728,
                  "nodeType": "ExpressionStatement",
                  "src": "8490:65:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8595:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8587:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1730,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8587:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8587:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1734,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "8599:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1735,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "8608:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1729,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1938,
                      "src": "8566:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8566:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1737,
                  "nodeType": "ExpressionStatement",
                  "src": "8566:49:5"
                },
                {
                  "expression": {
                    "id": 1740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1738,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1386,
                      "src": "8626:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1739,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1716,
                      "src": "8642:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8626:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1741,
                  "nodeType": "ExpressionStatement",
                  "src": "8626:22:5"
                },
                {
                  "expression": {
                    "id": 1746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1742,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1378,
                        "src": "8658:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1744,
                      "indexExpression": {
                        "id": 1743,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "8668:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8658:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1745,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1716,
                      "src": "8680:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8658:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1747,
                  "nodeType": "ExpressionStatement",
                  "src": "8658:28:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8718:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8710:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1749,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8710:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8710:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1753,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "8722:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1754,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "8731:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1748,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3403,
                      "src": "8701:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8701:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1756,
                  "nodeType": "EmitStatement",
                  "src": "8696:42:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8777:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8769:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1758,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8769:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8769:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1762,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "8781:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1763,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "8790:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1757,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1949,
                      "src": "8749:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8749:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1765,
                  "nodeType": "ExpressionStatement",
                  "src": "8749:48:5"
                }
              ]
            },
            "documentation": {
              "id": 1712,
              "nodeType": "StructuredDocumentation",
              "src": "8145:265:5",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 1767,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8424:5:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1714,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8438:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1767,
                  "src": "8430:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8430:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1716,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8455:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1767,
                  "src": "8447:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8447:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8429:33:5"
            },
            "returnParameters": {
              "id": 1718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8480:0:5"
            },
            "scope": 1950,
            "src": "8415:389:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1838,
              "nodeType": "Block",
              "src": "9189:511:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1776,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1770,
                          "src": "9207:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9226:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9218:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1777,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9218:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9218:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9207:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 1782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9230:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 1775,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9199:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9199:67:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1784,
                  "nodeType": "ExpressionStatement",
                  "src": "9199:67:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1786,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1770,
                        "src": "9298:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9315:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9307:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1787,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9307:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9307:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1791,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1772,
                        "src": "9319:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1785,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1938,
                      "src": "9277:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9277:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1793,
                  "nodeType": "ExpressionStatement",
                  "src": "9277:49:5"
                },
                {
                  "assignments": [
                    1795
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1795,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9345:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1838,
                      "src": "9337:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1794,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9337:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1799,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1796,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1378,
                      "src": "9362:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1798,
                    "indexExpression": {
                      "id": 1797,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1770,
                      "src": "9372:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9362:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9337:43:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1801,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1795,
                          "src": "9398:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1802,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1772,
                          "src": "9416:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9398:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 1804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9424:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 1800,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9390:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9390:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1806,
                  "nodeType": "ExpressionStatement",
                  "src": "9390:71:5"
                },
                {
                  "id": 1815,
                  "nodeType": "UncheckedBlock",
                  "src": "9471:79:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 1813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1807,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1378,
                            "src": "9495:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1809,
                          "indexExpression": {
                            "id": 1808,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1770,
                            "src": "9505:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9495:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1810,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1795,
                            "src": "9516:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1811,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1772,
                            "src": "9533:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9516:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9495:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1814,
                      "nodeType": "ExpressionStatement",
                      "src": "9495:44:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 1818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1816,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1386,
                      "src": "9559:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1817,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1772,
                      "src": "9575:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9559:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1819,
                  "nodeType": "ExpressionStatement",
                  "src": "9559:22:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1821,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1770,
                        "src": "9606:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9623:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9615:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1822,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9615:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9615:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1826,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1772,
                        "src": "9627:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1820,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3403,
                      "src": "9597:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9597:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1828,
                  "nodeType": "EmitStatement",
                  "src": "9592:42:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1830,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1770,
                        "src": "9665:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9682:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9674:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1831,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9674:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9674:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1835,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1772,
                        "src": "9686:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1829,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1949,
                      "src": "9645:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9645:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1837,
                  "nodeType": "ExpressionStatement",
                  "src": "9645:48:5"
                }
              ]
            },
            "documentation": {
              "id": 1768,
              "nodeType": "StructuredDocumentation",
              "src": "8810:309:5",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 1839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9133:5:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1770,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9147:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1839,
                  "src": "9139:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9139:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1772,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9164:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1839,
                  "src": "9156:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9156:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9138:33:5"
            },
            "returnParameters": {
              "id": 1774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9189:0:5"
            },
            "scope": 1950,
            "src": "9124:576:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1883,
              "nodeType": "Block",
              "src": "10236:257:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1850,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1842,
                          "src": "10254:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10271:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10263:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1851,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10263:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10263:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10254:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 1856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10275:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 1849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10246:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10246:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1858,
                  "nodeType": "ExpressionStatement",
                  "src": "10246:68:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1860,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1844,
                          "src": "10332:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10351:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10343:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1861,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10343:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10343:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10332:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 1866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10355:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 1859,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10324:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10324:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1868,
                  "nodeType": "ExpressionStatement",
                  "src": "10324:68:5"
                },
                {
                  "expression": {
                    "id": 1875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1869,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1384,
                          "src": "10403:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1872,
                        "indexExpression": {
                          "id": 1870,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1842,
                          "src": "10415:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10403:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1873,
                      "indexExpression": {
                        "id": 1871,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1844,
                        "src": "10422:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10403:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1874,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1846,
                      "src": "10433:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10403:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1876,
                  "nodeType": "ExpressionStatement",
                  "src": "10403:36:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1878,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1842,
                        "src": "10463:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1879,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1844,
                        "src": "10470:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1880,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1846,
                        "src": "10479:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1877,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3412,
                      "src": "10454:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10454:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1882,
                  "nodeType": "EmitStatement",
                  "src": "10449:37:5"
                }
              ]
            },
            "documentation": {
              "id": 1840,
              "nodeType": "StructuredDocumentation",
              "src": "9706:412:5",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 1884,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10132:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1842,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10158:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "10150:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10150:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1844,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10181:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "10173:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10173:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1846,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10206:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1884,
                  "src": "10198:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10198:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10140:78:5"
            },
            "returnParameters": {
              "id": 1848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10236:0:5"
            },
            "scope": 1950,
            "src": "10123:370:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1926,
              "nodeType": "Block",
              "src": "10890:321:5",
              "statements": [
                {
                  "assignments": [
                    1895
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1895,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "10908:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1926,
                      "src": "10900:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1894,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10900:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1900,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1897,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1887,
                        "src": "10937:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1898,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1889,
                        "src": "10944:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1896,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1504,
                      "src": "10927:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 1899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10927:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10900:52:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1901,
                      "name": "currentAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1895,
                      "src": "10966:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10991:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1903,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10991:7:5",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 1902,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "10986:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 1905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10986:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 1906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "10986:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10966:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1925,
                  "nodeType": "IfStatement",
                  "src": "10962:243:5",
                  "trueBody": {
                    "id": 1924,
                    "nodeType": "Block",
                    "src": "11005:200:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1909,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1895,
                                "src": "11027:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1910,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1891,
                                "src": "11047:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11027:26:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                              "id": 1912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11055:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              },
                              "value": "ERC20: insufficient allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              }
                            ],
                            "id": 1908,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11019:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11019:68:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1914,
                        "nodeType": "ExpressionStatement",
                        "src": "11019:68:5"
                      },
                      {
                        "id": 1923,
                        "nodeType": "UncheckedBlock",
                        "src": "11101:94:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1916,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1887,
                                  "src": "11138:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1917,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1889,
                                  "src": "11145:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1920,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1918,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1895,
                                    "src": "11154:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1919,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1891,
                                    "src": "11173:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11154:25:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1915,
                                "name": "_approve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1884,
                                "src": "11129:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 1921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11129:51:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1922,
                            "nodeType": "ExpressionStatement",
                            "src": "11129:51:5"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1885,
              "nodeType": "StructuredDocumentation",
              "src": "10499:266:5",
              "text": " @dev Spend `amount` form the allowance of `owner` toward `spender`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
            },
            "id": 1927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_spendAllowance",
            "nameLocation": "10779:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1887,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10812:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1927,
                  "src": "10804:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10804:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1889,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10835:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1927,
                  "src": "10827:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10827:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1891,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10860:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1927,
                  "src": "10852:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10852:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10794:78:5"
            },
            "returnParameters": {
              "id": 1893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10890:0:5"
            },
            "scope": 1950,
            "src": "10770:441:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1937,
              "nodeType": "Block",
              "src": "11914:2:5",
              "statements": []
            },
            "documentation": {
              "id": 1928,
              "nodeType": "StructuredDocumentation",
              "src": "11217:573:5",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1938,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "11804:20:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1930,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11842:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1938,
                  "src": "11834:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11834:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1932,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11864:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1938,
                  "src": "11856:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11856:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1934,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11884:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1938,
                  "src": "11876:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11876:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11824:72:5"
            },
            "returnParameters": {
              "id": 1936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11914:0:5"
            },
            "scope": 1950,
            "src": "11795:121:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1948,
              "nodeType": "Block",
              "src": "12622:2:5",
              "statements": []
            },
            "documentation": {
              "id": 1939,
              "nodeType": "StructuredDocumentation",
              "src": "11922:577:5",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1949,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "12513:19:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1941,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12550:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "12542:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12542:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1943,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12572:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "12564:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12564:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1945,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12592:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1949,
                  "src": "12584:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12584:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12532:72:5"
            },
            "returnParameters": {
              "id": 1947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12622:0:5"
            },
            "scope": 1950,
            "src": "12504:120:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1951,
        "src": "1403:11223:5"
      }
    ],
    "src": "105:12522:5"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000b5538038062000b558339810160408190526200003491620001c1565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108ca806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b4114610149578063a457c2d714610151578063a9059cbb14610164578063dd62ed3e14610177576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101b0565b6040516100c391906107e2565b60405180910390f35b6100df6100da3660046107b9565b610242565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461077e565b61025a565b604051601281526020016100c3565b6100df6101313660046107b9565b61027e565b6100f361014436600461072b565b6102bd565b6100b66102dc565b6100df61015f3660046107b9565b6102eb565b6100df6101723660046107b9565b610382565b6100f361018536600461074c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101bf90610859565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb90610859565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b5050505050905090565b600033610250818585610390565b5060019392505050565b6000336102688582856104b4565b610273858585610546565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061025090829086906102b8908790610835565b610390565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101bf90610859565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103755760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102738286868403610390565b600033610250818585610546565b6001600160a01b0383166103f25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161036c565b6001600160a01b0382166104535760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161036c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461054057818110156105335760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161036c565b6105408484848403610390565b50505050565b6001600160a01b0383166105aa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161036c565b6001600160a01b03821661060c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161036c565b6001600160a01b038316600090815260208190526040902054818110156106845760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161036c565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106bb908490610835565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070791815260200190565b60405180910390a3610540565b80356001600160a01b03811681146102d757600080fd5b60006020828403121561073c578081fd5b61074582610714565b9392505050565b6000806040838503121561075e578081fd5b61076783610714565b915061077560208401610714565b90509250929050565b600080600060608486031215610792578081fd5b61079b84610714565b92506107a960208501610714565b9150604084013590509250925092565b600080604083850312156107cb578182fd5b6107d483610714565b946020939093013593505050565b6000602080835283518082850152825b8181101561080e578581018301518582016040015282016107f2565b8181111561081f5783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561085457634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061086d57607f821691505b6020821081141561088e57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212205bacbea4d9d589715fbd563905789859eecf9693731b59cb213f6220f9a96fdf64736f6c63430008030033",
  "bytecodeSha1": "5b1cc896b1c8882b403de345d0b351635672db41",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "13": {},
      "5": {
        "ERC20._approve": {
          "30": [
            10254,
            10273,
            true
          ],
          "31": [
            10332,
            10353,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "32": [
            10966,
            11003,
            false
          ],
          "33": [
            11027,
            11053,
            true
          ]
        },
        "ERC20._transfer": {
          "34": [
            7614,
            7632,
            true
          ],
          "35": [
            7692,
            7708,
            true
          ],
          "36": [
            7863,
            7884,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "29": [
            6815,
            6850,
            true
          ]
        }
      },
      "6": {},
      "7": {}
    },
    "statements": {
      "13": {
        "Context._msgSender": {
          "4": [
            712,
            729
          ]
        }
      },
      "5": {
        "ERC20._approve": {
          "16": [
            10246,
            10314
          ],
          "17": [
            10324,
            10392
          ],
          "18": [
            10403,
            10439
          ],
          "19": [
            10449,
            10486
          ]
        },
        "ERC20._spendAllowance": {
          "20": [
            11019,
            11087
          ],
          "21": [
            11129,
            11180
          ]
        },
        "ERC20._transfer": {
          "22": [
            7606,
            7674
          ],
          "23": [
            7684,
            7748
          ],
          "24": [
            7855,
            7927
          ],
          "25": [
            7961,
            7999
          ],
          "26": [
            8019,
            8042
          ],
          "27": [
            8053,
            8084
          ],
          "28": [
            8095,
            8132
          ]
        },
        "ERC20.allowance": {
          "2": [
            4084,
            4118
          ]
        },
        "ERC20.approve": {
          "5": [
            4570,
            4602
          ],
          "6": [
            4612,
            4623
          ]
        },
        "ERC20.balanceOf": {
          "11": [
            3501,
            3526
          ]
        },
        "ERC20.decimals": {
          "1": [
            3168,
            3177
          ]
        },
        "ERC20.decreaseAllowance": {
          "13": [
            6807,
            6892
          ],
          "14": [
            6926,
            6986
          ]
        },
        "ERC20.increaseAllowance": {
          "10": [
            6015,
            6081
          ]
        },
        "ERC20.name": {
          "3": [
            2235,
            2247
          ]
        },
        "ERC20.symbol": {
          "12": [
            2448,
            2462
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3324,
            3343
          ]
        },
        "ERC20.transfer": {
          "15": [
            3862,
            3890
          ]
        },
        "ERC20.transferFrom": {
          "7": [
            5375,
            5413
          ],
          "8": [
            5423,
            5450
          ],
          "9": [
            5460,
            5471
          ]
        }
      },
      "6": {},
      "7": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b4114610149578063a457c2d714610151578063a9059cbb14610164578063dd62ed3e14610177576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101b0565b6040516100c391906107e2565b60405180910390f35b6100df6100da3660046107b9565b610242565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461077e565b61025a565b604051601281526020016100c3565b6100df6101313660046107b9565b61027e565b6100f361014436600461072b565b6102bd565b6100b66102dc565b6100df61015f3660046107b9565b6102eb565b6100df6101723660046107b9565b610382565b6100f361018536600461074c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101bf90610859565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb90610859565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b5050505050905090565b600033610250818585610390565b5060019392505050565b6000336102688582856104b4565b610273858585610546565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061025090829086906102b8908790610835565b610390565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101bf90610859565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103755760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102738286868403610390565b600033610250818585610546565b6001600160a01b0383166103f25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161036c565b6001600160a01b0382166104535760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161036c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461054057818110156105335760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161036c565b6105408484848403610390565b50505050565b6001600160a01b0383166105aa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161036c565b6001600160a01b03821661060c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161036c565b6001600160a01b038316600090815260208190526040902054818110156106845760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161036c565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106bb908490610835565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070791815260200190565b60405180910390a3610540565b80356001600160a01b03811681146102d757600080fd5b60006020828403121561073c578081fd5b61074582610714565b9392505050565b6000806040838503121561075e578081fd5b61076783610714565b915061077560208401610714565b90509250929050565b600080600060608486031215610792578081fd5b61079b84610714565b92506107a960208501610714565b9150604084013590509250925092565b600080604083850312156107cb578182fd5b6107d483610714565b946020939093013593505050565b6000602080835283518082850152825b8181101561080e578581018301518582016040015282016107f2565b8181111561081f5783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561085457634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061086d57607f821691505b6020821081141561088e57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212205bacbea4d9d589715fbd563905789859eecf9693731b59cb213f6220f9a96fdf64736f6c63430008030033",
  "deployedSourceMap": "1403:11223:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1445:14:20;;1438:22;1420:41;;1408:2;1393:18;4433:197:5;1375:92:20;3244:106:5;3331:12;;3244:106;;;5015:25:20;;;5003:2;4988:18;3244:106:5;4970:76:20;5192:286:5;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;5193:36:20;;5181:2;5166:18;3093:91:5;5148:87:20;5873:236:5;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;;:::i;2367:102::-;;;:::i;6596:429::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:5;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:13;4570:32:5;719:10:13;4586:7:5;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:5;;4433:197;-1:-1:-1;;;4433:197:5:o;5192:286::-;5319:4;719:10:13;5375:38:5;5391:4;719:10:13;5406:6:5;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:5;;5192:286;-1:-1:-1;;;;5192:286:5:o;5873:236::-;719:10:13;5961:4:5;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:5;;;;;;;;;;5961:4;;719:10:13;6015:66:5;;719:10:13;;6040:27:5;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;3408:125::-;-1:-1:-1;;;;;3508:18:5;;3482:7;3508:18;;;;;;;;;;;3408:125;;;;:::o;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6596:429::-;719:10:13;6689:4:5;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:5;;;;;;;;;;6689:4;;719:10:13;6815:35:5;;;;6807:85;;;;-1:-1:-1;;;6807:85:5;;4665:2:20;6807:85:5;;;4647:21:20;4704:2;4684:18;;;4677:30;4743:34;4723:18;;;4716:62;-1:-1:-1;;;4794:18:20;;;4787:35;4839:19;;6807:85:5;;;;;;;;;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;3729:189::-;3808:4;719:10:13;3862:28:5;719:10:13;3879:2:5;3883:6;3862:9;:28::i;10123:370::-;-1:-1:-1;;;;;10254:19:5;;10246:68;;;;-1:-1:-1;;;10246:68:5;;4260:2:20;10246:68:5;;;4242:21:20;4299:2;4279:18;;;4272:30;4338:34;4318:18;;;4311:62;-1:-1:-1;;;4389:18:20;;;4382:34;4433:19;;10246:68:5;4232:226:20;10246:68:5;-1:-1:-1;;;;;10332:21:5;;10324:68;;;;-1:-1:-1;;;10324:68:5;;2686:2:20;10324:68:5;;;2668:21:20;2725:2;2705:18;;;2698:30;2764:34;2744:18;;;2737:62;-1:-1:-1;;;2815:18:20;;;2808:32;2857:19;;10324:68:5;2658:224:20;10324:68:5;-1:-1:-1;;;;;10403:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;5015:25:20;;;10454:32:5;;4988:18:20;10454:32:5;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:5;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:5;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:5;;3089:2:20;11019:68:5;;;3071:21:20;3128:2;3108:18;;;3101:30;3167:31;3147:18;;;3140:59;3216:18;;11019:68:5;3061:179:20;11019:68:5;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10770:441;;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:5;;7606:68;;;;-1:-1:-1;;;7606:68:5;;3854:2:20;7606:68:5;;;3836:21:20;3893:2;3873:18;;;3866:30;3932:34;3912:18;;;3905:62;-1:-1:-1;;;3983:18:20;;;3976:35;4028:19;;7606:68:5;3826:227:20;7606:68:5;-1:-1:-1;;;;;7692:16:5;;7684:64;;;;-1:-1:-1;;;7684:64:5;;2282:2:20;7684:64:5;;;2264:21:20;2321:2;2301:18;;;2294:30;2360:34;2340:18;;;2333:62;-1:-1:-1;;;2411:18:20;;;2404:33;2454:19;;7684:64:5;2254:225:20;7684:64:5;-1:-1:-1;;;;;7830:15:5;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:5;;3447:2:20;7855:72:5;;;3429:21:20;3486:2;3466:18;;;3459:30;3525:34;3505:18;;;3498:62;-1:-1:-1;;;3576:18:20;;;3569:36;3622:19;;7855:72:5;3419:228:20;7855:72:5;-1:-1:-1;;;;;7961:15:5;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:5;8067:4;-1:-1:-1;;;;;8058:26:5;;8077:6;8058:26;;;;5015:25:20;;5003:2;4988:18;;4970:76;8058:26:5;;;;;;;;8095:37;11795:121;14:173:20;82:20;;-1:-1:-1;;;;;131:31:20;;121:42;;111:2;;177:1;174;167:12;192:196;;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:20:o;393:270::-;;;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;;;;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:20:o;1472:603::-;;1613:2;1642;1631:9;1624:21;1674:6;1668:13;1717:6;1712:2;1701:9;1697:18;1690:34;1742:4;1755:140;1769:6;1766:1;1763:13;1755:140;;;1864:14;;;1860:23;;1854:30;1830:17;;;1849:2;1826:26;1819:66;1784:10;;1755:140;;;1913:6;1910:1;1907:13;1904:2;;;1983:4;1978:2;1969:6;1958:9;1954:22;1950:31;1943:45;1904:2;-1:-1:-1;2059:2:20;2038:15;-1:-1:-1;;2034:29:20;2019:45;;;;2066:2;2015:54;;1593:482;-1:-1:-1;;;1593:482:20:o;5240:229::-;;5311:1;5307:6;5304:1;5301:13;5298:2;;;-1:-1:-1;;;5337:33:20;;5393:4;5390:1;5383:15;5423:4;5344:3;5411:17;5298:2;-1:-1:-1;5454:9:20;;5288:181::o;5474:380::-;5553:1;5549:12;;;;5596;;;5617:2;;5671:4;5663:6;5659:17;5649:27;;5617:2;5724;5716:6;5713:14;5693:18;5690:38;5687:2;;;5770:10;5765:3;5761:20;5758:1;5751:31;5805:4;5802:1;5795:15;5833:4;5830:1;5823:15;5687:2;;5529:325;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1403,
    12626
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x177 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x2BD JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2DC JUMP JUMPDEST PUSH2 0xDF PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x2EB JUMP JUMPDEST PUSH2 0xDF PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x74C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x859 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EB SWAP1 PUSH2 0x859 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x238 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x238 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x250 DUP2 DUP6 DUP6 PUSH2 0x390 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x268 DUP6 DUP3 DUP6 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x273 DUP6 DUP6 DUP6 PUSH2 0x546 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x250 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x2B8 SWAP1 DUP8 SWAP1 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x859 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x375 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x273 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x390 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x250 DUP2 DUP6 DUP6 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x453 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x540 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36C JUMP JUMPDEST PUSH2 0x540 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x390 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x684 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6BB SWAP1 DUP5 SWAP1 PUSH2 0x835 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x707 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x540 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x745 DUP3 PUSH2 0x714 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x767 DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP2 POP PUSH2 0x775 PUSH1 0x20 DUP5 ADD PUSH2 0x714 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x792 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x79B DUP5 PUSH2 0x714 JUMP JUMPDEST SWAP3 POP PUSH2 0x7A9 PUSH1 0x20 DUP6 ADD PUSH2 0x714 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x7D4 DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x80E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7F2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x81F JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x854 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x86D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x88E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xAC 0xBE LOG4 0xD9 0xD5 DUP10 PUSH18 0x5FBD563905789859EECF9693731B59CB213F PUSH3 0x20F9A9 PUSH16 0xDF64736F6C6343000803003300000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x123"
    },
    "53": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x136"
    },
    "64": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x149"
    },
    "75": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x151"
    },
    "86": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x164"
    },
    "97": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "5"
    },
    "105": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x177"
    },
    "108": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "109": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA9"
    },
    "112": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMP",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "5"
    },
    "132": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC"
    },
    "135": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "136": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "137": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "5"
    },
    "143": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEF"
    },
    "146": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "147": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "5"
    },
    "154": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "158": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "EQ",
      "path": "5"
    },
    "165": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "169": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "170": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1403,
        12626
      ],
      "op": "REVERT",
      "path": "5"
    },
    "174": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "175": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B0"
    },
    "181": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "5"
    },
    "182": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "183": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC3"
    },
    "189": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "190": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "191": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7E2"
    },
    "194": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "5"
    },
    "195": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "196": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "198": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "199": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "5"
    },
    "200": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "201": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SUB",
      "path": "5"
    },
    "202": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "203": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "RETURN",
      "path": "5"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "205": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF"
    },
    "208": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDA"
    },
    "211": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "212": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "214": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7B9"
    },
    "217": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "5"
    },
    "218": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x242"
    },
    "222": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "5"
    },
    "223": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "224": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "226": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC3"
    },
    "238": {
      "op": "JUMP"
    },
    "239": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "240": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 0,
      "value": "0x2"
    },
    "242": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "243": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "244": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "247": {
      "op": "SWAP1"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC3"
    },
    "256": {
      "op": "JUMP"
    },
    "257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF"
    },
    "261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x77E"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "5"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25A"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "5"
    },
    "276": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "277": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "280": {
      "fn": "ERC20.decimals",
      "offset": [
        3175,
        3177
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0x12"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC3"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF"
    },
    "295": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x131"
    },
    "298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7B9"
    },
    "304": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "5"
    },
    "305": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "306": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27E"
    },
    "309": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "5"
    },
    "310": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "311": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF3"
    },
    "314": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x144"
    },
    "317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "318": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x72B"
    },
    "323": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "5"
    },
    "324": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "325": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BD"
    },
    "328": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "5"
    },
    "329": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "330": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB6"
    },
    "333": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DC"
    },
    "336": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMP",
      "path": "5"
    },
    "337": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "338": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF"
    },
    "341": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "345": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7B9"
    },
    "350": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "5"
    },
    "351": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "352": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2EB"
    },
    "355": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "5"
    },
    "356": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "357": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF"
    },
    "360": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "364": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7B9"
    },
    "369": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMP",
      "path": "5"
    },
    "370": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "371": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x382"
    },
    "374": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMP",
      "path": "5"
    },
    "375": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "376": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF3"
    },
    "379": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "383": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x74C"
    },
    "388": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "5"
    },
    "389": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "396": {
      "op": "SHL"
    },
    "397": {
      "op": "SUB"
    },
    "398": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 2
    },
    "399": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP3",
      "path": "5"
    },
    "400": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "5"
    },
    "401": {
      "fn": "ERC20.allowance",
      "offset": [
        4065,
        4072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "403": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "404": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "5"
    },
    "405": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "406": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "408": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "410": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "411": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "5"
    },
    "412": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "413": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "415": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "5"
    },
    "416": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "5"
    },
    "417": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "418": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "419": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "420": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "421": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "5"
    },
    "422": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP3",
      "path": "5"
    },
    "423": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "424": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "425": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "426": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "427": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "428": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "429": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "430": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "431": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "5"
    },
    "432": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "433": {
      "fn": "ERC20.name",
      "offset": [
        2210,
        2223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "435": {
      "fn": "ERC20.name",
      "offset": [
        2242,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x3"
    },
    "437": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "5"
    },
    "438": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "439": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BF"
    },
    "442": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "443": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x859"
    },
    "446": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "5"
    },
    "447": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "448": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "5"
    },
    "449": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "451": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "5"
    },
    "452": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "454": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "5"
    },
    "455": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "456": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "5"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "5"
    },
    "458": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "5"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "463": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "5"
    },
    "466": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "5"
    },
    "467": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "5"
    },
    "471": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "472": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "5"
    },
    "475": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "5"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "5"
    },
    "480": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "5"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "5"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1EB"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x859"
    },
    "490": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "5"
    },
    "491": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "5"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x238"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "5"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "LT",
      "path": "5"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20D"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "506": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "5"
    },
    "510": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "5"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "5"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "5"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "5"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "517": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "5"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x238"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "5"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "5"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "5"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "530": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "540": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "5"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "5"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "5"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "5"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "5"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "5"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "GT",
      "path": "5"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21B"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "5"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SUB",
      "path": "5"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "564": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "AND",
      "path": "5"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "5"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "5"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "568": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "5"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "5"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "5"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "5"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "5"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "5"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "577": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "5"
    },
    "578": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "579": {
      "fn": "ERC20.approve",
      "offset": [
        4516,
        4520
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "581": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13",
      "statement": 4
    },
    "582": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 5,
      "value": "0x250"
    },
    "585": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "13"
    },
    "586": {
      "fn": "ERC20.approve",
      "offset": [
        4586,
        4593
      ],
      "op": "DUP6",
      "path": "5"
    },
    "587": {
      "fn": "ERC20.approve",
      "offset": [
        4595,
        4601
      ],
      "op": "DUP6",
      "path": "5"
    },
    "588": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4578
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x390"
    },
    "591": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMP",
      "path": "5"
    },
    "592": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "593": {
      "op": "POP"
    },
    "594": {
      "fn": "ERC20.approve",
      "offset": [
        4619,
        4623
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 6,
      "value": "0x1"
    },
    "596": {
      "fn": "ERC20.approve",
      "offset": [
        4619,
        4623
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "597": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "598": {
      "op": "POP"
    },
    "599": {
      "op": "POP"
    },
    "600": {
      "op": "POP"
    },
    "601": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "5"
    },
    "602": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "603": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5319,
        5323
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "605": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13"
    },
    "606": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 7,
      "value": "0x268"
    },
    "609": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5391,
        5395
      ],
      "op": "DUP6",
      "path": "5"
    },
    "610": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "13"
    },
    "611": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5406,
        5412
      ],
      "op": "DUP6",
      "path": "5"
    },
    "612": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5390
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4B4"
    },
    "615": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMP",
      "path": "5"
    },
    "616": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "617": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 8,
      "value": "0x273"
    },
    "620": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5433,
        5437
      ],
      "op": "DUP6",
      "path": "5"
    },
    "621": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5439,
        5441
      ],
      "op": "DUP6",
      "path": "5"
    },
    "622": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5443,
        5449
      ],
      "op": "DUP6",
      "path": "5"
    },
    "623": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5432
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x546"
    },
    "626": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMP",
      "path": "5"
    },
    "627": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "628": {
      "op": "POP"
    },
    "629": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5467,
        5471
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 9,
      "value": "0x1"
    },
    "631": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5467,
        5471
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "632": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "633": {
      "op": "POP"
    },
    "634": {
      "op": "POP"
    },
    "635": {
      "op": "POP"
    },
    "636": {
      "op": "POP"
    },
    "637": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "5"
    },
    "638": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "639": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13"
    },
    "640": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "642": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 10
    },
    "643": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "5"
    },
    "644": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "645": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6051
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "647": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "649": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "650": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "5"
    },
    "651": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "652": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "654": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP1",
      "path": "5"
    },
    "655": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP4",
      "path": "5"
    },
    "656": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "663": {
      "op": "SHL"
    },
    "664": {
      "op": "SUB"
    },
    "665": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP8",
      "path": "5"
    },
    "666": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "AND",
      "path": "5"
    },
    "667": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP5",
      "path": "5"
    },
    "668": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "669": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "670": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "671": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "672": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP2",
      "path": "5"
    },
    "673": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "674": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "675": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "676": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "677": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "678": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x250"
    },
    "681": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "682": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "13"
    },
    "683": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "684": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP7",
      "path": "5"
    },
    "685": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "686": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B8"
    },
    "689": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "690": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "DUP8",
      "path": "5"
    },
    "691": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "692": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x835"
    },
    "695": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMP",
      "path": "5"
    },
    "696": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "697": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6023
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x390"
    },
    "700": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6015,
        6081
      ],
      "op": "JUMP",
      "path": "5"
    },
    "701": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "708": {
      "op": "SHL"
    },
    "709": {
      "op": "SUB"
    },
    "710": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 11
    },
    "711": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "AND",
      "path": "5"
    },
    "712": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "714": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "715": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "5"
    },
    "716": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "717": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "719": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "5"
    },
    "720": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "721": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "722": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "724": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "725": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "726": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "727": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "728": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "729": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "730": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "POP",
      "path": "5"
    },
    "731": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "5"
    },
    "732": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "733": {
      "fn": "ERC20.symbol",
      "offset": [
        2423,
        2436
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "735": {
      "fn": "ERC20.symbol",
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 12,
      "value": "0x4"
    },
    "737": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "DUP1",
      "path": "5"
    },
    "738": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "739": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BF"
    },
    "742": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "743": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x859"
    },
    "746": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2448,
        2462
      ],
      "op": "JUMP",
      "path": "5"
    },
    "747": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "748": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13"
    },
    "749": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "751": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "5"
    },
    "752": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "5"
    },
    "753": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "754": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6781
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "756": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "758": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "759": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "5"
    },
    "760": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "761": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "763": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP1",
      "path": "5"
    },
    "764": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP4",
      "path": "5"
    },
    "765": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "772": {
      "op": "SHL"
    },
    "773": {
      "op": "SUB"
    },
    "774": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP8",
      "path": "5"
    },
    "775": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "AND",
      "path": "5"
    },
    "776": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP5",
      "path": "5"
    },
    "777": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "778": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "779": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "780": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "781": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP2",
      "path": "5"
    },
    "782": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "783": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "784": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "785": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "786": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "787": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 13
    },
    "788": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP2",
      "path": "5"
    },
    "789": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "LT",
      "path": "5"
    },
    "790": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "791": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x375"
    },
    "794": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "795": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "797": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "798": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "802": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "804": {
      "op": "SHL"
    },
    "805": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP2",
      "path": "5"
    },
    "806": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "809": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "811": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP3",
      "path": "5"
    },
    "812": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "ADD",
      "path": "5"
    },
    "813": {
      "op": "MSTORE"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "818": {
      "op": "DUP3"
    },
    "819": {
      "op": "ADD"
    },
    "820": {
      "op": "MSTORE"
    },
    "821": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "856": {
      "op": "DUP3"
    },
    "857": {
      "op": "ADD"
    },
    "858": {
      "op": "MSTORE"
    },
    "859": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "865": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "867": {
      "op": "SHL"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "870": {
      "op": "DUP3"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "875": {
      "op": "ADD"
    },
    "876": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "877": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "879": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "880": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP1",
      "path": "5"
    },
    "881": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "882": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "SUB",
      "path": "5"
    },
    "883": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "884": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "885": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "886": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6986
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 14,
      "value": "0x273"
    },
    "889": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6935,
        6940
      ],
      "op": "DUP3",
      "path": "5"
    },
    "890": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6942,
        6949
      ],
      "op": "DUP7",
      "path": "5"
    },
    "891": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6970,
        6985
      ],
      "op": "DUP7",
      "path": "5"
    },
    "892": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6967
      ],
      "op": "DUP5",
      "path": "5"
    },
    "893": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6985
      ],
      "op": "SUB",
      "path": "5"
    },
    "894": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6934
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x390"
    },
    "897": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6926,
        6986
      ],
      "op": "JUMP",
      "path": "5"
    },
    "898": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "899": {
      "fn": "ERC20.transfer",
      "offset": [
        3808,
        3812
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "901": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13"
    },
    "902": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3890
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 15,
      "value": "0x250"
    },
    "905": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "13"
    },
    "906": {
      "fn": "ERC20.transfer",
      "offset": [
        3879,
        3881
      ],
      "op": "DUP6",
      "path": "5"
    },
    "907": {
      "fn": "ERC20.transfer",
      "offset": [
        3883,
        3889
      ],
      "op": "DUP6",
      "path": "5"
    },
    "908": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3871
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x546"
    },
    "911": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3862,
        3890
      ],
      "op": "JUMP",
      "path": "5"
    },
    "912": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "919": {
      "op": "SHL"
    },
    "920": {
      "op": "SUB"
    },
    "921": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 16
    },
    "922": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "AND",
      "path": "5"
    },
    "923": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F2"
    },
    "926": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "927": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "929": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "930": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "934": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "936": {
      "op": "SHL"
    },
    "937": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP2",
      "path": "5"
    },
    "938": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "941": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "943": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP3",
      "path": "5"
    },
    "944": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "ADD",
      "path": "5"
    },
    "945": {
      "op": "MSTORE"
    },
    "946": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "948": {
      "op": "DUP1"
    },
    "949": {
      "op": "DUP3"
    },
    "950": {
      "op": "ADD"
    },
    "951": {
      "op": "MSTORE"
    },
    "952": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "987": {
      "op": "DUP3"
    },
    "988": {
      "op": "ADD"
    },
    "989": {
      "op": "MSTORE"
    },
    "990": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "995": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "997": {
      "op": "SHL"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1000": {
      "op": "DUP3"
    },
    "1001": {
      "op": "ADD"
    },
    "1002": {
      "op": "MSTORE"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1005": {
      "op": "ADD"
    },
    "1006": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1009": {
      "op": "JUMP"
    },
    "1010": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1017": {
      "op": "SHL"
    },
    "1018": {
      "op": "SUB"
    },
    "1019": {
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 17
    },
    "1020": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "AND",
      "path": "5"
    },
    "1021": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x453"
    },
    "1024": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1025": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1027": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1028": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1034": {
      "op": "SHL"
    },
    "1035": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1036": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1039": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1041": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1042": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "ADD",
      "path": "5"
    },
    "1043": {
      "op": "MSTORE"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1048": {
      "op": "DUP3"
    },
    "1049": {
      "op": "ADD"
    },
    "1050": {
      "op": "MSTORE"
    },
    "1051": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1086": {
      "op": "DUP3"
    },
    "1087": {
      "op": "ADD"
    },
    "1088": {
      "op": "MSTORE"
    },
    "1089": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1094": {
      "op": "SHL"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1097": {
      "op": "DUP3"
    },
    "1098": {
      "op": "ADD"
    },
    "1099": {
      "op": "MSTORE"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1102": {
      "op": "ADD"
    },
    "1103": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1106": {
      "op": "JUMP"
    },
    "1107": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1114": {
      "op": "SHL"
    },
    "1115": {
      "op": "SUB"
    },
    "1116": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 18
    },
    "1117": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1118": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "AND",
      "path": "5"
    },
    "1119": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1121": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1122": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1123": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1124": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10414
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1126": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1128": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1129": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1130": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1131": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1133": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1134": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1135": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1136": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1137": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1138": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "AND",
      "path": "5"
    },
    "1139": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1140": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1141": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1142": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1143": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1144": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1145": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1146": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1147": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1148": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1149": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1150": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1151": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1152": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 19
    },
    "1153": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1154": {
      "op": "DUP5"
    },
    "1155": {
      "op": "DUP2"
    },
    "1156": {
      "op": "MSTORE"
    },
    "1157": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1190": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1191": {
      "op": "ADD"
    },
    "1192": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1194": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1195": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1196": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1197": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SUB",
      "path": "5"
    },
    "1198": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1199": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "LOG3",
      "path": "5"
    },
    "1200": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "5"
    },
    "1201": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "5"
    },
    "1202": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "5"
    },
    "1203": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1204": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1211": {
      "op": "SHL"
    },
    "1212": {
      "op": "SUB"
    },
    "1213": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1214": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1215": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "5"
    },
    "1216": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10900,
        10924
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1218": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1219": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1220": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1221": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1223": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1225": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1226": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1227": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1228": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1230": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1231": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1232": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1233": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1234": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1235": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "5"
    },
    "1236": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1237": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1238": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1239": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1240": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1241": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1242": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1245": {
      "op": "NOT"
    },
    "1246": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1247": {
      "branch": 32,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "EQ",
      "path": "5"
    },
    "1248": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x540"
    },
    "1251": {
      "branch": 32,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1252": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11047,
        11053
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 20
    },
    "1253": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11043
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1254": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "LT",
      "path": "5"
    },
    "1255": {
      "branch": 33,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1256": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x533"
    },
    "1259": {
      "branch": 33,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1260": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1262": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1263": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1269": {
      "op": "SHL"
    },
    "1270": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1271": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1274": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1276": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1277": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "ADD",
      "path": "5"
    },
    "1278": {
      "op": "MSTORE"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1283": {
      "op": "DUP3"
    },
    "1284": {
      "op": "ADD"
    },
    "1285": {
      "op": "MSTORE"
    },
    "1286": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1321": {
      "op": "DUP3"
    },
    "1322": {
      "op": "ADD"
    },
    "1323": {
      "op": "MSTORE"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1326": {
      "op": "ADD"
    },
    "1327": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1330": {
      "op": "JUMP"
    },
    "1331": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1332": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 21,
      "value": "0x540"
    },
    "1335": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11138,
        11143
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1336": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11145,
        11152
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1337": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11173,
        11179
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1338": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11170
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1339": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11179
      ],
      "op": "SUB",
      "path": "5"
    },
    "1340": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11137
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x390"
    },
    "1343": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1344": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1345": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "5"
    },
    "1346": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "5"
    },
    "1347": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "5"
    },
    "1348": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "5"
    },
    "1349": {
      "fn": "ERC20._spendAllowance",
      "jump": "o",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1350": {
      "fn": "ERC20._transfer",
      "offset": [
        7488,
        8139
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1357": {
      "op": "SHL"
    },
    "1358": {
      "op": "SUB"
    },
    "1359": {
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 22
    },
    "1360": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "AND",
      "path": "5"
    },
    "1361": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5AA"
    },
    "1364": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1365": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1367": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1374": {
      "op": "SHL"
    },
    "1375": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1376": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1379": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1381": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1382": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "ADD",
      "path": "5"
    },
    "1383": {
      "op": "MSTORE"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1388": {
      "op": "DUP3"
    },
    "1389": {
      "op": "ADD"
    },
    "1390": {
      "op": "MSTORE"
    },
    "1391": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1426": {
      "op": "DUP3"
    },
    "1427": {
      "op": "ADD"
    },
    "1428": {
      "op": "MSTORE"
    },
    "1429": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1437": {
      "op": "SHL"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1440": {
      "op": "DUP3"
    },
    "1441": {
      "op": "ADD"
    },
    "1442": {
      "op": "MSTORE"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1445": {
      "op": "ADD"
    },
    "1446": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1449": {
      "op": "JUMP"
    },
    "1450": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1457": {
      "op": "SHL"
    },
    "1458": {
      "op": "SUB"
    },
    "1459": {
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 23
    },
    "1460": {
      "branch": 35,
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "AND",
      "path": "5"
    },
    "1461": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x60C"
    },
    "1464": {
      "branch": 35,
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1465": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1467": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1468": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1474": {
      "op": "SHL"
    },
    "1475": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1476": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1479": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1481": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1482": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "ADD",
      "path": "5"
    },
    "1483": {
      "op": "MSTORE"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1488": {
      "op": "DUP3"
    },
    "1489": {
      "op": "ADD"
    },
    "1490": {
      "op": "MSTORE"
    },
    "1491": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1526": {
      "op": "DUP3"
    },
    "1527": {
      "op": "ADD"
    },
    "1528": {
      "op": "MSTORE"
    },
    "1529": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1535": {
      "op": "SHL"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1538": {
      "op": "DUP3"
    },
    "1539": {
      "op": "ADD"
    },
    "1540": {
      "op": "MSTORE"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1543": {
      "op": "ADD"
    },
    "1544": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1547": {
      "op": "JUMP"
    },
    "1548": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1555": {
      "op": "SHL"
    },
    "1556": {
      "op": "SUB"
    },
    "1557": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1558": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "AND",
      "path": "5"
    },
    "1559": {
      "fn": "ERC20._transfer",
      "offset": [
        7808,
        7827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1561": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1562": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1563": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1564": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1566": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1567": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1568": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1569": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1571": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1572": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1573": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1574": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 24
    },
    "1575": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1576": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "LT",
      "path": "5"
    },
    "1577": {
      "branch": 36,
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1578": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x684"
    },
    "1581": {
      "branch": 36,
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1582": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1584": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1585": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1591": {
      "op": "SHL"
    },
    "1592": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1593": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1596": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1598": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1599": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "ADD",
      "path": "5"
    },
    "1600": {
      "op": "MSTORE"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1605": {
      "op": "DUP3"
    },
    "1606": {
      "op": "ADD"
    },
    "1607": {
      "op": "MSTORE"
    },
    "1608": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1643": {
      "op": "DUP3"
    },
    "1644": {
      "op": "ADD"
    },
    "1645": {
      "op": "MSTORE"
    },
    "1646": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1655": {
      "op": "SHL"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1658": {
      "op": "DUP3"
    },
    "1659": {
      "op": "ADD"
    },
    "1660": {
      "op": "MSTORE"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1663": {
      "op": "ADD"
    },
    "1664": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36C"
    },
    "1667": {
      "op": "JUMP"
    },
    "1668": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "op": "SUB"
    },
    "1677": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 25
    },
    "1678": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1679": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "AND",
      "path": "5"
    },
    "1680": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1682": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1683": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1684": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1685": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1687": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1688": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1689": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1690": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1692": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1693": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1694": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1695": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1696": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1697": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "SUB",
      "path": "5"
    },
    "1698": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1699": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1700": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 26
    },
    "1701": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1702": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "AND",
      "path": "5"
    },
    "1703": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1704": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1705": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1706": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1707": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1708": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1709": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1710": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1711": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1712": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1713": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6BB"
    },
    "1716": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1717": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1718": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1719": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x835"
    },
    "1722": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1723": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1724": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1725": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "5"
    },
    "1726": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "5"
    },
    "1727": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1728": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1729": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1730": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "5"
    },
    "1731": {
      "fn": "ERC20._transfer",
      "offset": [
        8073,
        8075
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 27
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1738": {
      "op": "SHL"
    },
    "1739": {
      "op": "SUB"
    },
    "1740": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "5"
    },
    "1741": {
      "fn": "ERC20._transfer",
      "offset": [
        8067,
        8071
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1748": {
      "op": "SHL"
    },
    "1749": {
      "op": "SUB"
    },
    "1750": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "5"
    },
    "1751": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1784": {
      "fn": "ERC20._transfer",
      "offset": [
        8077,
        8083
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1785": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1787": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1788": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x707"
    },
    "1791": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1792": {
      "op": "DUP2"
    },
    "1793": {
      "op": "MSTORE"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1796": {
      "op": "ADD"
    },
    "1797": {
      "op": "SWAP1"
    },
    "1798": {
      "op": "JUMP"
    },
    "1799": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1800": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1802": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1803": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1804": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1805": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SUB",
      "path": "5"
    },
    "1806": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1807": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "LOG3",
      "path": "5"
    },
    "1808": {
      "fn": "ERC20._transfer",
      "offset": [
        8095,
        8132
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 28,
      "value": "0x540"
    },
    "1811": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        11795,
        11916
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1812": {
      "op": "JUMPDEST"
    },
    "1813": {
      "op": "DUP1"
    },
    "1814": {
      "op": "CALLDATALOAD"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1821": {
      "op": "SHL"
    },
    "1822": {
      "op": "SUB"
    },
    "1823": {
      "op": "DUP2"
    },
    "1824": {
      "op": "AND"
    },
    "1825": {
      "op": "DUP2"
    },
    "1826": {
      "op": "EQ"
    },
    "1827": {
      "op": "PUSH2",
      "value": "0x2D7"
    },
    "1830": {
      "op": "JUMPI"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1833": {
      "op": "DUP1"
    },
    "1834": {
      "op": "REVERT"
    },
    "1835": {
      "op": "JUMPDEST"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1840": {
      "op": "DUP3"
    },
    "1841": {
      "op": "DUP5"
    },
    "1842": {
      "op": "SUB"
    },
    "1843": {
      "op": "SLT"
    },
    "1844": {
      "op": "ISZERO"
    },
    "1845": {
      "op": "PUSH2",
      "value": "0x73C"
    },
    "1848": {
      "op": "JUMPI"
    },
    "1849": {
      "op": "DUP1"
    },
    "1850": {
      "op": "DUP2"
    },
    "1851": {
      "op": "REVERT"
    },
    "1852": {
      "op": "JUMPDEST"
    },
    "1853": {
      "op": "PUSH2",
      "value": "0x745"
    },
    "1856": {
      "op": "DUP3"
    },
    "1857": {
      "op": "PUSH2",
      "value": "0x714"
    },
    "1860": {
      "jump": "i",
      "op": "JUMP"
    },
    "1861": {
      "op": "JUMPDEST"
    },
    "1862": {
      "op": "SWAP4"
    },
    "1863": {
      "op": "SWAP3"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "op": "POP"
    },
    "1866": {
      "op": "POP"
    },
    "1867": {
      "jump": "o",
      "op": "JUMP"
    },
    "1868": {
      "op": "JUMPDEST"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1871": {
      "op": "DUP1"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1874": {
      "op": "DUP4"
    },
    "1875": {
      "op": "DUP6"
    },
    "1876": {
      "op": "SUB"
    },
    "1877": {
      "op": "SLT"
    },
    "1878": {
      "op": "ISZERO"
    },
    "1879": {
      "op": "PUSH2",
      "value": "0x75E"
    },
    "1882": {
      "op": "JUMPI"
    },
    "1883": {
      "op": "DUP1"
    },
    "1884": {
      "op": "DUP2"
    },
    "1885": {
      "op": "REVERT"
    },
    "1886": {
      "op": "JUMPDEST"
    },
    "1887": {
      "op": "PUSH2",
      "value": "0x767"
    },
    "1890": {
      "op": "DUP4"
    },
    "1891": {
      "op": "PUSH2",
      "value": "0x714"
    },
    "1894": {
      "jump": "i",
      "op": "JUMP"
    },
    "1895": {
      "op": "JUMPDEST"
    },
    "1896": {
      "op": "SWAP2"
    },
    "1897": {
      "op": "POP"
    },
    "1898": {
      "op": "PUSH2",
      "value": "0x775"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1903": {
      "op": "DUP5"
    },
    "1904": {
      "op": "ADD"
    },
    "1905": {
      "op": "PUSH2",
      "value": "0x714"
    },
    "1908": {
      "jump": "i",
      "op": "JUMP"
    },
    "1909": {
      "op": "JUMPDEST"
    },
    "1910": {
      "op": "SWAP1"
    },
    "1911": {
      "op": "POP"
    },
    "1912": {
      "op": "SWAP3"
    },
    "1913": {
      "op": "POP"
    },
    "1914": {
      "op": "SWAP3"
    },
    "1915": {
      "op": "SWAP1"
    },
    "1916": {
      "op": "POP"
    },
    "1917": {
      "jump": "o",
      "op": "JUMP"
    },
    "1918": {
      "op": "JUMPDEST"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1921": {
      "op": "DUP1"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1926": {
      "op": "DUP5"
    },
    "1927": {
      "op": "DUP7"
    },
    "1928": {
      "op": "SUB"
    },
    "1929": {
      "op": "SLT"
    },
    "1930": {
      "op": "ISZERO"
    },
    "1931": {
      "op": "PUSH2",
      "value": "0x792"
    },
    "1934": {
      "op": "JUMPI"
    },
    "1935": {
      "op": "DUP1"
    },
    "1936": {
      "op": "DUP2"
    },
    "1937": {
      "op": "REVERT"
    },
    "1938": {
      "op": "JUMPDEST"
    },
    "1939": {
      "op": "PUSH2",
      "value": "0x79B"
    },
    "1942": {
      "op": "DUP5"
    },
    "1943": {
      "op": "PUSH2",
      "value": "0x714"
    },
    "1946": {
      "jump": "i",
      "op": "JUMP"
    },
    "1947": {
      "op": "JUMPDEST"
    },
    "1948": {
      "op": "SWAP3"
    },
    "1949": {
      "op": "POP"
    },
    "1950": {
      "op": "PUSH2",
      "value": "0x7A9"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1955": {
      "op": "DUP6"
    },
    "1956": {
      "op": "ADD"
    },
    "1957": {
      "op": "PUSH2",
      "value": "0x714"
    },
    "1960": {
      "jump": "i",
      "op": "JUMP"
    },
    "1961": {
      "op": "JUMPDEST"
    },
    "1962": {
      "op": "SWAP2"
    },
    "1963": {
      "op": "POP"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1966": {
      "op": "DUP5"
    },
    "1967": {
      "op": "ADD"
    },
    "1968": {
      "op": "CALLDATALOAD"
    },
    "1969": {
      "op": "SWAP1"
    },
    "1970": {
      "op": "POP"
    },
    "1971": {
      "op": "SWAP3"
    },
    "1972": {
      "op": "POP"
    },
    "1973": {
      "op": "SWAP3"
    },
    "1974": {
      "op": "POP"
    },
    "1975": {
      "op": "SWAP3"
    },
    "1976": {
      "jump": "o",
      "op": "JUMP"
    },
    "1977": {
      "op": "JUMPDEST"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1980": {
      "op": "DUP1"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1983": {
      "op": "DUP4"
    },
    "1984": {
      "op": "DUP6"
    },
    "1985": {
      "op": "SUB"
    },
    "1986": {
      "op": "SLT"
    },
    "1987": {
      "op": "ISZERO"
    },
    "1988": {
      "op": "PUSH2",
      "value": "0x7CB"
    },
    "1991": {
      "op": "JUMPI"
    },
    "1992": {
      "op": "DUP2"
    },
    "1993": {
      "op": "DUP3"
    },
    "1994": {
      "op": "REVERT"
    },
    "1995": {
      "op": "JUMPDEST"
    },
    "1996": {
      "op": "PUSH2",
      "value": "0x7D4"
    },
    "1999": {
      "op": "DUP4"
    },
    "2000": {
      "op": "PUSH2",
      "value": "0x714"
    },
    "2003": {
      "jump": "i",
      "op": "JUMP"
    },
    "2004": {
      "op": "JUMPDEST"
    },
    "2005": {
      "op": "SWAP5"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2008": {
      "op": "SWAP4"
    },
    "2009": {
      "op": "SWAP1"
    },
    "2010": {
      "op": "SWAP4"
    },
    "2011": {
      "op": "ADD"
    },
    "2012": {
      "op": "CALLDATALOAD"
    },
    "2013": {
      "op": "SWAP4"
    },
    "2014": {
      "op": "POP"
    },
    "2015": {
      "op": "POP"
    },
    "2016": {
      "op": "POP"
    },
    "2017": {
      "jump": "o",
      "op": "JUMP"
    },
    "2018": {
      "op": "JUMPDEST"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2023": {
      "op": "DUP1"
    },
    "2024": {
      "op": "DUP4"
    },
    "2025": {
      "op": "MSTORE"
    },
    "2026": {
      "op": "DUP4"
    },
    "2027": {
      "op": "MLOAD"
    },
    "2028": {
      "op": "DUP1"
    },
    "2029": {
      "op": "DUP3"
    },
    "2030": {
      "op": "DUP6"
    },
    "2031": {
      "op": "ADD"
    },
    "2032": {
      "op": "MSTORE"
    },
    "2033": {
      "op": "DUP3"
    },
    "2034": {
      "op": "JUMPDEST"
    },
    "2035": {
      "op": "DUP2"
    },
    "2036": {
      "op": "DUP2"
    },
    "2037": {
      "op": "LT"
    },
    "2038": {
      "op": "ISZERO"
    },
    "2039": {
      "op": "PUSH2",
      "value": "0x80E"
    },
    "2042": {
      "op": "JUMPI"
    },
    "2043": {
      "op": "DUP6"
    },
    "2044": {
      "op": "DUP2"
    },
    "2045": {
      "op": "ADD"
    },
    "2046": {
      "op": "DUP4"
    },
    "2047": {
      "op": "ADD"
    },
    "2048": {
      "op": "MLOAD"
    },
    "2049": {
      "op": "DUP6"
    },
    "2050": {
      "op": "DUP3"
    },
    "2051": {
      "op": "ADD"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2054": {
      "op": "ADD"
    },
    "2055": {
      "op": "MSTORE"
    },
    "2056": {
      "op": "DUP3"
    },
    "2057": {
      "op": "ADD"
    },
    "2058": {
      "op": "PUSH2",
      "value": "0x7F2"
    },
    "2061": {
      "op": "JUMP"
    },
    "2062": {
      "op": "JUMPDEST"
    },
    "2063": {
      "op": "DUP2"
    },
    "2064": {
      "op": "DUP2"
    },
    "2065": {
      "op": "GT"
    },
    "2066": {
      "op": "ISZERO"
    },
    "2067": {
      "op": "PUSH2",
      "value": "0x81F"
    },
    "2070": {
      "op": "JUMPI"
    },
    "2071": {
      "op": "DUP4"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2074": {
      "op": "DUP4"
    },
    "2075": {
      "op": "DUP8"
    },
    "2076": {
      "op": "ADD"
    },
    "2077": {
      "op": "ADD"
    },
    "2078": {
      "op": "MSTORE"
    },
    "2079": {
      "op": "JUMPDEST"
    },
    "2080": {
      "op": "POP"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2083": {
      "op": "ADD"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2086": {
      "op": "NOT"
    },
    "2087": {
      "op": "AND"
    },
    "2088": {
      "op": "SWAP3"
    },
    "2089": {
      "op": "SWAP1"
    },
    "2090": {
      "op": "SWAP3"
    },
    "2091": {
      "op": "ADD"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2094": {
      "op": "ADD"
    },
    "2095": {
      "op": "SWAP4"
    },
    "2096": {
      "op": "SWAP3"
    },
    "2097": {
      "op": "POP"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "op": "POP"
    },
    "2100": {
      "jump": "o",
      "op": "JUMP"
    },
    "2101": {
      "op": "JUMPDEST"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2104": {
      "op": "DUP3"
    },
    "2105": {
      "op": "NOT"
    },
    "2106": {
      "op": "DUP3"
    },
    "2107": {
      "op": "GT"
    },
    "2108": {
      "op": "ISZERO"
    },
    "2109": {
      "op": "PUSH2",
      "value": "0x854"
    },
    "2112": {
      "op": "JUMPI"
    },
    "2113": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2120": {
      "op": "SHL"
    },
    "2121": {
      "op": "DUP2"
    },
    "2122": {
      "op": "MSTORE"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2127": {
      "op": "MSTORE"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2130": {
      "op": "DUP2"
    },
    "2131": {
      "op": "REVERT"
    },
    "2132": {
      "op": "JUMPDEST"
    },
    "2133": {
      "op": "POP"
    },
    "2134": {
      "op": "ADD"
    },
    "2135": {
      "op": "SWAP1"
    },
    "2136": {
      "jump": "o",
      "op": "JUMP"
    },
    "2137": {
      "op": "JUMPDEST"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2140": {
      "op": "DUP2"
    },
    "2141": {
      "op": "DUP2"
    },
    "2142": {
      "op": "SHR"
    },
    "2143": {
      "op": "SWAP1"
    },
    "2144": {
      "op": "DUP3"
    },
    "2145": {
      "op": "AND"
    },
    "2146": {
      "op": "DUP1"
    },
    "2147": {
      "op": "PUSH2",
      "value": "0x86D"
    },
    "2150": {
      "op": "JUMPI"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2153": {
      "op": "DUP3"
    },
    "2154": {
      "op": "AND"
    },
    "2155": {
      "op": "SWAP2"
    },
    "2156": {
      "op": "POP"
    },
    "2157": {
      "op": "JUMPDEST"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2160": {
      "op": "DUP3"
    },
    "2161": {
      "op": "LT"
    },
    "2162": {
      "op": "DUP2"
    },
    "2163": {
      "op": "EQ"
    },
    "2164": {
      "op": "ISZERO"
    },
    "2165": {
      "op": "PUSH2",
      "value": "0x88E"
    },
    "2168": {
      "op": "JUMPI"
    },
    "2169": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2176": {
      "op": "SHL"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2179": {
      "op": "MSTORE"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2184": {
      "op": "MSTORE"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2189": {
      "op": "REVERT"
    },
    "2190": {
      "op": "JUMPDEST"
    },
    "2191": {
      "op": "POP"
    },
    "2192": {
      "op": "SWAP2"
    },
    "2193": {
      "op": "SWAP1"
    },
    "2194": {
      "op": "POP"
    },
    "2195": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "cb4d436f05a2a2957f05f80d28df7f7c318900e7",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = _allowances[owner][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "1403:11223:5:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:5;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;1403:11223;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:11223:5;;;-1:-1:-1;1403:11223:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:909:20;;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;170:13;;-1:-1:-1;;;;;232:10:20;;;229:2;;;245:18;;:::i;:::-;320:2;314:9;288:2;374:13;;-1:-1:-1;;370:22:20;;;394:2;366:31;362:40;350:53;;;418:18;;;438:22;;;415:46;412:2;;;464:18;;:::i;:::-;504:10;500:2;493:22;539:2;531:6;524:18;561:4;551:14;;606:3;601:2;596;588:6;584:15;580:24;577:33;574:2;;;627:5;620;613:20;574:2;653:5;644:14;;667:133;681:2;678:1;675:9;667:133;;;769:14;;;765:23;;759:30;738:14;;;734:23;;727:63;692:10;;;;667:133;;;818:2;815:1;812:9;809:2;;;877:5;872:2;867;859:6;855:15;851:24;844:39;809:2;911:6;78:845;-1:-1:-1;;;;;;78:845:20:o;928:592::-;;;1088:2;1076:9;1067:7;1063:23;1059:32;1056:2;;;1109:6;1101;1094:22;1056:2;1141:16;;-1:-1:-1;;;;;1206:14:20;;;1203:2;;;1238:6;1230;1223:22;1203:2;1266:61;1319:7;1310:6;1299:9;1295:22;1266:61;:::i;:::-;1256:71;;1373:2;1362:9;1358:18;1352:25;1336:41;;1402:2;1392:8;1389:16;1386:2;;;1423:6;1415;1408:22;1386:2;;1451:63;1506:7;1495:8;1484:9;1480:24;1451:63;:::i;:::-;1441:73;;;1046:474;;;;;:::o;1525:380::-;1604:1;1600:12;;;;1647;;;1668:2;;1722:4;1714:6;1710:17;1700:27;;1668:2;1775;1767:6;1764:14;1744:18;1741:38;1738:2;;;1821:10;1816:3;1812:20;1809:1;1802:31;1856:4;1853:1;1846:15;1884:4;1881:1;1874:15;1738:2;;1580:325;;;:::o;1910:127::-;1971:10;1966:3;1962:20;1959:1;1952:31;2002:4;1999:1;1992:15;2026:4;2023:1;2016:15;1942:95;1403:11223:5;;;;;;",
  "sourcePath": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
  "type": "contract"
}