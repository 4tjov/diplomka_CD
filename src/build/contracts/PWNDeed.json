{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "did",
          "type": "uint256"
        }
      ],
      "name": "DeedClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum MultiToken.Category",
          "name": "category",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "duration",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "did",
          "type": "uint256"
        }
      ],
      "name": "DeedCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "did",
          "type": "uint256"
        }
      ],
      "name": "DeedRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "did",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "offer",
          "type": "bytes32"
        }
      ],
      "name": "OfferAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "assetAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toBePaid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "did",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "offer",
          "type": "bytes32"
        }
      ],
      "name": "OfferMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "offer",
          "type": "bytes32"
        }
      ],
      "name": "OfferRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "did",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "offer",
          "type": "bytes32"
        }
      ],
      "name": "PaidBack",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PWN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_did",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_offer",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "acceptOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_did",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_did",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetAddress",
          "type": "address"
        },
        {
          "internalType": "enum MultiToken.Category",
          "name": "_assetCategory",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "_duration",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_assetAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deeds",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "duration",
          "type": "uint32"
        },
        {
          "internalType": "uint40",
          "name": "expiration",
          "type": "uint40"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetAddress",
              "type": "address"
            },
            {
              "internalType": "enum MultiToken.Category",
              "name": "category",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct MultiToken.Asset",
          "name": "collateral",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "acceptedOffer",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_did",
          "type": "uint256"
        }
      ],
      "name": "getAcceptedOffer",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_did",
          "type": "uint256"
        }
      ],
      "name": "getBorrower",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_did",
          "type": "uint256"
        }
      ],
      "name": "getDeedCollateral",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetAddress",
              "type": "address"
            },
            {
              "internalType": "enum MultiToken.Category",
              "name": "category",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct MultiToken.Asset",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_offer",
          "type": "bytes32"
        }
      ],
      "name": "getDeedID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_did",
          "type": "uint256"
        }
      ],
      "name": "getDeedStatus",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_did",
          "type": "uint256"
        }
      ],
      "name": "getDuration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_did",
          "type": "uint256"
        }
      ],
      "name": "getExpiration",
      "outputs": [
        {
          "internalType": "uint40",
          "name": "",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_offer",
          "type": "bytes32"
        }
      ],
      "name": "getLender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_offer",
          "type": "bytes32"
        }
      ],
      "name": "getOfferLoan",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetAddress",
              "type": "address"
            },
            {
              "internalType": "enum MultiToken.Category",
              "name": "category",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct MultiToken.Asset",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_did",
          "type": "uint256"
        }
      ],
      "name": "getOffers",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_assetAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_lender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_did",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_toBePaid",
          "type": "uint256"
        }
      ],
      "name": "makeOffer",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "offers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "did",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "toBePaid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "assetAddress",
              "type": "address"
            },
            {
              "internalType": "enum MultiToken.Category",
              "name": "category",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct MultiToken.Asset",
          "name": "loan",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_did",
          "type": "uint256"
        }
      ],
      "name": "repayLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_did",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_offer",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_lender",
          "type": "address"
        }
      ],
      "name": "revokeOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setPWN",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_newUri",
          "type": "string"
        }
      ],
      "name": "setUri",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_offer",
          "type": "bytes32"
        }
      ],
      "name": "toBePaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC1155/ERC1155.sol",
    "10": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/IERC165.sol",
    "13": "contracts/PWNDeed.sol",
    "2": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC1155/IERC1155.sol",
    "4": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
    "8": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "9": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/ERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/PWNDeed.sol",
    "exportedSymbols": {
      "Address": [
        3752
      ],
      "Context": [
        3126
      ],
      "ERC1155": [
        3063
      ],
      "ERC165": [
        3776
      ],
      "IERC1155": [
        3248
      ],
      "IERC1155MetadataURI": [
        3457
      ],
      "IERC1155Receiver": [
        3104
      ],
      "IERC165": [
        3788
      ],
      "IERC20": [
        3326
      ],
      "IERC721": [
        3442
      ],
      "MultiToken": [
        1967
      ],
      "Ownable": [
        1565
      ],
      "PWNDeed": [
        1203
      ]
    },
    "id": 1204,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 394,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:22:13"
      },
      {
        "absolutePath": "/home/vojta/.brownie/packages/PWNFinance/MultiToken@1.0.3/contracts/MultiToken.sol",
        "file": "@pwnfinance/contracts/MultiToken.sol",
        "id": 395,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1204,
        "sourceUnit": 1968,
        "src": "66:46:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 396,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1204,
        "sourceUnit": 1566,
        "src": "113:52:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/vojta/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC1155/ERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "id": 397,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1204,
        "sourceUnit": 3064,
        "src": "166:59:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 398,
              "name": "ERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3063,
              "src": "247:7:13"
            },
            "id": 399,
            "nodeType": "InheritanceSpecifier",
            "src": "247:7:13"
          },
          {
            "baseName": {
              "id": 400,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1565,
              "src": "256:7:13"
            },
            "id": 401,
            "nodeType": "InheritanceSpecifier",
            "src": "256:7:13"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1203,
        "linearizedBaseContracts": [
          1203,
          1565,
          3063,
          3457,
          3248,
          3776,
          3788,
          3126
        ],
        "name": "PWNDeed",
        "nameLocation": "236:7:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "805094c7",
            "id": 403,
            "mutability": "mutable",
            "name": "PWN",
            "nameLocation": "488:3:13",
            "nodeType": "VariableDeclaration",
            "scope": 1203,
            "src": "473:18:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 402,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "473:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "af640d0f",
            "id": 405,
            "mutability": "mutable",
            "name": "id",
            "nameLocation": "587:2:13",
            "nodeType": "VariableDeclaration",
            "scope": 1203,
            "src": "572:17:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 404,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "572:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 407,
            "mutability": "mutable",
            "name": "nonce",
            "nameLocation": "653:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 1203,
            "src": "637:21:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 406,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "637:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "PWNDeed.Deed",
            "id": 424,
            "members": [
              {
                "constant": false,
                "id": 409,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "1385:6:13",
                "nodeType": "VariableDeclaration",
                "scope": 424,
                "src": "1379:12:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 408,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1379:5:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 411,
                "mutability": "mutable",
                "name": "borrower",
                "nameLocation": "1409:8:13",
                "nodeType": "VariableDeclaration",
                "scope": 424,
                "src": "1401:16:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 410,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1401:7:13",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 413,
                "mutability": "mutable",
                "name": "duration",
                "nameLocation": "1434:8:13",
                "nodeType": "VariableDeclaration",
                "scope": 424,
                "src": "1427:15:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 412,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1427:6:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 415,
                "mutability": "mutable",
                "name": "expiration",
                "nameLocation": "1459:10:13",
                "nodeType": "VariableDeclaration",
                "scope": 424,
                "src": "1452:17:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 414,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1452:6:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 418,
                "mutability": "mutable",
                "name": "collateral",
                "nameLocation": "1496:10:13",
                "nodeType": "VariableDeclaration",
                "scope": 424,
                "src": "1479:27:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Asset_$1584_storage_ptr",
                  "typeString": "struct MultiToken.Asset"
                },
                "typeName": {
                  "id": 417,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 416,
                    "name": "MultiToken.Asset",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1584,
                    "src": "1479:16:13"
                  },
                  "referencedDeclaration": 1584,
                  "src": "1479:16:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Asset_$1584_storage_ptr",
                    "typeString": "struct MultiToken.Asset"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 420,
                "mutability": "mutable",
                "name": "acceptedOffer",
                "nameLocation": "1524:13:13",
                "nodeType": "VariableDeclaration",
                "scope": 424,
                "src": "1516:21:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 419,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1516:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 423,
                "mutability": "mutable",
                "name": "pendingOffers",
                "nameLocation": "1557:13:13",
                "nodeType": "VariableDeclaration",
                "scope": 424,
                "src": "1547:23:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 421,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1547:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 422,
                  "nodeType": "ArrayTypeName",
                  "src": "1547:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Deed",
            "nameLocation": "1364:4:13",
            "nodeType": "StructDefinition",
            "scope": 1203,
            "src": "1357:220:13",
            "visibility": "public"
          },
          {
            "canonicalName": "PWNDeed.Offer",
            "id": 434,
            "members": [
              {
                "constant": false,
                "id": 426,
                "mutability": "mutable",
                "name": "did",
                "nameLocation": "1950:3:13",
                "nodeType": "VariableDeclaration",
                "scope": 434,
                "src": "1942:11:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 425,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1942:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 428,
                "mutability": "mutable",
                "name": "toBePaid",
                "nameLocation": "1971:8:13",
                "nodeType": "VariableDeclaration",
                "scope": 434,
                "src": "1963:16:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 427,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1963:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 430,
                "mutability": "mutable",
                "name": "lender",
                "nameLocation": "1997:6:13",
                "nodeType": "VariableDeclaration",
                "scope": 434,
                "src": "1989:14:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 429,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1989:7:13",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 433,
                "mutability": "mutable",
                "name": "loan",
                "nameLocation": "2030:4:13",
                "nodeType": "VariableDeclaration",
                "scope": 434,
                "src": "2013:21:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Asset_$1584_storage_ptr",
                  "typeString": "struct MultiToken.Asset"
                },
                "typeName": {
                  "id": 432,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 431,
                    "name": "MultiToken.Asset",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1584,
                    "src": "2013:16:13"
                  },
                  "referencedDeclaration": 1584,
                  "src": "2013:16:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Asset_$1584_storage_ptr",
                    "typeString": "struct MultiToken.Asset"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Offer",
            "nameLocation": "1926:5:13",
            "nodeType": "StructDefinition",
            "scope": 1203,
            "src": "1919:122:13",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18edf564",
            "id": 439,
            "mutability": "mutable",
            "name": "deeds",
            "nameLocation": "2080:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 1203,
            "src": "2047:38:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
              "typeString": "mapping(uint256 => struct PWNDeed.Deed)"
            },
            "typeName": {
              "id": 438,
              "keyType": {
                "id": 435,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2056:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2047:25:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                "typeString": "mapping(uint256 => struct PWNDeed.Deed)"
              },
              "valueType": {
                "id": 437,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 436,
                  "name": "Deed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 424,
                  "src": "2067:4:13"
                },
                "referencedDeclaration": 424,
                "src": "2067:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                  "typeString": "struct PWNDeed.Deed"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "474d3ff0",
            "id": 444,
            "mutability": "mutable",
            "name": "offers",
            "nameLocation": "2165:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 1203,
            "src": "2131:40:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Offer_$434_storage_$",
              "typeString": "mapping(bytes32 => struct PWNDeed.Offer)"
            },
            "typeName": {
              "id": 443,
              "keyType": {
                "id": 440,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2140:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2131:26:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Offer_$434_storage_$",
                "typeString": "mapping(bytes32 => struct PWNDeed.Offer)"
              },
              "valueType": {
                "id": 442,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 441,
                  "name": "Offer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 434,
                  "src": "2151:5:13"
                },
                "referencedDeclaration": 434,
                "src": "2151:5:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Offer_$434_storage_ptr",
                  "typeString": "struct PWNDeed.Offer"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 459,
            "name": "DeedCreated",
            "nameLocation": "2425:11:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "assetAddress",
                  "nameLocation": "2453:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 459,
                  "src": "2437:28:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2437:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "category",
                  "nameLocation": "2487:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 459,
                  "src": "2467:28:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Category_$1574",
                    "typeString": "enum MultiToken.Category"
                  },
                  "typeName": {
                    "id": 448,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 447,
                      "name": "MultiToken.Category",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1574,
                      "src": "2467:19:13"
                    },
                    "referencedDeclaration": 1574,
                    "src": "2467:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Category_$1574",
                      "typeString": "enum MultiToken.Category"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 451,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2505:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 459,
                  "src": "2497:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2497:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 453,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2517:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 459,
                  "src": "2509:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2509:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "2532:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 459,
                  "src": "2525:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 457,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "did",
                  "nameLocation": "2558:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 459,
                  "src": "2542:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2542:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2436:126:13"
            },
            "src": "2419:144:13"
          },
          {
            "anonymous": false,
            "id": 473,
            "name": "OfferMade",
            "nameLocation": "2574:9:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 461,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "assetAddress",
                  "nameLocation": "2592:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "2584:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2584:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 463,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2614:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "2606:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2606:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 465,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lender",
                  "nameLocation": "2638:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "2622:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2622:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 467,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toBePaid",
                  "nameLocation": "2654:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "2646:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2646:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 469,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "did",
                  "nameLocation": "2680:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "2664:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2664:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 471,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offer",
                  "nameLocation": "2693:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "2685:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2685:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2583:116:13"
            },
            "src": "2568:132:13"
          },
          {
            "anonymous": false,
            "id": 477,
            "name": "DeedRevoked",
            "nameLocation": "2711:11:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 475,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "did",
                  "nameLocation": "2731:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "2723:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2723:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2722:13:13"
            },
            "src": "2705:31:13"
          },
          {
            "anonymous": false,
            "id": 481,
            "name": "OfferRevoked",
            "nameLocation": "2747:12:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 479,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offer",
                  "nameLocation": "2768:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "2760:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2760:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2759:15:13"
            },
            "src": "2741:34:13"
          },
          {
            "anonymous": false,
            "id": 487,
            "name": "OfferAccepted",
            "nameLocation": "2786:13:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 483,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "did",
                  "nameLocation": "2808:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "2800:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2800:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 485,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offer",
                  "nameLocation": "2821:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "2813:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 484,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2813:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2799:28:13"
            },
            "src": "2780:48:13"
          },
          {
            "anonymous": false,
            "id": 493,
            "name": "PaidBack",
            "nameLocation": "2839:8:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 489,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "did",
                  "nameLocation": "2856:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "2848:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2848:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 491,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "offer",
                  "nameLocation": "2869:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "2861:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2861:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2847:28:13"
            },
            "src": "2833:43:13"
          },
          {
            "anonymous": false,
            "id": 497,
            "name": "DeedClaimed",
            "nameLocation": "2887:11:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 495,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "did",
                  "nameLocation": "2907:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "2899:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2899:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2898:13:13"
            },
            "src": "2881:31:13"
          },
          {
            "body": {
              "id": 508,
              "nodeType": "Block",
              "src": "3139:79:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 500,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3157:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3157:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 502,
                          "name": "PWN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "3171:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3157:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74207468652050574e",
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3176:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b1eacd65715c3cb382606e5e99a96f4a3bcc194c9e6bfb413fc59f95cda92fa",
                          "typeString": "literal_string \"Caller is not the PWN\""
                        },
                        "value": "Caller is not the PWN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b1eacd65715c3cb382606e5e99a96f4a3bcc194c9e6bfb413fc59f95cda92fa",
                          "typeString": "literal_string \"Caller is not the PWN\""
                        }
                      ],
                      "id": 499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3149:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3149:51:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "3149:51:13"
                },
                {
                  "id": 507,
                  "nodeType": "PlaceholderStatement",
                  "src": "3210:1:13"
                }
              ]
            },
            "id": 509,
            "name": "onlyPWN",
            "nameLocation": "3129:7:13",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3136:2:13"
            },
            "src": "3120:98:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 519,
              "nodeType": "Block",
              "src": "3840:8:13",
              "statements": []
            },
            "id": 520,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 514,
                    "name": "_uri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 511,
                    "src": "3824:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 515,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 513,
                  "name": "ERC1155",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3063,
                  "src": "3816:7:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3816:13:13"
              },
              {
                "arguments": [],
                "id": 517,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 516,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1565,
                  "src": "3830:7:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3830:9:13"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "3810:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "3796:18:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3796:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3795:20:13"
            },
            "returnParameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3840:0:13"
            },
            "scope": 1203,
            "src": "3784:64:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 613,
              "nodeType": "Block",
              "src": "4820:465:13",
              "statements": [
                {
                  "expression": {
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4830:4:13",
                    "subExpression": {
                      "id": 541,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "4830:2:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "4830:4:13"
                },
                {
                  "assignments": [
                    546
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 546,
                      "mutability": "mutable",
                      "name": "deed",
                      "nameLocation": "4858:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 613,
                      "src": "4845:17:13",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                        "typeString": "struct PWNDeed.Deed"
                      },
                      "typeName": {
                        "id": 545,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 544,
                          "name": "Deed",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 424,
                          "src": "4845:4:13"
                        },
                        "referencedDeclaration": 424,
                        "src": "4845:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                          "typeString": "struct PWNDeed.Deed"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 550,
                  "initialValue": {
                    "baseExpression": {
                      "id": 547,
                      "name": "deeds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "4865:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                        "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                      }
                    },
                    "id": 549,
                    "indexExpression": {
                      "id": 548,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "4871:2:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4865:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Deed_$424_storage",
                      "typeString": "struct PWNDeed.Deed storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4845:29:13"
                },
                {
                  "expression": {
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 551,
                        "name": "deed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "4884:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                          "typeString": "struct PWNDeed.Deed storage pointer"
                        }
                      },
                      "id": 553,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "duration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 413,
                      "src": "4884:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 554,
                      "name": "_duration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 528,
                      "src": "4900:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4884:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 556,
                  "nodeType": "ExpressionStatement",
                  "src": "4884:25:13"
                },
                {
                  "expression": {
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 557,
                          "name": "deed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "4919:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                            "typeString": "struct PWNDeed.Deed storage pointer"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "collateral",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 418,
                        "src": "4919:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Asset_$1584_storage",
                          "typeString": "struct MultiToken.Asset storage ref"
                        }
                      },
                      "id": 561,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "assetAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1576,
                      "src": "4919:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 562,
                      "name": "_assetAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 523,
                      "src": "4950:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4919:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "4919:44:13"
                },
                {
                  "expression": {
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 565,
                          "name": "deed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "4973:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                            "typeString": "struct PWNDeed.Deed storage pointer"
                          }
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "collateral",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 418,
                        "src": "4973:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Asset_$1584_storage",
                          "typeString": "struct MultiToken.Asset storage ref"
                        }
                      },
                      "id": 569,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "category",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1579,
                      "src": "4973:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Category_$1574",
                        "typeString": "enum MultiToken.Category"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 570,
                      "name": "_assetCategory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "5000:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Category_$1574",
                        "typeString": "enum MultiToken.Category"
                      }
                    },
                    "src": "4973:41:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Category_$1574",
                      "typeString": "enum MultiToken.Category"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "4973:41:13"
                },
                {
                  "expression": {
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 573,
                          "name": "deed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "5024:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                            "typeString": "struct PWNDeed.Deed storage pointer"
                          }
                        },
                        "id": 576,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "collateral",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 418,
                        "src": "5024:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Asset_$1584_storage",
                          "typeString": "struct MultiToken.Asset storage ref"
                        }
                      },
                      "id": 577,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1583,
                      "src": "5024:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 578,
                      "name": "_assetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 530,
                      "src": "5045:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5024:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 580,
                  "nodeType": "ExpressionStatement",
                  "src": "5024:29:13"
                },
                {
                  "expression": {
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 581,
                          "name": "deed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "5063:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                            "typeString": "struct PWNDeed.Deed storage pointer"
                          }
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "collateral",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 418,
                        "src": "5063:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Asset_$1584_storage",
                          "typeString": "struct MultiToken.Asset storage ref"
                        }
                      },
                      "id": 585,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1581,
                      "src": "5063:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 586,
                      "name": "_assetAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "5088:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5063:37:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "5063:37:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 590,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "5117:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 591,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "5125:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5129:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5132:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 589,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2566,
                      "src": "5111:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5111:24:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "5111:24:13"
                },
                {
                  "expression": {
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 596,
                        "name": "deed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "5146:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                          "typeString": "struct PWNDeed.Deed storage pointer"
                        }
                      },
                      "id": 598,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 409,
                      "src": "5146:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5160:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5146:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 601,
                  "nodeType": "ExpressionStatement",
                  "src": "5146:15:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 603,
                        "name": "_assetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 523,
                        "src": "5189:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 604,
                        "name": "_assetCategory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "5204:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Category_$1574",
                          "typeString": "enum MultiToken.Category"
                        }
                      },
                      {
                        "id": 605,
                        "name": "_assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 530,
                        "src": "5220:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 606,
                        "name": "_assetAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "5230:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 607,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "5244:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 608,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "5255:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_Category_$1574",
                          "typeString": "enum MultiToken.Category"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 602,
                      "name": "DeedCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "5177:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_Category_$1574_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$__$",
                        "typeString": "function (address,enum MultiToken.Category,uint256,uint256,uint32,uint256)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5177:81:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "EmitStatement",
                  "src": "5172:86:13"
                },
                {
                  "expression": {
                    "id": 611,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 405,
                    "src": "5276:2:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 540,
                  "id": 612,
                  "nodeType": "Return",
                  "src": "5269:9:13"
                }
              ]
            },
            "documentation": {
              "id": 521,
              "nodeType": "StructuredDocumentation",
              "src": "3992:585:13",
              "text": " create\n @dev Creates the PWN Deed token contract - ERC1155 with extra use case specific features\n @param _assetAddress Address of the asset contract\n @param _assetCategory Category of the asset - see { MultiToken.sol }\n @param _duration Loan duration in seconds\n @param _assetId ID of an ERC721 or ERC1155 token || 0 in case the token doesn't have IDs\n @param _assetAmount Amount of an ERC20 or ERC1155 token || 0 in case of NFTs\n @param _owner Address initiating the new Deed\n @return Deed ID of the newly minted Deed"
            },
            "functionSelector": "63bbf33a",
            "id": 614,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 537,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 536,
                  "name": "onlyPWN",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 509,
                  "src": "4794:7:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "4794:7:13"
              }
            ],
            "name": "create",
            "nameLocation": "4591:6:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 523,
                  "mutability": "mutable",
                  "name": "_assetAddress",
                  "nameLocation": "4615:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "4607:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4607:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 526,
                  "mutability": "mutable",
                  "name": "_assetCategory",
                  "nameLocation": "4658:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "4638:34:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Category_$1574",
                    "typeString": "enum MultiToken.Category"
                  },
                  "typeName": {
                    "id": 525,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 524,
                      "name": "MultiToken.Category",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1574,
                      "src": "4638:19:13"
                    },
                    "referencedDeclaration": 1574,
                    "src": "4638:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Category_$1574",
                      "typeString": "enum MultiToken.Category"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 528,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "4689:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "4682:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4682:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 530,
                  "mutability": "mutable",
                  "name": "_assetId",
                  "nameLocation": "4716:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "4708:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4708:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "_assetAmount",
                  "nameLocation": "4742:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "4734:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4734:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "4772:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "4764:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4764:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4597:187:13"
            },
            "returnParameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 539,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "4811:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4811:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4810:9:13"
            },
            "scope": 1203,
            "src": "4582:703:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "5555:243:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 626,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 619,
                              "src": "5583:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 627,
                              "name": "_did",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 617,
                              "src": "5591:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 625,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2083,
                            "src": "5573:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5573:23:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5600:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5573:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206465656420646f65736e27742062656c6f6e6720746f207468652063616c6c6572",
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5603:39:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d5851fce4769c64da8e86e461e5ab825d99c29ad46825cf3cc3acfd6a0e09c0",
                          "typeString": "literal_string \"The deed doesn't belong to the caller\""
                        },
                        "value": "The deed doesn't belong to the caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d5851fce4769c64da8e86e461e5ab825d99c29ad46825cf3cc3acfd6a0e09c0",
                          "typeString": "literal_string \"The deed doesn't belong to the caller\""
                        }
                      ],
                      "id": 624,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5565:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5565:78:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "5565:78:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 636,
                              "name": "_did",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 617,
                              "src": "5675:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 635,
                            "name": "getDeedStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "5661:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5661:19:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5684:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5661:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446565642063616e2774206265207265766f6b65642061742074686973207374616765",
                        "id": 640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5687:37:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed18bb35c1945e232d20072f1bdf14f884fa7ff4bbf01967dedab33234d0b578",
                          "typeString": "literal_string \"Deed can't be revoked at this stage\""
                        },
                        "value": "Deed can't be revoked at this stage"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed18bb35c1945e232d20072f1bdf14f884fa7ff4bbf01967dedab33234d0b578",
                          "typeString": "literal_string \"Deed can't be revoked at this stage\""
                        }
                      ],
                      "id": 634,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5653:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5653:72:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "5653:72:13"
                },
                {
                  "expression": {
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 643,
                          "name": "deeds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "5736:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                            "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                          }
                        },
                        "id": 645,
                        "indexExpression": {
                          "id": 644,
                          "name": "_did",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "5742:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5736:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Deed_$424_storage",
                          "typeString": "struct PWNDeed.Deed storage ref"
                        }
                      },
                      "id": 646,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 409,
                      "src": "5736:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5757:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5736:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "5736:22:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 651,
                        "name": "_did",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "5786:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 650,
                      "name": "DeedRevoked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "5774:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5774:17:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 653,
                  "nodeType": "EmitStatement",
                  "src": "5769:22:13"
                }
              ]
            },
            "documentation": {
              "id": 615,
              "nodeType": "StructuredDocumentation",
              "src": "5291:174:13",
              "text": " revoke\n @dev Burns a deed token\n @param _did Deed ID of the token to be burned\n @param _owner Address of the borrower who issued the Deed"
            },
            "functionSelector": "20d154da",
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 622,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 621,
                  "name": "onlyPWN",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 509,
                  "src": "5547:7:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "5547:7:13"
              }
            ],
            "name": "revoke",
            "nameLocation": "5479:6:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 617,
                  "mutability": "mutable",
                  "name": "_did",
                  "nameLocation": "5503:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "5495:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5495:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 619,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5525:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "5517:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5517:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5485:52:13"
            },
            "returnParameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5555:0:13"
            },
            "scope": 1203,
            "src": "5470:328:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 755,
              "nodeType": "Block",
              "src": "6498:550:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 675,
                              "name": "_did",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 664,
                              "src": "6530:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 674,
                            "name": "getDeedStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "6516:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6516:19:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6539:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6516:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656564206e6f7420616363657074696e67206f6666657273",
                        "id": 679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6542:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c844a18fae199812c1d7fb13db786ddf3d0a0c5cc96b231d6b6deaee4ce130a1",
                          "typeString": "literal_string \"Deed not accepting offers\""
                        },
                        "value": "Deed not accepting offers"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c844a18fae199812c1d7fb13db786ddf3d0a0c5cc96b231d6b6deaee4ce130a1",
                          "typeString": "literal_string \"Deed not accepting offers\""
                        }
                      ],
                      "id": 673,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6508:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6508:62:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 681,
                  "nodeType": "ExpressionStatement",
                  "src": "6508:62:13"
                },
                {
                  "assignments": [
                    683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 683,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "6589:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 755,
                      "src": "6581:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 682,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6581:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 691,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 687,
                            "name": "_lender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 662,
                            "src": "6623:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 688,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 407,
                            "src": "6632:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 685,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6606:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6606:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6606:32:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 684,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6596:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6596:43:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6581:58:13"
                },
                {
                  "expression": {
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6649:7:13",
                    "subExpression": {
                      "id": 692,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "6649:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "6649:7:13"
                },
                {
                  "assignments": [
                    697
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 697,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "6681:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 755,
                      "src": "6667:19:13",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$434_storage_ptr",
                        "typeString": "struct PWNDeed.Offer"
                      },
                      "typeName": {
                        "id": 696,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 695,
                          "name": "Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 434,
                          "src": "6667:5:13"
                        },
                        "referencedDeclaration": 434,
                        "src": "6667:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$434_storage_ptr",
                          "typeString": "struct PWNDeed.Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 701,
                  "initialValue": {
                    "baseExpression": {
                      "id": 698,
                      "name": "offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 444,
                      "src": "6689:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Offer_$434_storage_$",
                        "typeString": "mapping(bytes32 => struct PWNDeed.Offer storage ref)"
                      }
                    },
                    "id": 700,
                    "indexExpression": {
                      "id": 699,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "6696:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6689:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$434_storage",
                      "typeString": "struct PWNDeed.Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6667:34:13"
                },
                {
                  "expression": {
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 702,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 697,
                          "src": "6711:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$434_storage_ptr",
                            "typeString": "struct PWNDeed.Offer storage pointer"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "loan",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 433,
                        "src": "6711:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Asset_$1584_storage",
                          "typeString": "struct MultiToken.Asset storage ref"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "assetAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1576,
                      "src": "6711:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 707,
                      "name": "_assetAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 658,
                      "src": "6737:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6711:39:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "6711:39:13"
                },
                {
                  "expression": {
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 710,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 697,
                          "src": "6760:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$434_storage_ptr",
                            "typeString": "struct PWNDeed.Offer storage pointer"
                          }
                        },
                        "id": 713,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "loan",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 433,
                        "src": "6760:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Asset_$1584_storage",
                          "typeString": "struct MultiToken.Asset storage ref"
                        }
                      },
                      "id": 714,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1581,
                      "src": "6760:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 715,
                      "name": "_assetAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "6780:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6760:32:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 717,
                  "nodeType": "ExpressionStatement",
                  "src": "6760:32:13"
                },
                {
                  "expression": {
                    "id": 722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 718,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 697,
                        "src": "6802:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$434_storage_ptr",
                          "typeString": "struct PWNDeed.Offer storage pointer"
                        }
                      },
                      "id": 720,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "toBePaid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 428,
                      "src": "6802:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 721,
                      "name": "_toBePaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 666,
                      "src": "6819:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6802:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 723,
                  "nodeType": "ExpressionStatement",
                  "src": "6802:26:13"
                },
                {
                  "expression": {
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 724,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 697,
                        "src": "6838:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$434_storage_ptr",
                          "typeString": "struct PWNDeed.Offer storage pointer"
                        }
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 430,
                      "src": "6838:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 727,
                      "name": "_lender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 662,
                      "src": "6853:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6838:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "6838:22:13"
                },
                {
                  "expression": {
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 730,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 697,
                        "src": "6870:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$434_storage_ptr",
                          "typeString": "struct PWNDeed.Offer storage pointer"
                        }
                      },
                      "id": 732,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "did",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 426,
                      "src": "6870:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 733,
                      "name": "_did",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 664,
                      "src": "6882:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6870:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "6870:16:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 741,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "6928:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 736,
                            "name": "deeds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "6897:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                              "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                            }
                          },
                          "id": 738,
                          "indexExpression": {
                            "id": 737,
                            "name": "_did",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 664,
                            "src": "6903:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6897:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deed_$424_storage",
                            "typeString": "struct PWNDeed.Deed storage ref"
                          }
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pendingOffers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 423,
                        "src": "6897:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6897:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6897:36:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "6897:36:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 745,
                        "name": "_assetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 658,
                        "src": "6959:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 746,
                        "name": "_assetAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "6974:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 747,
                        "name": "_lender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "6988:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 748,
                        "name": "_toBePaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "6997:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 749,
                        "name": "_did",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 664,
                        "src": "7008:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 750,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "7014:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 744,
                      "name": "OfferMade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "6949:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6949:70:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 752,
                  "nodeType": "EmitStatement",
                  "src": "6944:75:13"
                },
                {
                  "expression": {
                    "id": 753,
                    "name": "hash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 683,
                    "src": "7037:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 672,
                  "id": 754,
                  "nodeType": "Return",
                  "src": "7030:11:13"
                }
              ]
            },
            "documentation": {
              "id": 656,
              "nodeType": "StructuredDocumentation",
              "src": "5804:494:13",
              "text": " makeOffer\n @dev saves an offer object that defines loan terms\n @dev only ERC20 tokens can be offered as loan\n @param _assetAddress Address of the asset contract\n @param _assetAmount Amount of an ERC20 token to be offered as loan\n @param _lender Address of the asset lender\n @param _did ID of the Deed the offer should be bound to\n @param _toBePaid Amount to be paid back by the borrower\n @return hash of the newly created offer"
            },
            "functionSelector": "1387c2b5",
            "id": 756,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 669,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 668,
                  "name": "onlyPWN",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 509,
                  "src": "6472:7:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "6472:7:13"
              }
            ],
            "name": "makeOffer",
            "nameLocation": "6312:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "mutability": "mutable",
                  "name": "_assetAddress",
                  "nameLocation": "6339:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "6331:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6331:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "_assetAmount",
                  "nameLocation": "6370:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "6362:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6362:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 662,
                  "mutability": "mutable",
                  "name": "_lender",
                  "nameLocation": "6400:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "6392:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6392:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "_did",
                  "nameLocation": "6425:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "6417:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6417:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 666,
                  "mutability": "mutable",
                  "name": "_toBePaid",
                  "nameLocation": "6447:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "6439:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 665,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6439:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6321:141:13"
            },
            "returnParameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "6489:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6489:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6488:9:13"
            },
            "scope": 1203,
            "src": "6303:745:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 797,
              "nodeType": "Block",
              "src": "7774:265:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 767,
                              "name": "offers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 444,
                              "src": "7792:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Offer_$434_storage_$",
                                "typeString": "mapping(bytes32 => struct PWNDeed.Offer storage ref)"
                              }
                            },
                            "id": 769,
                            "indexExpression": {
                              "id": 768,
                              "name": "_offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "7799:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7792:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$434_storage",
                              "typeString": "struct PWNDeed.Offer storage ref"
                            }
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 430,
                          "src": "7792:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 771,
                          "name": "_lender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 761,
                          "src": "7817:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7792:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732061646472657373206469646e27742063726561746520746865206f66666572",
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7826:38:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_729b86b7144ec799e3bc7d092e786fc71a06058c09cbc95f36a8a96442b9d74e",
                          "typeString": "literal_string \"This address didn't create the offer\""
                        },
                        "value": "This address didn't create the offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_729b86b7144ec799e3bc7d092e786fc71a06058c09cbc95f36a8a96442b9d74e",
                          "typeString": "literal_string \"This address didn't create the offer\""
                        }
                      ],
                      "id": 766,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7784:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7784:81:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "7784:81:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 778,
                                  "name": "offers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 444,
                                  "src": "7897:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Offer_$434_storage_$",
                                    "typeString": "mapping(bytes32 => struct PWNDeed.Offer storage ref)"
                                  }
                                },
                                "id": 780,
                                "indexExpression": {
                                  "id": 779,
                                  "name": "_offer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 759,
                                  "src": "7904:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7897:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$434_storage",
                                  "typeString": "struct PWNDeed.Offer storage ref"
                                }
                              },
                              "id": 781,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "did",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 426,
                              "src": "7897:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 777,
                            "name": "getDeedStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "7883:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7883:33:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7920:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7883:38:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206f6e6c792072656d6f7665206f66666572732066726f6d206f70656e204465656473",
                        "id": 785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7923:40:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5893f02b85127ead29966732214ba404eec34925a7d38ccbbadcc470eb28e62",
                          "typeString": "literal_string \"Can only remove offers from open Deeds\""
                        },
                        "value": "Can only remove offers from open Deeds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5893f02b85127ead29966732214ba404eec34925a7d38ccbbadcc470eb28e62",
                          "typeString": "literal_string \"Can only remove offers from open Deeds\""
                        }
                      ],
                      "id": 776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7875:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7875:89:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "7875:89:13"
                },
                {
                  "expression": {
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "7975:21:13",
                    "subExpression": {
                      "baseExpression": {
                        "id": 788,
                        "name": "offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "7982:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Offer_$434_storage_$",
                          "typeString": "mapping(bytes32 => struct PWNDeed.Offer storage ref)"
                        }
                      },
                      "id": 790,
                      "indexExpression": {
                        "id": 789,
                        "name": "_offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 759,
                        "src": "7989:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7982:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$434_storage",
                        "typeString": "struct PWNDeed.Offer storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "7975:21:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 794,
                        "name": "_offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 759,
                        "src": "8025:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 793,
                      "name": "OfferRevoked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 481,
                      "src": "8012:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8012:20:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 796,
                  "nodeType": "EmitStatement",
                  "src": "8007:25:13"
                }
              ]
            },
            "documentation": {
              "id": 757,
              "nodeType": "StructuredDocumentation",
              "src": "7054:622:13",
              "text": " revokeOffer\n @dev function to remove a pending offer\n @dev This only removes the offer representation but it doesn't remove the offer from a list of pending offers.\n         The offers associated with a deed has to be filtered on the front end to only list the valid ones.\n         No longer existent offers will simply return 0 if prompted about their DID.\n @param _offer Hash identifying an offer\n @param _lender Address of the lender who made the offer\n @dev TODO: consider ways to remove the offer from the pending offers array / maybe replace for a mapping"
            },
            "functionSelector": "fc09de89",
            "id": 798,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 764,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 763,
                  "name": "onlyPWN",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 509,
                  "src": "7766:7:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "7766:7:13"
              }
            ],
            "name": "revokeOffer",
            "nameLocation": "7690:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 759,
                  "mutability": "mutable",
                  "name": "_offer",
                  "nameLocation": "7719:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 798,
                  "src": "7711:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7711:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "_lender",
                  "nameLocation": "7743:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 798,
                  "src": "7735:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7735:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7701:55:13"
            },
            "returnParameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7774:0:13"
            },
            "scope": 1203,
            "src": "7681:358:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 876,
              "nodeType": "Block",
              "src": "8412:452:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 812,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 805,
                              "src": "8440:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 813,
                              "name": "_did",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 801,
                              "src": "8448:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 811,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2083,
                            "src": "8430:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8430:23:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8457:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "8430:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206465656420646f65736e27742062656c6f6e6720746f207468652063616c6c6572",
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8460:39:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d5851fce4769c64da8e86e461e5ab825d99c29ad46825cf3cc3acfd6a0e09c0",
                          "typeString": "literal_string \"The deed doesn't belong to the caller\""
                        },
                        "value": "The deed doesn't belong to the caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d5851fce4769c64da8e86e461e5ab825d99c29ad46825cf3cc3acfd6a0e09c0",
                          "typeString": "literal_string \"The deed doesn't belong to the caller\""
                        }
                      ],
                      "id": 810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8422:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8422:78:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 819,
                  "nodeType": "ExpressionStatement",
                  "src": "8422:78:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 822,
                              "name": "_did",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 801,
                              "src": "8532:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 821,
                            "name": "getDeedStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "8518:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8518:19:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8541:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "8518:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446565642063616e277420616363657074206d6f7265206f6666657273",
                        "id": 826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8544:31:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4312940c040eff2546e5a69c66c05c7f254cb4600b3ae74212de7d3145a80d95",
                          "typeString": "literal_string \"Deed can't accept more offers\""
                        },
                        "value": "Deed can't accept more offers"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4312940c040eff2546e5a69c66c05c7f254cb4600b3ae74212de7d3145a80d95",
                          "typeString": "literal_string \"Deed can't accept more offers\""
                        }
                      ],
                      "id": 820,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8510:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8510:66:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 828,
                  "nodeType": "ExpressionStatement",
                  "src": "8510:66:13"
                },
                {
                  "assignments": [
                    831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 831,
                      "mutability": "mutable",
                      "name": "deed",
                      "nameLocation": "8600:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 876,
                      "src": "8587:17:13",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                        "typeString": "struct PWNDeed.Deed"
                      },
                      "typeName": {
                        "id": 830,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 829,
                          "name": "Deed",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 424,
                          "src": "8587:4:13"
                        },
                        "referencedDeclaration": 424,
                        "src": "8587:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                          "typeString": "struct PWNDeed.Deed"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 835,
                  "initialValue": {
                    "baseExpression": {
                      "id": 832,
                      "name": "deeds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "8607:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                        "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                      }
                    },
                    "id": 834,
                    "indexExpression": {
                      "id": 833,
                      "name": "_did",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 801,
                      "src": "8613:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8607:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Deed_$424_storage",
                      "typeString": "struct PWNDeed.Deed storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8587:31:13"
                },
                {
                  "expression": {
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 836,
                        "name": "deed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "8628:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                          "typeString": "struct PWNDeed.Deed storage pointer"
                        }
                      },
                      "id": 838,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "borrower",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 411,
                      "src": "8628:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 839,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 805,
                      "src": "8644:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8628:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 841,
                  "nodeType": "ExpressionStatement",
                  "src": "8628:22:13"
                },
                {
                  "expression": {
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 842,
                        "name": "deed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "8660:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                          "typeString": "struct PWNDeed.Deed storage pointer"
                        }
                      },
                      "id": 844,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expiration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 415,
                      "src": "8660:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      },
                      "id": 852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 847,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8685:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8685:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8678:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint40_$",
                            "typeString": "type(uint40)"
                          },
                          "typeName": {
                            "id": 845,
                            "name": "uint40",
                            "nodeType": "ElementaryTypeName",
                            "src": "8678:6:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8678:23:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 850,
                          "name": "deed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 831,
                          "src": "8704:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                            "typeString": "struct PWNDeed.Deed storage pointer"
                          }
                        },
                        "id": 851,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "duration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 413,
                        "src": "8704:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "8678:39:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "8660:57:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 854,
                  "nodeType": "ExpressionStatement",
                  "src": "8660:57:13"
                },
                {
                  "expression": {
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 855,
                        "name": "deed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "8727:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                          "typeString": "struct PWNDeed.Deed storage pointer"
                        }
                      },
                      "id": 857,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "acceptedOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 420,
                      "src": "8727:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 858,
                      "name": "_offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 803,
                      "src": "8748:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "8727:27:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "8727:27:13"
                },
                {
                  "expression": {
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "8764:25:13",
                    "subExpression": {
                      "expression": {
                        "id": 861,
                        "name": "deed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "8771:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                          "typeString": "struct PWNDeed.Deed storage pointer"
                        }
                      },
                      "id": 862,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "pendingOffers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 423,
                      "src": "8771:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "8764:25:13"
                },
                {
                  "expression": {
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 865,
                        "name": "deed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "8799:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Deed_$424_storage_ptr",
                          "typeString": "struct PWNDeed.Deed storage pointer"
                        }
                      },
                      "id": 867,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 409,
                      "src": "8799:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8813:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "8799:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
                  "src": "8799:15:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 872,
                        "name": "_did",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "8844:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 873,
                        "name": "_offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "8850:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 871,
                      "name": "OfferAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 487,
                      "src": "8830:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8830:27:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 875,
                  "nodeType": "EmitStatement",
                  "src": "8825:32:13"
                }
              ]
            },
            "documentation": {
              "id": 799,
              "nodeType": "StructuredDocumentation",
              "src": "8045:248:13",
              "text": " acceptOffer\n @dev function to set accepted offer\n @param _did ID of the Deed the offer should be bound to\n @param _offer Hash identifying an offer\n @param _owner Address of the borrower who issued the Deed"
            },
            "functionSelector": "600ca3d2",
            "id": 877,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 808,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 807,
                  "name": "onlyPWN",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 509,
                  "src": "8404:7:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "8404:7:13"
              }
            ],
            "name": "acceptOffer",
            "nameLocation": "8307:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 801,
                  "mutability": "mutable",
                  "name": "_did",
                  "nameLocation": "8336:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "8328:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8328:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "_offer",
                  "nameLocation": "8358:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "8350:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8350:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 805,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "8382:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "8374:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8374:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8318:76:13"
            },
            "returnParameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8412:0:13"
            },
            "scope": 1203,
            "src": "8298:566:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 909,
              "nodeType": "Block",
              "src": "9059:195:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 887,
                              "name": "_did",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 880,
                              "src": "9091:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 886,
                            "name": "getDeedStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "9077:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9077:19:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9100:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "9077:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465656420646f65736e2774206861766520616e206163636570746564206f6666657220746f2062652070616964206261636b",
                        "id": 891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9103:53:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0a9bd7d8f06522a23f8c7f96eed1cddc5c033c1df6fe0bedaabbb14a17d910d",
                          "typeString": "literal_string \"Deed doesn't have an accepted offer to be paid back\""
                        },
                        "value": "Deed doesn't have an accepted offer to be paid back"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0a9bd7d8f06522a23f8c7f96eed1cddc5c033c1df6fe0bedaabbb14a17d910d",
                          "typeString": "literal_string \"Deed doesn't have an accepted offer to be paid back\""
                        }
                      ],
                      "id": 885,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9069:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9069:88:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 893,
                  "nodeType": "ExpressionStatement",
                  "src": "9069:88:13"
                },
                {
                  "expression": {
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 894,
                          "name": "deeds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "9168:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                            "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                          }
                        },
                        "id": 896,
                        "indexExpression": {
                          "id": 895,
                          "name": "_did",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 880,
                          "src": "9174:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9168:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Deed_$424_storage",
                          "typeString": "struct PWNDeed.Deed storage ref"
                        }
                      },
                      "id": 897,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 409,
                      "src": "9168:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33",
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9189:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "9168:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 900,
                  "nodeType": "ExpressionStatement",
                  "src": "9168:22:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 902,
                        "name": "_did",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 880,
                        "src": "9215:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 903,
                            "name": "deeds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "9221:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                              "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                            }
                          },
                          "id": 905,
                          "indexExpression": {
                            "id": 904,
                            "name": "_did",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 880,
                            "src": "9227:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9221:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deed_$424_storage",
                            "typeString": "struct PWNDeed.Deed storage ref"
                          }
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "acceptedOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 420,
                        "src": "9221:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 901,
                      "name": "PaidBack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "9206:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9206:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 908,
                  "nodeType": "EmitStatement",
                  "src": "9201:46:13"
                }
              ]
            },
            "documentation": {
              "id": 878,
              "nodeType": "StructuredDocumentation",
              "src": "8870:134:13",
              "text": " repayLoan\n @dev function to make proper state transition\n @param _did ID of the Deed which is paid back"
            },
            "functionSelector": "ab7b1c89",
            "id": 910,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 883,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 882,
                  "name": "onlyPWN",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 509,
                  "src": "9051:7:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "9051:7:13"
              }
            ],
            "name": "repayLoan",
            "nameLocation": "9018:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 880,
                  "mutability": "mutable",
                  "name": "_did",
                  "nameLocation": "9036:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 910,
                  "src": "9028:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9028:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9027:14:13"
            },
            "returnParameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9059:0:13"
            },
            "scope": 1203,
            "src": "9009:245:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 950,
              "nodeType": "Block",
              "src": "9574:224:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 922,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "9602:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 923,
                              "name": "_did",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 913,
                              "src": "9610:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 921,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2083,
                            "src": "9592:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9592:23:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9619:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9592:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74207468652064656564206f776e6572",
                        "id": 927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9622:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d6b7ead8e2fc6aa8041a6c6a96d2da433beb3df5444a65000ebc7f8864ae491",
                          "typeString": "literal_string \"Caller is not the deed owner\""
                        },
                        "value": "Caller is not the deed owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d6b7ead8e2fc6aa8041a6c6a96d2da433beb3df5444a65000ebc7f8864ae491",
                          "typeString": "literal_string \"Caller is not the deed owner\""
                        }
                      ],
                      "id": 920,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9584:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9584:69:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 929,
                  "nodeType": "ExpressionStatement",
                  "src": "9584:69:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 932,
                              "name": "_did",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 913,
                              "src": "9685:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 931,
                            "name": "getDeedStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "9671:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
                              "typeString": "function (uint256) view returns (uint8)"
                            }
                          },
                          "id": 933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9671:19:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9694:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "9671:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446565642063616e277420626520636c61696d656420796574",
                        "id": 936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9697:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9891a4f2fa546b4aa0b30ea30a1e077e5bcc83b0c0d1a0ab34a831505aab729",
                          "typeString": "literal_string \"Deed can't be claimed yet\""
                        },
                        "value": "Deed can't be claimed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9891a4f2fa546b4aa0b30ea30a1e077e5bcc83b0c0d1a0ab34a831505aab729",
                          "typeString": "literal_string \"Deed can't be claimed yet\""
                        }
                      ],
                      "id": 930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9663:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9663:62:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "9663:62:13"
                },
                {
                  "expression": {
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 939,
                          "name": "deeds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "9736:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                            "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                          }
                        },
                        "id": 941,
                        "indexExpression": {
                          "id": 940,
                          "name": "_did",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 913,
                          "src": "9742:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9736:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Deed_$424_storage",
                          "typeString": "struct PWNDeed.Deed storage ref"
                        }
                      },
                      "id": 942,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 409,
                      "src": "9736:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9757:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9736:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "9736:22:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 947,
                        "name": "_did",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "9786:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 946,
                      "name": "DeedClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "9774:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9774:17:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 949,
                  "nodeType": "EmitStatement",
                  "src": "9769:22:13"
                }
              ]
            },
            "documentation": {
              "id": 911,
              "nodeType": "StructuredDocumentation",
              "src": "9260:225:13",
              "text": " claim\n @dev function that would burn the deed token if the token is in paidBack or expired state\n @param _did ID of the Deed which is claimed\n @param _owner Address of the deed token owner"
            },
            "functionSelector": "ddd5e1b2",
            "id": 951,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 918,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 917,
                  "name": "onlyPWN",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 509,
                  "src": "9566:7:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "9566:7:13"
              }
            ],
            "name": "claim",
            "nameLocation": "9499:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 913,
                  "mutability": "mutable",
                  "name": "_did",
                  "nameLocation": "9522:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "9514:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9514:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 915,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "9544:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "9536:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 914,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9536:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9504:52:13"
            },
            "returnParameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9574:0:13"
            },
            "scope": 1203,
            "src": "9490:308:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 992,
              "nodeType": "Block",
              "src": "10100:227:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 963,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "10128:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 964,
                              "name": "_did",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 954,
                              "src": "10136:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 962,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2083,
                            "src": "10118:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10118:23:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10145:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10118:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74207468652064656564206f776e6572",
                        "id": 968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10148:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d6b7ead8e2fc6aa8041a6c6a96d2da433beb3df5444a65000ebc7f8864ae491",
                          "typeString": "literal_string \"Caller is not the deed owner\""
                        },
                        "value": "Caller is not the deed owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d6b7ead8e2fc6aa8041a6c6a96d2da433beb3df5444a65000ebc7f8864ae491",
                          "typeString": "literal_string \"Caller is not the deed owner\""
                        }
                      ],
                      "id": 961,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10110:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10110:69:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 970,
                  "nodeType": "ExpressionStatement",
                  "src": "10110:69:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 972,
                              "name": "deeds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "10197:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                                "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                              }
                            },
                            "id": 974,
                            "indexExpression": {
                              "id": 973,
                              "name": "_did",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 954,
                              "src": "10203:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10197:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Deed_$424_storage",
                              "typeString": "struct PWNDeed.Deed storage ref"
                            }
                          },
                          "id": 975,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 409,
                          "src": "10197:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10219:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10197:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446565642063616e2774206265206275726e65642061742074686973207374616765",
                        "id": 978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10222:36:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b33113843afd6efbbbf6c06e235b0b559408a340554fe836d8edc63f0072076",
                          "typeString": "literal_string \"Deed can't be burned at this stage\""
                        },
                        "value": "Deed can't be burned at this stage"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b33113843afd6efbbbf6c06e235b0b559408a340554fe836d8edc63f0072076",
                          "typeString": "literal_string \"Deed can't be burned at this stage\""
                        }
                      ],
                      "id": 971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10189:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10189:70:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 980,
                  "nodeType": "ExpressionStatement",
                  "src": "10189:70:13"
                },
                {
                  "expression": {
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10270:18:13",
                    "subExpression": {
                      "baseExpression": {
                        "id": 981,
                        "name": "deeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "10277:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                          "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                        }
                      },
                      "id": 983,
                      "indexExpression": {
                        "id": 982,
                        "name": "_did",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "10283:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10277:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Deed_$424_storage",
                        "typeString": "struct PWNDeed.Deed storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 985,
                  "nodeType": "ExpressionStatement",
                  "src": "10270:18:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 987,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "10304:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 988,
                        "name": "_did",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "10312:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10318:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 986,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2744,
                      "src": "10298:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10298:22:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "10298:22:13"
                }
              ]
            },
            "documentation": {
              "id": 952,
              "nodeType": "StructuredDocumentation",
              "src": "9804:208:13",
              "text": " burn\n @dev function that would burn the deed token if the token is in dead state\n @param _did ID of the Deed which is burned\n @param _owner Address of the deed token owner"
            },
            "functionSelector": "fcd3533c",
            "id": 993,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 959,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 958,
                  "name": "onlyPWN",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 509,
                  "src": "10092:7:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "10092:7:13"
              }
            ],
            "name": "burn",
            "nameLocation": "10026:4:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 954,
                  "mutability": "mutable",
                  "name": "_did",
                  "nameLocation": "10048:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 993,
                  "src": "10040:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10040:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 956,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "10070:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 993,
                  "src": "10062:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10062:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10030:52:13"
            },
            "returnParameters": {
              "id": 960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10100:0:13"
            },
            "scope": 1203,
            "src": "10017:310:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1032,
              "nodeType": "Block",
              "src": "10946:208:13",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1001,
                              "name": "deeds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "10960:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                                "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                              }
                            },
                            "id": 1003,
                            "indexExpression": {
                              "id": 1002,
                              "name": "_did",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 996,
                              "src": "10966:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10960:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Deed_$424_storage",
                              "typeString": "struct PWNDeed.Deed storage ref"
                            }
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 415,
                          "src": "10960:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10985:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10960:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1007,
                              "name": "deeds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "10990:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                                "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                              }
                            },
                            "id": 1009,
                            "indexExpression": {
                              "id": 1008,
                              "name": "_did",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 996,
                              "src": "10996:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10990:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Deed_$424_storage",
                              "typeString": "struct PWNDeed.Deed storage ref"
                            }
                          },
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 415,
                          "src": "10990:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 1011,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11015:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11015:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10990:40:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "10960:70:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 1020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1015,
                            "name": "deeds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "11034:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                              "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                            }
                          },
                          "id": 1017,
                          "indexExpression": {
                            "id": 1016,
                            "name": "_did",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 996,
                            "src": "11040:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11034:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Deed_$424_storage",
                            "typeString": "struct PWNDeed.Deed storage ref"
                          }
                        },
                        "id": 1018,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "status",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 409,
                        "src": "11034:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "33",
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11056:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "src": "11034:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10960:97:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1030,
                    "nodeType": "Block",
                    "src": "11098:50:13",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1025,
                              "name": "deeds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "11119:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                                "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                              }
                            },
                            "id": 1027,
                            "indexExpression": {
                              "id": 1026,
                              "name": "_did",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 996,
                              "src": "11125:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11119:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Deed_$424_storage",
                              "typeString": "struct PWNDeed.Deed storage ref"
                            }
                          },
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 409,
                          "src": "11119:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 1000,
                        "id": 1029,
                        "nodeType": "Return",
                        "src": "11112:25:13"
                      }
                    ]
                  },
                  "id": 1031,
                  "nodeType": "IfStatement",
                  "src": "10956:192:13",
                  "trueBody": {
                    "id": 1024,
                    "nodeType": "Block",
                    "src": "11059:33:13",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "34",
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11080:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "functionReturnParameters": 1000,
                        "id": 1023,
                        "nodeType": "Return",
                        "src": "11073:8:13"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 994,
              "nodeType": "StructuredDocumentation",
              "src": "10659:217:13",
              "text": " getDeedStatus\n @dev used in contract calls & status checks and also in UI for elementary deed status categorization\n @param _did Deed ID checked for status\n @return a status number"
            },
            "functionSelector": "f1898a95",
            "id": 1033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeedStatus",
            "nameLocation": "10890:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 996,
                  "mutability": "mutable",
                  "name": "_did",
                  "nameLocation": "10912:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "10904:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10904:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10903:14:13"
            },
            "returnParameters": {
              "id": 1000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 999,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "10939:5:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "10939:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10938:7:13"
            },
            "scope": 1203,
            "src": "10881:273:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1046,
              "nodeType": "Block",
              "src": "11535:46:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1041,
                        "name": "deeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "11552:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                          "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                        }
                      },
                      "id": 1043,
                      "indexExpression": {
                        "id": 1042,
                        "name": "_did",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "11558:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11552:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Deed_$424_storage",
                        "typeString": "struct PWNDeed.Deed storage ref"
                      }
                    },
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "expiration",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 415,
                    "src": "11552:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "functionReturnParameters": 1040,
                  "id": 1045,
                  "nodeType": "Return",
                  "src": "11545:29:13"
                }
              ]
            },
            "documentation": {
              "id": 1034,
              "nodeType": "StructuredDocumentation",
              "src": "11160:304:13",
              "text": " getExpiration\n @dev utility function to find out exact expiration time of a particular Deed\n @dev for simple status check use `this.getDeedStatus(did)` if `status == 4` then Deed has expired\n @param _did Deed ID to be checked\n @return unix time stamp in seconds"
            },
            "functionSelector": "a05b775f",
            "id": 1047,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExpiration",
            "nameLocation": "11478:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1036,
                  "mutability": "mutable",
                  "name": "_did",
                  "nameLocation": "11500:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1047,
                  "src": "11492:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11492:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11491:14:13"
            },
            "returnParameters": {
              "id": 1040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1039,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1047,
                  "src": "11527:6:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1038,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "11527:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11526:8:13"
            },
            "scope": 1203,
            "src": "11469:112:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1060,
              "nodeType": "Block",
              "src": "11857:44:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1055,
                        "name": "deeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "11874:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                          "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                        }
                      },
                      "id": 1057,
                      "indexExpression": {
                        "id": 1056,
                        "name": "_did",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "11880:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11874:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Deed_$424_storage",
                        "typeString": "struct PWNDeed.Deed storage ref"
                      }
                    },
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "duration",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 413,
                    "src": "11874:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 1054,
                  "id": 1059,
                  "nodeType": "Return",
                  "src": "11867:27:13"
                }
              ]
            },
            "documentation": {
              "id": 1048,
              "nodeType": "StructuredDocumentation",
              "src": "11587:201:13",
              "text": " getDuration\n @dev utility function to find out loan duration period of a particular Deed\n @param _did Deed ID to be checked\n @return loan duration period in seconds"
            },
            "functionSelector": "8bb126a7",
            "id": 1061,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDuration",
            "nameLocation": "11802:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1050,
                  "mutability": "mutable",
                  "name": "_did",
                  "nameLocation": "11822:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1061,
                  "src": "11814:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11814:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11813:14:13"
            },
            "returnParameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1053,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1061,
                  "src": "11849:6:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1052,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11849:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11848:8:13"
            },
            "scope": 1203,
            "src": "11793:108:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1074,
              "nodeType": "Block",
              "src": "12168:44:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1069,
                        "name": "deeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "12185:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                          "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                        }
                      },
                      "id": 1071,
                      "indexExpression": {
                        "id": 1070,
                        "name": "_did",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "12191:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12185:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Deed_$424_storage",
                        "typeString": "struct PWNDeed.Deed storage ref"
                      }
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "borrower",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 411,
                    "src": "12185:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1068,
                  "id": 1073,
                  "nodeType": "Return",
                  "src": "12178:27:13"
                }
              ]
            },
            "documentation": {
              "id": 1062,
              "nodeType": "StructuredDocumentation",
              "src": "11907:191:13",
              "text": " getBorrower\n @dev utility function to find out a borrower address of a particular Deed\n @param _did Deed ID to be checked\n @return address of the borrower"
            },
            "functionSelector": "8500d919",
            "id": 1075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBorrower",
            "nameLocation": "12112:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1064,
                  "mutability": "mutable",
                  "name": "_did",
                  "nameLocation": "12132:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "12124:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12124:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12123:14:13"
            },
            "returnParameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "12159:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12159:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12158:9:13"
            },
            "scope": 1203,
            "src": "12103:109:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1089,
              "nodeType": "Block",
              "src": "12537:46:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1084,
                        "name": "deeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "12554:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                          "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                        }
                      },
                      "id": 1086,
                      "indexExpression": {
                        "id": 1085,
                        "name": "_did",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "12560:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12554:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Deed_$424_storage",
                        "typeString": "struct PWNDeed.Deed storage ref"
                      }
                    },
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "collateral",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 418,
                    "src": "12554:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Asset_$1584_storage",
                      "typeString": "struct MultiToken.Asset storage ref"
                    }
                  },
                  "functionReturnParameters": 1083,
                  "id": 1088,
                  "nodeType": "Return",
                  "src": "12547:29:13"
                }
              ]
            },
            "documentation": {
              "id": 1076,
              "nodeType": "StructuredDocumentation",
              "src": "12218:227:13",
              "text": " getDeedCollateral\n @dev utility function to find out collateral asset of a particular Deed\n @param _did Deed ID to be checked\n @return Asset construct - for definition see { MultiToken.sol }"
            },
            "functionSelector": "12dbc1d8",
            "id": 1090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeedCollateral",
            "nameLocation": "12459:17:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1078,
                  "mutability": "mutable",
                  "name": "_did",
                  "nameLocation": "12485:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1090,
                  "src": "12477:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12477:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12476:14:13"
            },
            "returnParameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1082,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1090,
                  "src": "12512:23:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Asset_$1584_memory_ptr",
                    "typeString": "struct MultiToken.Asset"
                  },
                  "typeName": {
                    "id": 1081,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1080,
                      "name": "MultiToken.Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1584,
                      "src": "12512:16:13"
                    },
                    "referencedDeclaration": 1584,
                    "src": "12512:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Asset_$1584_storage_ptr",
                      "typeString": "struct MultiToken.Asset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12511:25:13"
            },
            "scope": 1203,
            "src": "12450:133:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1104,
              "nodeType": "Block",
              "src": "12848:49:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1099,
                        "name": "deeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "12865:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                          "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                        }
                      },
                      "id": 1101,
                      "indexExpression": {
                        "id": 1100,
                        "name": "_did",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "12871:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12865:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Deed_$424_storage",
                        "typeString": "struct PWNDeed.Deed storage ref"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "pendingOffers",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 423,
                    "src": "12865:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1098,
                  "id": 1103,
                  "nodeType": "Return",
                  "src": "12858:32:13"
                }
              ]
            },
            "documentation": {
              "id": 1091,
              "nodeType": "StructuredDocumentation",
              "src": "12589:182:13",
              "text": " getOffers\n @dev utility function to get a list of all pending offers of a Deed\n @param _did Deed ID to be checked\n @return a list of offer hashes"
            },
            "functionSelector": "dfa49e6f",
            "id": 1105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOffers",
            "nameLocation": "12785:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1093,
                  "mutability": "mutable",
                  "name": "_did",
                  "nameLocation": "12803:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "12795:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1092,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12795:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12794:14:13"
            },
            "returnParameters": {
              "id": 1098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1097,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "12830:16:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1095,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "12830:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1096,
                    "nodeType": "ArrayTypeName",
                    "src": "12830:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12829:18:13"
            },
            "scope": 1203,
            "src": "12776:121:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1118,
              "nodeType": "Block",
              "src": "13334:49:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1113,
                        "name": "deeds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "13351:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deed_$424_storage_$",
                          "typeString": "mapping(uint256 => struct PWNDeed.Deed storage ref)"
                        }
                      },
                      "id": 1115,
                      "indexExpression": {
                        "id": 1114,
                        "name": "_did",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "13357:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13351:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Deed_$424_storage",
                        "typeString": "struct PWNDeed.Deed storage ref"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "acceptedOffer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 420,
                    "src": "13351:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1112,
                  "id": 1117,
                  "nodeType": "Return",
                  "src": "13344:32:13"
                }
              ]
            },
            "documentation": {
              "id": 1106,
              "nodeType": "StructuredDocumentation",
              "src": "12903:356:13",
              "text": " getAcceptedOffer\n @dev used to get a list of made offers to be queried in the UI - needs additional check for re-validating each offer\n @dev revalidation requires checking if the lender has sufficient balance and approved the asset\n @param _did Deed ID being queried for offers\n @return Hash of the accepted offer"
            },
            "functionSelector": "691da990",
            "id": 1119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAcceptedOffer",
            "nameLocation": "13273:16:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1108,
                  "mutability": "mutable",
                  "name": "_did",
                  "nameLocation": "13298:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "13290:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13290:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13289:14:13"
            },
            "returnParameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "13325:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13325:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13324:9:13"
            },
            "scope": 1203,
            "src": "13264:119:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1132,
              "nodeType": "Block",
              "src": "13773:42:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1127,
                        "name": "offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "13790:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Offer_$434_storage_$",
                          "typeString": "mapping(bytes32 => struct PWNDeed.Offer storage ref)"
                        }
                      },
                      "id": 1129,
                      "indexExpression": {
                        "id": 1128,
                        "name": "_offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1122,
                        "src": "13797:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13790:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$434_storage",
                        "typeString": "struct PWNDeed.Offer storage ref"
                      }
                    },
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "did",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 426,
                    "src": "13790:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1126,
                  "id": 1131,
                  "nodeType": "Return",
                  "src": "13783:25:13"
                }
              ]
            },
            "documentation": {
              "id": 1120,
              "nodeType": "StructuredDocumentation",
              "src": "13513:190:13",
              "text": " getDeedID\n @dev utility function to find out which Deed is an offer associated with\n @param _offer Offer hash of an offer to be prompted\n @return Deed ID"
            },
            "functionSelector": "69bdc155",
            "id": 1133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeedID",
            "nameLocation": "13717:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "_offer",
                  "nameLocation": "13735:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "13727:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13727:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13726:16:13"
            },
            "returnParameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1125,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "13764:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13764:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13763:9:13"
            },
            "scope": 1203,
            "src": "13708:107:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1147,
              "nodeType": "Block",
              "src": "14150:43:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1142,
                        "name": "offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "14167:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Offer_$434_storage_$",
                          "typeString": "mapping(bytes32 => struct PWNDeed.Offer storage ref)"
                        }
                      },
                      "id": 1144,
                      "indexExpression": {
                        "id": 1143,
                        "name": "_offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1136,
                        "src": "14174:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14167:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$434_storage",
                        "typeString": "struct PWNDeed.Offer storage ref"
                      }
                    },
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "loan",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 433,
                    "src": "14167:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Asset_$1584_storage",
                      "typeString": "struct MultiToken.Asset storage ref"
                    }
                  },
                  "functionReturnParameters": 1141,
                  "id": 1146,
                  "nodeType": "Return",
                  "src": "14160:26:13"
                }
              ]
            },
            "documentation": {
              "id": 1134,
              "nodeType": "StructuredDocumentation",
              "src": "13821:240:13",
              "text": " getOfferLoan\n @dev utility function that returns the loan asset of a particular offer\n @param _offer Offer hash of an offer to be prompted\n @return Asset construct - for definition see { MultiToken.sol }"
            },
            "functionSelector": "d05197c1",
            "id": 1148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOfferLoan",
            "nameLocation": "14075:12:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "_offer",
                  "nameLocation": "14096:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1148,
                  "src": "14088:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14088:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14087:16:13"
            },
            "returnParameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1148,
                  "src": "14125:23:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Asset_$1584_memory_ptr",
                    "typeString": "struct MultiToken.Asset"
                  },
                  "typeName": {
                    "id": 1139,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1138,
                      "name": "MultiToken.Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1584,
                      "src": "14125:16:13"
                    },
                    "referencedDeclaration": 1584,
                    "src": "14125:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Asset_$1584_storage_ptr",
                      "typeString": "struct MultiToken.Asset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14124:25:13"
            },
            "scope": 1203,
            "src": "14066:127:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1161,
              "nodeType": "Block",
              "src": "14459:47:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1156,
                        "name": "offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "14476:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Offer_$434_storage_$",
                          "typeString": "mapping(bytes32 => struct PWNDeed.Offer storage ref)"
                        }
                      },
                      "id": 1158,
                      "indexExpression": {
                        "id": 1157,
                        "name": "_offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1151,
                        "src": "14483:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14476:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$434_storage",
                        "typeString": "struct PWNDeed.Offer storage ref"
                      }
                    },
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "toBePaid",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 428,
                    "src": "14476:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1155,
                  "id": 1160,
                  "nodeType": "Return",
                  "src": "14469:30:13"
                }
              ]
            },
            "documentation": {
              "id": 1149,
              "nodeType": "StructuredDocumentation",
              "src": "14199:191:13",
              "text": " toBePaid\n @dev quick query of the total amount to be paid to an offer\n @param _offer Offer hash of an offer to be prompted\n @return Amount to be paid back"
            },
            "functionSelector": "7f4285f1",
            "id": 1162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toBePaid",
            "nameLocation": "14404:8:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "_offer",
                  "nameLocation": "14421:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "14413:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14413:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14412:16:13"
            },
            "returnParameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1154,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "14450:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14450:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14449:9:13"
            },
            "scope": 1203,
            "src": "14395:111:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1175,
              "nodeType": "Block",
              "src": "14786:45:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1170,
                        "name": "offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "14803:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Offer_$434_storage_$",
                          "typeString": "mapping(bytes32 => struct PWNDeed.Offer storage ref)"
                        }
                      },
                      "id": 1172,
                      "indexExpression": {
                        "id": 1171,
                        "name": "_offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1165,
                        "src": "14810:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14803:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$434_storage",
                        "typeString": "struct PWNDeed.Offer storage ref"
                      }
                    },
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "lender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 430,
                    "src": "14803:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1169,
                  "id": 1174,
                  "nodeType": "Return",
                  "src": "14796:28:13"
                }
              ]
            },
            "documentation": {
              "id": 1163,
              "nodeType": "StructuredDocumentation",
              "src": "14512:204:13",
              "text": " getLender\n @dev utility function to find out a lender address of a particular offer\n @param _offer Offer hash of an offer to be prompted\n @return Address of the lender"
            },
            "functionSelector": "1218239f",
            "id": 1176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLender",
            "nameLocation": "14730:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1165,
                  "mutability": "mutable",
                  "name": "_offer",
                  "nameLocation": "14748:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1176,
                  "src": "14740:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1164,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14740:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14739:16:13"
            },
            "returnParameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1176,
                  "src": "14777:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14777:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14776:9:13"
            },
            "scope": 1203,
            "src": "14721:110:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1188,
              "nodeType": "Block",
              "src": "15185:31:13",
              "statements": [
                {
                  "expression": {
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1184,
                      "name": "PWN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "15195:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1185,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1179,
                      "src": "15201:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15195:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1187,
                  "nodeType": "ExpressionStatement",
                  "src": "15195:14:13"
                }
              ]
            },
            "documentation": {
              "id": 1177,
              "nodeType": "StructuredDocumentation",
              "src": "14961:166:13",
              "text": " setPWN\n @dev An essential setup function. Has to be called once PWN contract was deployed\n @param _address Identifying the PWN contract"
            },
            "functionSelector": "8c26ba0c",
            "id": 1189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1182,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1181,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1507,
                  "src": "15175:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "15175:9:13"
              }
            ],
            "name": "setPWN",
            "nameLocation": "15141:6:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1179,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "15156:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "15148:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15148:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15147:18:13"
            },
            "returnParameters": {
              "id": 1183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15185:0:13"
            },
            "scope": 1203,
            "src": "15132:84:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1201,
              "nodeType": "Block",
              "src": "15469:33:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1198,
                        "name": "_newUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1192,
                        "src": "15487:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1197,
                      "name": "_setURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2491,
                      "src": "15479:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15479:16:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1200,
                  "nodeType": "ExpressionStatement",
                  "src": "15479:16:13"
                }
              ]
            },
            "documentation": {
              "id": 1190,
              "nodeType": "StructuredDocumentation",
              "src": "15222:184:13",
              "text": " setUri\n @dev An non-essential setup function. Can be called to adjust the Deed token metadata URI\n @param _newUri setting the new origin of Deed metadata"
            },
            "functionSelector": "9b642de1",
            "id": 1202,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1195,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1194,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1507,
                  "src": "15459:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "15459:9:13"
              }
            ],
            "name": "setUri",
            "nameLocation": "15420:6:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1192,
                  "mutability": "mutable",
                  "name": "_newUri",
                  "nameLocation": "15441:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1202,
                  "src": "15427:21:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15427:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15426:23:13"
            },
            "returnParameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15469:0:13"
            },
            "scope": 1203,
            "src": "15411:91:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1204,
        "src": "227:15277:13",
        "usedErrors": []
      }
    ],
    "src": "42:15462:13"
  },
  "bytecode": "60806040523480156200001157600080fd5b506040516200322e3803806200322e833981016040819052620000349162000164565b80620000408162000053565b506200004c336200006c565b506200028d565b805162000068906002906020840190620000be565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000cc906200023a565b90600052602060002090601f016020900481019282620000f057600085556200013b565b82601f106200010b57805160ff19168380011785556200013b565b828001600101855582156200013b579182015b828111156200013b5782518255916020019190600101906200011e565b50620001499291506200014d565b5090565b5b808211156200014957600081556001016200014e565b6000602080838503121562000177578182fd5b82516001600160401b03808211156200018e578384fd5b818501915085601f830112620001a2578384fd5b815181811115620001b757620001b762000277565b604051601f8201601f19908116603f01168101908382118183101715620001e257620001e262000277565b816040528281528886848701011115620001fa578687fd5b8693505b828410156200021d5784840186015181850187015292850192620001fe565b828411156200022e57868684830101525b98975050505050505050565b600181811c908216806200024f57607f821691505b602082108114156200027157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b612f91806200029d6000396000f3fe608060405234801561001057600080fd5b506004361061021b5760003560e01c80638500d91911610125578063d05197c1116100ad578063f1898a951161007c578063f1898a95146105d3578063f242432a146105f8578063f2fde38b1461060b578063fc09de891461061e578063fcd3533c1461063157600080fd5b8063d05197c114610551578063ddd5e1b214610564578063dfa49e6f14610577578063e985e9c51461059757600080fd5b80639b642de1116100f45780639b642de1146104cb578063a05b775f146104de578063a22cb46514610522578063ab7b1c8914610535578063af640d0f1461054857600080fd5b80638500d919146104375780638bb126a7146104655780638c26ba0c146104a75780638da5cb5b146104ba57600080fd5b8063474d3ff0116101a8578063691da99011610177578063691da990146103b657806369bdc155146103d9578063715018a6146103f95780637f4285f114610401578063805094c71461042457600080fd5b8063474d3ff01461034d5780634e1273f414610370578063600ca3d21461039057806363bbf33a146103a357600080fd5b806312dbc1d8116101ef57806312dbc1d8146102cd5780631387c2b5146102ed57806318edf5641461030057806320d154da146103255780632eb2c2d61461033a57600080fd5b8062fdd58e1461022057806301ffc9a7146102465780630e89341c146102695780631218239f14610289575b600080fd5b61023361022e366004612712565b610644565b6040519081526020015b60405180910390f35b61025961025436600461288d565b6106de565b604051901515815260200161023d565b61027c610277366004612853565b61072e565b60405161023d9190612b72565b6102b5610297366004612853565b6000908152600860205260409020600201546001600160a01b031690565b6040516001600160a01b03909116815260200161023d565b6102e06102db366004612853565b6107c2565b60405161023d9190612d05565b6102336102fb36600461273b565b610885565b61031361030e366004612853565b610a2c565b60405161023d96959493929190612d3d565b61033861033336600461286b565b610af8565b005b61033861034836600461255b565b610c06565b61036061035b366004612853565b610c9d565b60405161023d9493929190612d13565b61038361037e366004612788565b610d4c565b60405161023d9190612b0b565b61033861039e366004612913565b610eae565b6102336103b136600461269e565b611021565b6102336103c4366004612853565b60009081526007602052604090206004015490565b6102336103e7366004612853565b60009081526008602052604090205490565b61033861117c565b61023361040f366004612853565b60009081526008602052604090206001015490565b6004546102b5906001600160a01b031681565b6102b5610445366004612853565b60009081526007602052604090205461010090046001600160a01b031690565b610492610473366004612853565b600090815260076020526040902054600160a81b900463ffffffff1690565b60405163ffffffff909116815260200161023d565b6103386104b536600461250f565b6111b2565b6003546001600160a01b03166102b5565b6103386104d93660046128c5565b6111fe565b61050c6104ec366004612853565b600090815260076020526040902054600160c81b900464ffffffffff1690565b60405164ffffffffff909116815260200161023d565b610338610530366004612664565b611234565b610338610543366004612853565b611243565b61023360055481565b6102e061055f366004612853565b61133c565b61033861057236600461286b565b6113c2565b61058a610585366004612853565b6114e9565b60405161023d9190612ac7565b6102596105a5366004612529565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6105e66105e1366004612853565b61154d565b60405160ff909116815260200161023d565b610338610606366004612601565b6115da565b61033861061936600461250f565b611661565b61033861062c36600461286b565b6116f9565b61033861063f36600461286b565b61188f565b60006001600160a01b0383166106b55760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061070f57506001600160e01b031982166303a24d0760e21b145b806106d857506301ffc9a760e01b6001600160e01b03198316146106d8565b60606002805461073d90612df4565b80601f016020809104026020016040519081016040528092919081815260200182805461076990612df4565b80156107b65780601f1061078b576101008083540402835291602001916107b6565b820191906000526020600020905b81548152906001019060200180831161079957829003601f168201915b50505050509050919050565b6107ee604080516080810190915260008082526020820190815260200160008152602001600081525090565b60008281526007602090815260409182902082516080810190935260010180546001600160a01b03811684529091830190600160a01b900460ff16600281111561084857634e487b7160e01b600052602160045260246000fd5b600281111561086757634e487b7160e01b600052602160045260246000fd5b81526001820154602082015260029091015460409091015292915050565b6004546000906001600160a01b031633146108b25760405162461bcd60e51b81526004016106ac90612bcd565b6108bb8361154d565b60ff1660011461090d5760405162461bcd60e51b815260206004820152601960248201527f44656564206e6f7420616363657074696e67206f66666572730000000000000060448201526064016106ac565b6006805460408051606088901b6bffffffffffffffffffffffff19166020808301919091526034808301859052835180840390910181526054909201909252805191012091600061095d83612e5c565b909155505060008181526008602090815260408083206003810180546001600160a01b038d81166001600160a01b03199283168117909355600484018d905560018085018b9055600285018054928e169290931682179092558a84558a875260078652848720600501805492830181558752958590200186905582519081529283018a9052908201869052606082018490529186917fac3dc350fd8fe7a7b7c5b88bf344a2df332c672b59d6dd43a0cd1794a7270e399060800160405180910390a35090505b95945050505050565b60076020908152600091825260409182902080548351608081019094526001820180546001600160a01b03808216875260ff80851697610100860490921696600160a81b860463ffffffff1696600160c81b90960464ffffffffff169594929390840191600160a01b909104166002811115610ab857634e487b7160e01b600052602160045260246000fd5b6002811115610ad757634e487b7160e01b600052602160045260246000fd5b81526001820154602082015260029091015460409091015260049091015486565b6004546001600160a01b03163314610b225760405162461bcd60e51b81526004016106ac90612bcd565b610b2c8183610644565b600114610b4b5760405162461bcd60e51b81526004016106ac90612cc0565b610b548261154d565b60ff16600114610bb25760405162461bcd60e51b815260206004820152602360248201527f446565642063616e2774206265207265766f6b6564206174207468697320737460448201526261676560e81b60648201526084016106ac565b60008281526007602052604090819020805460ff19169055517f5e7d27d7357da2bce071cb0105a9736b8264b9c259f97215d7e2f7b502881dd890610bfa9084815260200190565b60405180910390a15050565b6001600160a01b038516331480610c225750610c2285336105a5565b610c895760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016106ac565b610c9685858585856119db565b5050505050565b600860209081526000918252604091829020805460018201546002808401548651608081019097526003850180546001600160a01b038082168a5295989497959092169594909290840191600160a01b900460ff1690811115610d1057634e487b7160e01b600052602160045260246000fd5b6002811115610d2f57634e487b7160e01b600052602160045260246000fd5b815260200160018201548152602001600282015481525050905084565b60608151835114610db15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016106ac565b6000835167ffffffffffffffff811115610ddb57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610e04578160200160208202803683370190505b50905060005b8451811015610ea657610e6b858281518110610e3657634e487b7160e01b600052603260045260246000fd5b6020026020010151858381518110610e5e57634e487b7160e01b600052603260045260246000fd5b6020026020010151610644565b828281518110610e8b57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610e9f81612e5c565b9050610e0a565b509392505050565b6004546001600160a01b03163314610ed85760405162461bcd60e51b81526004016106ac90612bcd565b610ee28184610644565b600114610f015760405162461bcd60e51b81526004016106ac90612cc0565b610f0a8361154d565b60ff16600114610f5c5760405162461bcd60e51b815260206004820152601d60248201527f446565642063616e277420616363657074206d6f7265206f666665727300000060448201526064016106ac565b60008381526007602052604090208054610100600160a81b0319166101006001600160a01b0384160217808255610fa090600160a81b900463ffffffff1642612dcb565b815464ffffffffff91909116600160c81b0264ffffffffff60c81b1990911617815560048101839055610fd7600582016000612349565b805460ff1916600217815560408051858152602081018590527f44966d4e56d70077531879040894aa85057c3ba7618964bbe117ac526a5bc94b910160405180910390a150505050565b6004546000906001600160a01b0316331461104e5760405162461bcd60e51b81526004016106ac90612bcd565b6005805490600061105e83612e5c565b90915550506005546000908152600760205260409020805463ffffffff60a81b1916600160a81b63ffffffff8816021781556001810180546001600160a01b031981166001600160a01b038b1690811783558992916001600160a81b03191617600160a01b8360028111156110e357634e487b7160e01b600052602160045260246000fd5b02179055506003810185905560028101849055600554604080516020810190915260008152611116918591600190611bd4565b805460ff191660011781556005546040516001600160a01b038a16907f2ed4c7b7768c6b7a36a2a860b72dce02efdff532675591e9ce525280d7aaedb690611165908b908a908a908d90612b43565b60405180910390a350506005549695505050505050565b6003546001600160a01b031633146111a65760405162461bcd60e51b81526004016106ac90612c8b565b6111b06000611cde565b565b6003546001600160a01b031633146111dc5760405162461bcd60e51b81526004016106ac90612c8b565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031633146112285760405162461bcd60e51b81526004016106ac90612c8b565b61123181611d30565b50565b61123f338383611d43565b5050565b6004546001600160a01b0316331461126d5760405162461bcd60e51b81526004016106ac90612bcd565b6112768161154d565b60ff166002146112e45760405162461bcd60e51b815260206004820152603360248201527f4465656420646f65736e2774206861766520616e206163636570746564206f6660448201527266657220746f2062652070616964206261636b60681b60648201526084016106ac565b600081815260076020908152604091829020805460ff19166003178155600401548251848152918201527ff77abe96fbd2868e9ea14580a47e854c89deb2b4d4b8cc87989bdf65c69639c7910160405180910390a150565b611368604080516080810190915260008082526020820190815260200160008152602001600081525090565b60008281526008602090815260409182902082516080810190935260030180546001600160a01b03811684529091830190600160a01b900460ff16600281111561084857634e487b7160e01b600052602160045260246000fd5b6004546001600160a01b031633146113ec5760405162461bcd60e51b81526004016106ac90612bcd565b6113f68183610644565b6001146114455760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f74207468652064656564206f776e65720000000060448201526064016106ac565b60036114508361154d565b60ff1610156114a15760405162461bcd60e51b815260206004820152601960248201527f446565642063616e277420626520636c61696d6564207965740000000000000060448201526064016106ac565b60008281526007602052604090819020805460ff19169055517fa15f537ebc49d6f6d5217f43d2c5d2b830069397bed363fdc1d811814148ec6d90610bfa9084815260200190565b6000818152600760209081526040918290206005018054835181840281018401909452808452606093928301828280156107b657602002820191906000526020600020905b81548152602001906001019080831161152e5750505050509050919050565b600081815260076020526040812054600160c81b900464ffffffffff1615801590611594575060008281526007602052604090205442600160c81b90910464ffffffffff16105b80156115b2575060008281526007602052604090205460ff16600314155b156115bf57506004919050565b5060009081526007602052604090205460ff1690565b919050565b6001600160a01b0385163314806115f657506115f685336105a5565b6116545760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016106ac565b610c968585858585611e24565b6003546001600160a01b0316331461168b5760405162461bcd60e51b81526004016106ac90612c8b565b6001600160a01b0381166116f05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106ac565b61123181611cde565b6004546001600160a01b031633146117235760405162461bcd60e51b81526004016106ac90612bcd565b6000828152600860205260409020600201546001600160a01b0382811691161461179b5760405162461bcd60e51b8152602060048201526024808201527f546869732061646472657373206469646e27742063726561746520746865206f604482015263333332b960e11b60648201526084016106ac565b6000828152600860205260409020546117b39061154d565b60ff166001146118145760405162461bcd60e51b815260206004820152602660248201527f43616e206f6e6c792072656d6f7665206f66666572732066726f6d206f70656e60448201526520446565647360d01b60648201526084016106ac565b600082815260086020526040808220828155600181018390556002810180546001600160a01b03191690556003810180546001600160a81b03191690556004810183905560050191909155517fc0885ade686cf1ca700832b5b7a2f2b0759e5a483174588f940e3ac048a8f8d090610bfa9084815260200190565b6004546001600160a01b031633146118b95760405162461bcd60e51b81526004016106ac90612bcd565b6118c38183610644565b6001146119125760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f74207468652064656564206f776e65720000000060448201526064016106ac565b60008281526007602052604090205460ff161561197c5760405162461bcd60e51b815260206004820152602260248201527f446565642063616e2774206265206275726e6564206174207468697320737461604482015261676560f01b60648201526084016106ac565b600082815260076020526040812080546001600160f01b03191681556001810180546001600160a81b0319169055600281018290556003810182905560048101829055906119cd6005830182612349565b505061123f81836001611f41565b8151835114611a3d5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016106ac565b6001600160a01b038416611a635760405162461bcd60e51b81526004016106ac90612bfc565b3360005b8451811015611b66576000858281518110611a9257634e487b7160e01b600052603260045260246000fd5b602002602001015190506000858381518110611abe57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015611b0e5760405162461bcd60e51b81526004016106ac90612c41565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611b4b908490612db3565b9250508190555050505080611b5f90612e5c565b9050611a67565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611bb6929190612b1e565b60405180910390a4611bcc8187878787876120bb565b505050505050565b6001600160a01b038416611c345760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016106ac565b33611c4e81600087611c4588612226565b610c9688612226565b6000848152602081815260408083206001600160a01b038916845290915281208054859290611c7e908490612db3565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c968160008787878761227f565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b805161123f906002906020840190612367565b816001600160a01b0316836001600160a01b03161415611db75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016106ac565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416611e4a5760405162461bcd60e51b81526004016106ac90612bfc565b33611e5a818787611c4588612226565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015611e9b5760405162461bcd60e51b81526004016106ac90612c41565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611ed8908490612db3565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611f3882888888888861227f565b50505050505050565b6001600160a01b038316611fa35760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016106ac565b33611fd381856000611fb487612226565b611fbd87612226565b5050604080516020810190915260009052505050565b6000838152602081815260408083206001600160a01b0388168452909152902054828110156120505760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016106ac565b6000848152602081815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b0384163b15611bcc5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906120ff9089908990889088908890600401612a24565b602060405180830381600087803b15801561211957600080fd5b505af1925050508015612149575060408051601f3d908101601f19168201909252612146918101906128a9565b60015b6121f657612155612ea3565b806308c379a0141561218f575061216a612ebb565b806121755750612191565b8060405162461bcd60e51b81526004016106ac9190612b72565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016106ac565b6001600160e01b0319811663bc197c8160e01b14611f385760405162461bcd60e51b81526004016106ac90612b85565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061226e57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b15611bcc5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906122c39089908990889088908890600401612a82565b602060405180830381600087803b1580156122dd57600080fd5b505af192505050801561230d575060408051601f3d908101601f1916820190925261230a918101906128a9565b60015b61231957612155612ea3565b6001600160e01b0319811663f23a6e6160e01b14611f385760405162461bcd60e51b81526004016106ac90612b85565b508054600082559060005260206000209081019061123191906123eb565b82805461237390612df4565b90600052602060002090601f01602090048101928261239557600085556123db565b82601f106123ae57805160ff19168380011785556123db565b828001600101855582156123db579182015b828111156123db5782518255916020019190600101906123c0565b506123e79291506123eb565b5090565b5b808211156123e757600081556001016123ec565b600067ffffffffffffffff83111561241a5761241a612e8d565b604051612431601f8501601f191660200182612e2f565b80915083815284848401111561244657600080fd5b83836020830137600060208583010152509392505050565b80356001600160a01b03811681146115d557600080fd5b600082601f830112612485578081fd5b8135602061249282612d8f565b60405161249f8282612e2f565b8381528281019150858301600585901b870184018810156124be578586fd5b855b858110156124dc578135845292840192908401906001016124c0565b5090979650505050505050565b600082601f8301126124f9578081fd5b61250883833560208501612400565b9392505050565b600060208284031215612520578081fd5b6125088261245e565b6000806040838503121561253b578081fd5b6125448361245e565b91506125526020840161245e565b90509250929050565b600080600080600060a08688031215612572578081fd5b61257b8661245e565b94506125896020870161245e565b9350604086013567ffffffffffffffff808211156125a5578283fd5b6125b189838a01612475565b945060608801359150808211156125c6578283fd5b6125d289838a01612475565b935060808801359150808211156125e7578283fd5b506125f4888289016124e9565b9150509295509295909350565b600080600080600060a08688031215612618578081fd5b6126218661245e565b945061262f6020870161245e565b93506040860135925060608601359150608086013567ffffffffffffffff811115612658578182fd5b6125f4888289016124e9565b60008060408385031215612676578182fd5b61267f8361245e565b915060208301358015158114612693578182fd5b809150509250929050565b60008060008060008060c087890312156126b6578081fd5b6126bf8761245e565b95506020870135600381106126d2578182fd5b9450604087013563ffffffff811681146126ea578182fd5b9350606087013592506080870135915061270660a0880161245e565b90509295509295509295565b60008060408385031215612724578182fd5b61272d8361245e565b946020939093013593505050565b600080600080600060a08688031215612752578283fd5b61275b8661245e565b9450602086013593506127706040870161245e565b94979396509394606081013594506080013592915050565b6000806040838503121561279a578182fd5b823567ffffffffffffffff808211156127b1578384fd5b818501915085601f8301126127c4578384fd5b813560206127d182612d8f565b6040516127de8282612e2f565b8381528281019150858301600585901b870184018b10156127fd578889fd5b8896505b84871015612826576128128161245e565b835260019690960195918301918301612801565b509650508601359250508082111561283c578283fd5b5061284985828601612475565b9150509250929050565b600060208284031215612864578081fd5b5035919050565b6000806040838503121561287d578182fd5b823591506125526020840161245e565b60006020828403121561289e578081fd5b813561250881612f45565b6000602082840312156128ba578081fd5b815161250881612f45565b6000602082840312156128d6578081fd5b813567ffffffffffffffff8111156128ec578182fd5b8201601f810184136128fc578182fd5b61290b84823560208401612400565b949350505050565b600080600060608486031215612927578081fd5b833592506020840135915061293e6040850161245e565b90509250925092565b6000815180845260208085019450808401835b838110156129765781518752958201959082019060010161295a565b509495945050505050565b60008151808452815b818110156129a65760208185018101518683018201520161298a565b818111156129b75782602083870101525b50601f01601f19169290920160200192915050565b600381106129ea57634e487b7160e01b600052602160045260246000fd5b9052565b80516001600160a01b0316825260208082015190612a0e908401826129cc565b5060408181015190830152606090810151910152565b6001600160a01b0386811682528516602082015260a060408201819052600090612a5090830186612947565b8281036060840152612a628186612947565b90508281036080840152612a768185612981565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090612abc90830184612981565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612aff57835183529284019291840191600101612ae3565b50909695505050505050565b6020815260006125086020830184612947565b604081526000612b316040830185612947565b8281036020840152610a238185612947565b60808101612b5182876129cc565b84602083015283604083015263ffffffff8316606083015295945050505050565b6020815260006125086020830184612981565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526015908201527421b0b63632b91034b9903737ba103a343290282ba760591b604082015260600190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526025908201527f546865206465656420646f65736e27742062656c6f6e6720746f20746865206360408201526430b63632b960d91b606082015260800190565b608081016106d882846129ee565b848152602081018490526001600160a01b038316604082015260e08101610a2360608301846129ee565b60ff871681526001600160a01b038616602082015263ffffffff8516604082015264ffffffffff841660608201526101208101612d7d60808301856129ee565b82610100830152979650505050505050565b600067ffffffffffffffff821115612da957612da9612e8d565b5060051b60200190565b60008219821115612dc657612dc6612e77565b500190565b600064ffffffffff808316818516808303821115612deb57612deb612e77565b01949350505050565b600181811c90821680612e0857607f821691505b60208210811415612e2957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715612e5557612e55612e8d565b6040525050565b6000600019821415612e7057612e70612e77565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115612eb857600481823e5160e01c5b90565b600060443d1015612ec95790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612ef957505050505090565b8285019150815181811115612f115750505050505090565b843d8701016020828501011115612f2b5750505050505090565b612f3a60208286010187612e2f565b509095945050505050565b6001600160e01b03198116811461123157600080fdfea264697066735822122099f55b7b84b8152b15cf86e18db82027fdd9af7f0a8b2075ef34f5c4e784dd7864736f6c63430008040033",
  "bytecodeSha1": "7fcb042979e92c52ca74b68150165636eb09b4f0",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "PWNDeed",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "150": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {
        "ERC1155._burn": {
          "146": [
            10370,
            10388,
            true
          ],
          "147": [
            10653,
            10674,
            true
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "148": [
            14707,
            14767,
            false
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "149": [
            13914,
            13969,
            false
          ]
        },
        "ERC1155._mint": {
          "142": [
            8542,
            8558,
            true
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "139": [
            6274,
            6302,
            true
          ],
          "140": [
            6365,
            6381,
            true
          ],
          "141": [
            6740,
            6761,
            true
          ]
        },
        "ERC1155._safeTransferFrom": {
          "144": [
            5106,
            5122,
            true
          ],
          "145": [
            5383,
            5404,
            true
          ]
        },
        "ERC1155._setApprovalForAll": {
          "143": [
            12215,
            12232,
            true
          ]
        },
        "ERC1155.balanceOf": {
          "133": [
            2283,
            2304,
            true
          ]
        },
        "ERC1155.balanceOfBatch": {
          "136": [
            2746,
            2775,
            true
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "134": [
            4270,
            4290,
            true
          ],
          "135": [
            4294,
            4330,
            true
          ]
        },
        "ERC1155.safeTransferFrom": {
          "137": [
            3784,
            3804,
            true
          ],
          "138": [
            3808,
            3844,
            true
          ]
        }
      },
      "10": {},
      "13": {
        "PWNDeed.acceptOffer": {
          "121": [
            8430,
            8458,
            true
          ],
          "122": [
            8518,
            8542,
            true
          ]
        },
        "PWNDeed.burn": {
          "131": [
            10118,
            10146,
            true
          ],
          "132": [
            10197,
            10220,
            true
          ]
        },
        "PWNDeed.claim": {
          "124": [
            9592,
            9620,
            true
          ],
          "125": [
            9671,
            9695,
            true
          ]
        },
        "PWNDeed.getDeedStatus": {
          "126": [
            10960,
            10986,
            false
          ],
          "127": [
            10990,
            11030,
            false
          ],
          "128": [
            11034,
            11057,
            false
          ]
        },
        "PWNDeed.makeOffer": {
          "118": [
            6516,
            6540,
            true
          ]
        },
        "PWNDeed.repayLoan": {
          "123": [
            9077,
            9101,
            true
          ]
        },
        "PWNDeed.revoke": {
          "119": [
            5573,
            5601,
            true
          ],
          "120": [
            5661,
            5685,
            true
          ]
        },
        "PWNDeed.revokeOffer": {
          "129": [
            7792,
            7824,
            true
          ],
          "130": [
            7883,
            7921,
            true
          ]
        }
      },
      "2": {},
      "4": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "94": [
            2378,
            2395
          ],
          "95": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "6": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "54": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "71": [
            1998,
            2071
          ],
          "72": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "ERC1155._asSingletonArray": {
          "115": [
            15225,
            15243
          ],
          "116": [
            15254,
            15266
          ]
        },
        "ERC1155._burn": {
          "107": [
            10362,
            10428
          ],
          "108": [
            10481,
            10583
          ],
          "109": [
            10645,
            10715
          ],
          "110": [
            10749,
            10791
          ],
          "111": [
            10812,
            10871
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "112": [
            14927,
            14941
          ],
          "113": [
            14981,
            15043
          ],
          "114": [
            14791,
            14841
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "117": [
            13993,
            14043
          ]
        },
        "ERC1155._mint": {
          "89": [
            8534,
            8596
          ],
          "90": [
            8649,
            8751
          ],
          "91": [
            8762,
            8789
          ],
          "92": [
            8799,
            8856
          ],
          "93": [
            8867,
            8941
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "81": [
            6266,
            6347
          ],
          "82": [
            6357,
            6423
          ],
          "83": [
            6732,
            6808
          ],
          "84": [
            6850,
            6892
          ],
          "85": [
            6920,
            6947
          ],
          "86": [
            6583,
            6586
          ],
          "87": [
            6968,
            7020
          ],
          "88": [
            7031,
            7106
          ]
        },
        "ERC1155._safeTransferFrom": {
          "100": [
            5098,
            5164
          ],
          "101": [
            5217,
            5313
          ],
          "102": [
            5375,
            5451
          ],
          "103": [
            5485,
            5527
          ],
          "104": [
            5547,
            5574
          ],
          "105": [
            5585,
            5636
          ],
          "106": [
            5647,
            5715
          ]
        },
        "ERC1155._setApprovalForAll": {
          "97": [
            12207,
            12278
          ],
          "98": [
            12288,
            12334
          ],
          "99": [
            12344,
            12390
          ]
        },
        "ERC1155._setURI": {
          "96": [
            8002,
            8015
          ]
        },
        "ERC1155.balanceOf": {
          "9": [
            2275,
            2352
          ],
          "10": [
            2362,
            2391
          ]
        },
        "ERC1155.balanceOfBatch": {
          "32": [
            2738,
            2821
          ],
          "33": [
            2966,
            3015
          ],
          "34": [
            2947,
            2950
          ],
          "35": [
            3036,
            3056
          ]
        },
        "ERC1155.isApprovedForAll": {
          "8": [
            3466,
            3510
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "29": [
            4249,
            4406
          ],
          "31": [
            4416,
            4468
          ]
        },
        "ERC1155.safeTransferFrom": {
          "69": [
            3763,
            3911
          ],
          "70": [
            3921,
            3966
          ]
        },
        "ERC1155.setApprovalForAll": {
          "57": [
            3225,
            3277
          ]
        },
        "ERC1155.supportsInterface": {
          "11": [
            1339,
            1519
          ]
        },
        "ERC1155.uri": {
          "13": [
            2010,
            2021
          ]
        }
      },
      "10": {},
      "13": {
        "PWNDeed.acceptOffer": {
          "36": [
            8422,
            8500
          ],
          "37": [
            8510,
            8576
          ],
          "38": [
            8628,
            8650
          ],
          "39": [
            8660,
            8717
          ],
          "40": [
            8727,
            8754
          ],
          "41": [
            8764,
            8789
          ],
          "42": [
            8799,
            8814
          ],
          "43": [
            8825,
            8857
          ]
        },
        "PWNDeed.burn": {
          "77": [
            10110,
            10179
          ],
          "78": [
            10189,
            10259
          ],
          "79": [
            10270,
            10288
          ],
          "80": [
            10298,
            10320
          ]
        },
        "PWNDeed.claim": {
          "62": [
            9584,
            9653
          ],
          "63": [
            9663,
            9725
          ],
          "64": [
            9736,
            9758
          ],
          "65": [
            9769,
            9791
          ]
        },
        "PWNDeed.create": {
          "44": [
            4830,
            4834
          ],
          "45": [
            4884,
            4909
          ],
          "46": [
            4919,
            4963
          ],
          "47": [
            4973,
            5014
          ],
          "48": [
            5024,
            5053
          ],
          "49": [
            5063,
            5100
          ],
          "50": [
            5111,
            5135
          ],
          "51": [
            5146,
            5161
          ],
          "52": [
            5172,
            5258
          ],
          "53": [
            5269,
            5278
          ]
        },
        "PWNDeed.getAcceptedOffer": {
          "1": [
            13344,
            13376
          ]
        },
        "PWNDeed.getBorrower": {
          "4": [
            12178,
            12205
          ]
        },
        "PWNDeed.getDeedCollateral": {
          "14": [
            12547,
            12576
          ]
        },
        "PWNDeed.getDeedID": {
          "2": [
            13783,
            13808
          ]
        },
        "PWNDeed.getDeedStatus": {
          "67": [
            11073,
            11081
          ],
          "68": [
            11112,
            11137
          ]
        },
        "PWNDeed.getDuration": {
          "5": [
            11867,
            11894
          ]
        },
        "PWNDeed.getExpiration": {
          "7": [
            11545,
            11574
          ]
        },
        "PWNDeed.getLender": {
          "0": [
            14796,
            14824
          ]
        },
        "PWNDeed.getOfferLoan": {
          "61": [
            14160,
            14186
          ]
        },
        "PWNDeed.getOffers": {
          "66": [
            12858,
            12890
          ]
        },
        "PWNDeed.makeOffer": {
          "15": [
            6508,
            6570
          ],
          "16": [
            6649,
            6656
          ],
          "17": [
            6711,
            6750
          ],
          "18": [
            6760,
            6792
          ],
          "19": [
            6802,
            6828
          ],
          "20": [
            6838,
            6860
          ],
          "21": [
            6870,
            6886
          ],
          "22": [
            6897,
            6933
          ],
          "23": [
            6944,
            7019
          ],
          "24": [
            7030,
            7041
          ]
        },
        "PWNDeed.repayLoan": {
          "58": [
            9069,
            9157
          ],
          "59": [
            9168,
            9190
          ],
          "60": [
            9201,
            9247
          ]
        },
        "PWNDeed.revoke": {
          "25": [
            5565,
            5643
          ],
          "26": [
            5653,
            5725
          ],
          "27": [
            5736,
            5758
          ],
          "28": [
            5769,
            5791
          ]
        },
        "PWNDeed.revokeOffer": {
          "73": [
            7784,
            7865
          ],
          "74": [
            7875,
            7964
          ],
          "75": [
            7975,
            7996
          ],
          "76": [
            8007,
            8032
          ]
        },
        "PWNDeed.setPWN": {
          "55": [
            15195,
            15209
          ]
        },
        "PWNDeed.setUri": {
          "56": [
            15479,
            15495
          ]
        },
        "PWNDeed.toBePaid": {
          "3": [
            14469,
            14499
          ]
        }
      },
      "2": {},
      "4": {},
      "8": {
        "Context._msgSender": {
          "30": [
            712,
            729
          ]
        }
      },
      "9": {
        "ERC165.supportsInterface": {
          "12": [
            930,
            977
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC1155MetadataURI",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061021b5760003560e01c80638500d91911610125578063d05197c1116100ad578063f1898a951161007c578063f1898a95146105d3578063f242432a146105f8578063f2fde38b1461060b578063fc09de891461061e578063fcd3533c1461063157600080fd5b8063d05197c114610551578063ddd5e1b214610564578063dfa49e6f14610577578063e985e9c51461059757600080fd5b80639b642de1116100f45780639b642de1146104cb578063a05b775f146104de578063a22cb46514610522578063ab7b1c8914610535578063af640d0f1461054857600080fd5b80638500d919146104375780638bb126a7146104655780638c26ba0c146104a75780638da5cb5b146104ba57600080fd5b8063474d3ff0116101a8578063691da99011610177578063691da990146103b657806369bdc155146103d9578063715018a6146103f95780637f4285f114610401578063805094c71461042457600080fd5b8063474d3ff01461034d5780634e1273f414610370578063600ca3d21461039057806363bbf33a146103a357600080fd5b806312dbc1d8116101ef57806312dbc1d8146102cd5780631387c2b5146102ed57806318edf5641461030057806320d154da146103255780632eb2c2d61461033a57600080fd5b8062fdd58e1461022057806301ffc9a7146102465780630e89341c146102695780631218239f14610289575b600080fd5b61023361022e366004612712565b610644565b6040519081526020015b60405180910390f35b61025961025436600461288d565b6106de565b604051901515815260200161023d565b61027c610277366004612853565b61072e565b60405161023d9190612b72565b6102b5610297366004612853565b6000908152600860205260409020600201546001600160a01b031690565b6040516001600160a01b03909116815260200161023d565b6102e06102db366004612853565b6107c2565b60405161023d9190612d05565b6102336102fb36600461273b565b610885565b61031361030e366004612853565b610a2c565b60405161023d96959493929190612d3d565b61033861033336600461286b565b610af8565b005b61033861034836600461255b565b610c06565b61036061035b366004612853565b610c9d565b60405161023d9493929190612d13565b61038361037e366004612788565b610d4c565b60405161023d9190612b0b565b61033861039e366004612913565b610eae565b6102336103b136600461269e565b611021565b6102336103c4366004612853565b60009081526007602052604090206004015490565b6102336103e7366004612853565b60009081526008602052604090205490565b61033861117c565b61023361040f366004612853565b60009081526008602052604090206001015490565b6004546102b5906001600160a01b031681565b6102b5610445366004612853565b60009081526007602052604090205461010090046001600160a01b031690565b610492610473366004612853565b600090815260076020526040902054600160a81b900463ffffffff1690565b60405163ffffffff909116815260200161023d565b6103386104b536600461250f565b6111b2565b6003546001600160a01b03166102b5565b6103386104d93660046128c5565b6111fe565b61050c6104ec366004612853565b600090815260076020526040902054600160c81b900464ffffffffff1690565b60405164ffffffffff909116815260200161023d565b610338610530366004612664565b611234565b610338610543366004612853565b611243565b61023360055481565b6102e061055f366004612853565b61133c565b61033861057236600461286b565b6113c2565b61058a610585366004612853565b6114e9565b60405161023d9190612ac7565b6102596105a5366004612529565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6105e66105e1366004612853565b61154d565b60405160ff909116815260200161023d565b610338610606366004612601565b6115da565b61033861061936600461250f565b611661565b61033861062c36600461286b565b6116f9565b61033861063f36600461286b565b61188f565b60006001600160a01b0383166106b55760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061070f57506001600160e01b031982166303a24d0760e21b145b806106d857506301ffc9a760e01b6001600160e01b03198316146106d8565b60606002805461073d90612df4565b80601f016020809104026020016040519081016040528092919081815260200182805461076990612df4565b80156107b65780601f1061078b576101008083540402835291602001916107b6565b820191906000526020600020905b81548152906001019060200180831161079957829003601f168201915b50505050509050919050565b6107ee604080516080810190915260008082526020820190815260200160008152602001600081525090565b60008281526007602090815260409182902082516080810190935260010180546001600160a01b03811684529091830190600160a01b900460ff16600281111561084857634e487b7160e01b600052602160045260246000fd5b600281111561086757634e487b7160e01b600052602160045260246000fd5b81526001820154602082015260029091015460409091015292915050565b6004546000906001600160a01b031633146108b25760405162461bcd60e51b81526004016106ac90612bcd565b6108bb8361154d565b60ff1660011461090d5760405162461bcd60e51b815260206004820152601960248201527f44656564206e6f7420616363657074696e67206f66666572730000000000000060448201526064016106ac565b6006805460408051606088901b6bffffffffffffffffffffffff19166020808301919091526034808301859052835180840390910181526054909201909252805191012091600061095d83612e5c565b909155505060008181526008602090815260408083206003810180546001600160a01b038d81166001600160a01b03199283168117909355600484018d905560018085018b9055600285018054928e169290931682179092558a84558a875260078652848720600501805492830181558752958590200186905582519081529283018a9052908201869052606082018490529186917fac3dc350fd8fe7a7b7c5b88bf344a2df332c672b59d6dd43a0cd1794a7270e399060800160405180910390a35090505b95945050505050565b60076020908152600091825260409182902080548351608081019094526001820180546001600160a01b03808216875260ff80851697610100860490921696600160a81b860463ffffffff1696600160c81b90960464ffffffffff169594929390840191600160a01b909104166002811115610ab857634e487b7160e01b600052602160045260246000fd5b6002811115610ad757634e487b7160e01b600052602160045260246000fd5b81526001820154602082015260029091015460409091015260049091015486565b6004546001600160a01b03163314610b225760405162461bcd60e51b81526004016106ac90612bcd565b610b2c8183610644565b600114610b4b5760405162461bcd60e51b81526004016106ac90612cc0565b610b548261154d565b60ff16600114610bb25760405162461bcd60e51b815260206004820152602360248201527f446565642063616e2774206265207265766f6b6564206174207468697320737460448201526261676560e81b60648201526084016106ac565b60008281526007602052604090819020805460ff19169055517f5e7d27d7357da2bce071cb0105a9736b8264b9c259f97215d7e2f7b502881dd890610bfa9084815260200190565b60405180910390a15050565b6001600160a01b038516331480610c225750610c2285336105a5565b610c895760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016106ac565b610c9685858585856119db565b5050505050565b600860209081526000918252604091829020805460018201546002808401548651608081019097526003850180546001600160a01b038082168a5295989497959092169594909290840191600160a01b900460ff1690811115610d1057634e487b7160e01b600052602160045260246000fd5b6002811115610d2f57634e487b7160e01b600052602160045260246000fd5b815260200160018201548152602001600282015481525050905084565b60608151835114610db15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016106ac565b6000835167ffffffffffffffff811115610ddb57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610e04578160200160208202803683370190505b50905060005b8451811015610ea657610e6b858281518110610e3657634e487b7160e01b600052603260045260246000fd5b6020026020010151858381518110610e5e57634e487b7160e01b600052603260045260246000fd5b6020026020010151610644565b828281518110610e8b57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610e9f81612e5c565b9050610e0a565b509392505050565b6004546001600160a01b03163314610ed85760405162461bcd60e51b81526004016106ac90612bcd565b610ee28184610644565b600114610f015760405162461bcd60e51b81526004016106ac90612cc0565b610f0a8361154d565b60ff16600114610f5c5760405162461bcd60e51b815260206004820152601d60248201527f446565642063616e277420616363657074206d6f7265206f666665727300000060448201526064016106ac565b60008381526007602052604090208054610100600160a81b0319166101006001600160a01b0384160217808255610fa090600160a81b900463ffffffff1642612dcb565b815464ffffffffff91909116600160c81b0264ffffffffff60c81b1990911617815560048101839055610fd7600582016000612349565b805460ff1916600217815560408051858152602081018590527f44966d4e56d70077531879040894aa85057c3ba7618964bbe117ac526a5bc94b910160405180910390a150505050565b6004546000906001600160a01b0316331461104e5760405162461bcd60e51b81526004016106ac90612bcd565b6005805490600061105e83612e5c565b90915550506005546000908152600760205260409020805463ffffffff60a81b1916600160a81b63ffffffff8816021781556001810180546001600160a01b031981166001600160a01b038b1690811783558992916001600160a81b03191617600160a01b8360028111156110e357634e487b7160e01b600052602160045260246000fd5b02179055506003810185905560028101849055600554604080516020810190915260008152611116918591600190611bd4565b805460ff191660011781556005546040516001600160a01b038a16907f2ed4c7b7768c6b7a36a2a860b72dce02efdff532675591e9ce525280d7aaedb690611165908b908a908a908d90612b43565b60405180910390a350506005549695505050505050565b6003546001600160a01b031633146111a65760405162461bcd60e51b81526004016106ac90612c8b565b6111b06000611cde565b565b6003546001600160a01b031633146111dc5760405162461bcd60e51b81526004016106ac90612c8b565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031633146112285760405162461bcd60e51b81526004016106ac90612c8b565b61123181611d30565b50565b61123f338383611d43565b5050565b6004546001600160a01b0316331461126d5760405162461bcd60e51b81526004016106ac90612bcd565b6112768161154d565b60ff166002146112e45760405162461bcd60e51b815260206004820152603360248201527f4465656420646f65736e2774206861766520616e206163636570746564206f6660448201527266657220746f2062652070616964206261636b60681b60648201526084016106ac565b600081815260076020908152604091829020805460ff19166003178155600401548251848152918201527ff77abe96fbd2868e9ea14580a47e854c89deb2b4d4b8cc87989bdf65c69639c7910160405180910390a150565b611368604080516080810190915260008082526020820190815260200160008152602001600081525090565b60008281526008602090815260409182902082516080810190935260030180546001600160a01b03811684529091830190600160a01b900460ff16600281111561084857634e487b7160e01b600052602160045260246000fd5b6004546001600160a01b031633146113ec5760405162461bcd60e51b81526004016106ac90612bcd565b6113f68183610644565b6001146114455760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f74207468652064656564206f776e65720000000060448201526064016106ac565b60036114508361154d565b60ff1610156114a15760405162461bcd60e51b815260206004820152601960248201527f446565642063616e277420626520636c61696d6564207965740000000000000060448201526064016106ac565b60008281526007602052604090819020805460ff19169055517fa15f537ebc49d6f6d5217f43d2c5d2b830069397bed363fdc1d811814148ec6d90610bfa9084815260200190565b6000818152600760209081526040918290206005018054835181840281018401909452808452606093928301828280156107b657602002820191906000526020600020905b81548152602001906001019080831161152e5750505050509050919050565b600081815260076020526040812054600160c81b900464ffffffffff1615801590611594575060008281526007602052604090205442600160c81b90910464ffffffffff16105b80156115b2575060008281526007602052604090205460ff16600314155b156115bf57506004919050565b5060009081526007602052604090205460ff1690565b919050565b6001600160a01b0385163314806115f657506115f685336105a5565b6116545760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016106ac565b610c968585858585611e24565b6003546001600160a01b0316331461168b5760405162461bcd60e51b81526004016106ac90612c8b565b6001600160a01b0381166116f05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106ac565b61123181611cde565b6004546001600160a01b031633146117235760405162461bcd60e51b81526004016106ac90612bcd565b6000828152600860205260409020600201546001600160a01b0382811691161461179b5760405162461bcd60e51b8152602060048201526024808201527f546869732061646472657373206469646e27742063726561746520746865206f604482015263333332b960e11b60648201526084016106ac565b6000828152600860205260409020546117b39061154d565b60ff166001146118145760405162461bcd60e51b815260206004820152602660248201527f43616e206f6e6c792072656d6f7665206f66666572732066726f6d206f70656e60448201526520446565647360d01b60648201526084016106ac565b600082815260086020526040808220828155600181018390556002810180546001600160a01b03191690556003810180546001600160a81b03191690556004810183905560050191909155517fc0885ade686cf1ca700832b5b7a2f2b0759e5a483174588f940e3ac048a8f8d090610bfa9084815260200190565b6004546001600160a01b031633146118b95760405162461bcd60e51b81526004016106ac90612bcd565b6118c38183610644565b6001146119125760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f74207468652064656564206f776e65720000000060448201526064016106ac565b60008281526007602052604090205460ff161561197c5760405162461bcd60e51b815260206004820152602260248201527f446565642063616e2774206265206275726e6564206174207468697320737461604482015261676560f01b60648201526084016106ac565b600082815260076020526040812080546001600160f01b03191681556001810180546001600160a81b0319169055600281018290556003810182905560048101829055906119cd6005830182612349565b505061123f81836001611f41565b8151835114611a3d5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016106ac565b6001600160a01b038416611a635760405162461bcd60e51b81526004016106ac90612bfc565b3360005b8451811015611b66576000858281518110611a9257634e487b7160e01b600052603260045260246000fd5b602002602001015190506000858381518110611abe57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015611b0e5760405162461bcd60e51b81526004016106ac90612c41565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611b4b908490612db3565b9250508190555050505080611b5f90612e5c565b9050611a67565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611bb6929190612b1e565b60405180910390a4611bcc8187878787876120bb565b505050505050565b6001600160a01b038416611c345760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016106ac565b33611c4e81600087611c4588612226565b610c9688612226565b6000848152602081815260408083206001600160a01b038916845290915281208054859290611c7e908490612db3565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c968160008787878761227f565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b805161123f906002906020840190612367565b816001600160a01b0316836001600160a01b03161415611db75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016106ac565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416611e4a5760405162461bcd60e51b81526004016106ac90612bfc565b33611e5a818787611c4588612226565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015611e9b5760405162461bcd60e51b81526004016106ac90612c41565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611ed8908490612db3565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611f3882888888888861227f565b50505050505050565b6001600160a01b038316611fa35760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016106ac565b33611fd381856000611fb487612226565b611fbd87612226565b5050604080516020810190915260009052505050565b6000838152602081815260408083206001600160a01b0388168452909152902054828110156120505760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016106ac565b6000848152602081815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b0384163b15611bcc5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906120ff9089908990889088908890600401612a24565b602060405180830381600087803b15801561211957600080fd5b505af1925050508015612149575060408051601f3d908101601f19168201909252612146918101906128a9565b60015b6121f657612155612ea3565b806308c379a0141561218f575061216a612ebb565b806121755750612191565b8060405162461bcd60e51b81526004016106ac9190612b72565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016106ac565b6001600160e01b0319811663bc197c8160e01b14611f385760405162461bcd60e51b81526004016106ac90612b85565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061226e57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b15611bcc5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906122c39089908990889088908890600401612a82565b602060405180830381600087803b1580156122dd57600080fd5b505af192505050801561230d575060408051601f3d908101601f1916820190925261230a918101906128a9565b60015b61231957612155612ea3565b6001600160e01b0319811663f23a6e6160e01b14611f385760405162461bcd60e51b81526004016106ac90612b85565b508054600082559060005260206000209081019061123191906123eb565b82805461237390612df4565b90600052602060002090601f01602090048101928261239557600085556123db565b82601f106123ae57805160ff19168380011785556123db565b828001600101855582156123db579182015b828111156123db5782518255916020019190600101906123c0565b506123e79291506123eb565b5090565b5b808211156123e757600081556001016123ec565b600067ffffffffffffffff83111561241a5761241a612e8d565b604051612431601f8501601f191660200182612e2f565b80915083815284848401111561244657600080fd5b83836020830137600060208583010152509392505050565b80356001600160a01b03811681146115d557600080fd5b600082601f830112612485578081fd5b8135602061249282612d8f565b60405161249f8282612e2f565b8381528281019150858301600585901b870184018810156124be578586fd5b855b858110156124dc578135845292840192908401906001016124c0565b5090979650505050505050565b600082601f8301126124f9578081fd5b61250883833560208501612400565b9392505050565b600060208284031215612520578081fd5b6125088261245e565b6000806040838503121561253b578081fd5b6125448361245e565b91506125526020840161245e565b90509250929050565b600080600080600060a08688031215612572578081fd5b61257b8661245e565b94506125896020870161245e565b9350604086013567ffffffffffffffff808211156125a5578283fd5b6125b189838a01612475565b945060608801359150808211156125c6578283fd5b6125d289838a01612475565b935060808801359150808211156125e7578283fd5b506125f4888289016124e9565b9150509295509295909350565b600080600080600060a08688031215612618578081fd5b6126218661245e565b945061262f6020870161245e565b93506040860135925060608601359150608086013567ffffffffffffffff811115612658578182fd5b6125f4888289016124e9565b60008060408385031215612676578182fd5b61267f8361245e565b915060208301358015158114612693578182fd5b809150509250929050565b60008060008060008060c087890312156126b6578081fd5b6126bf8761245e565b95506020870135600381106126d2578182fd5b9450604087013563ffffffff811681146126ea578182fd5b9350606087013592506080870135915061270660a0880161245e565b90509295509295509295565b60008060408385031215612724578182fd5b61272d8361245e565b946020939093013593505050565b600080600080600060a08688031215612752578283fd5b61275b8661245e565b9450602086013593506127706040870161245e565b94979396509394606081013594506080013592915050565b6000806040838503121561279a578182fd5b823567ffffffffffffffff808211156127b1578384fd5b818501915085601f8301126127c4578384fd5b813560206127d182612d8f565b6040516127de8282612e2f565b8381528281019150858301600585901b870184018b10156127fd578889fd5b8896505b84871015612826576128128161245e565b835260019690960195918301918301612801565b509650508601359250508082111561283c578283fd5b5061284985828601612475565b9150509250929050565b600060208284031215612864578081fd5b5035919050565b6000806040838503121561287d578182fd5b823591506125526020840161245e565b60006020828403121561289e578081fd5b813561250881612f45565b6000602082840312156128ba578081fd5b815161250881612f45565b6000602082840312156128d6578081fd5b813567ffffffffffffffff8111156128ec578182fd5b8201601f810184136128fc578182fd5b61290b84823560208401612400565b949350505050565b600080600060608486031215612927578081fd5b833592506020840135915061293e6040850161245e565b90509250925092565b6000815180845260208085019450808401835b838110156129765781518752958201959082019060010161295a565b509495945050505050565b60008151808452815b818110156129a65760208185018101518683018201520161298a565b818111156129b75782602083870101525b50601f01601f19169290920160200192915050565b600381106129ea57634e487b7160e01b600052602160045260246000fd5b9052565b80516001600160a01b0316825260208082015190612a0e908401826129cc565b5060408181015190830152606090810151910152565b6001600160a01b0386811682528516602082015260a060408201819052600090612a5090830186612947565b8281036060840152612a628186612947565b90508281036080840152612a768185612981565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090612abc90830184612981565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612aff57835183529284019291840191600101612ae3565b50909695505050505050565b6020815260006125086020830184612947565b604081526000612b316040830185612947565b8281036020840152610a238185612947565b60808101612b5182876129cc565b84602083015283604083015263ffffffff8316606083015295945050505050565b6020815260006125086020830184612981565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526015908201527421b0b63632b91034b9903737ba103a343290282ba760591b604082015260600190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526025908201527f546865206465656420646f65736e27742062656c6f6e6720746f20746865206360408201526430b63632b960d91b606082015260800190565b608081016106d882846129ee565b848152602081018490526001600160a01b038316604082015260e08101610a2360608301846129ee565b60ff871681526001600160a01b038616602082015263ffffffff8516604082015264ffffffffff841660608201526101208101612d7d60808301856129ee565b82610100830152979650505050505050565b600067ffffffffffffffff821115612da957612da9612e8d565b5060051b60200190565b60008219821115612dc657612dc6612e77565b500190565b600064ffffffffff808316818516808303821115612deb57612deb612e77565b01949350505050565b600181811c90821680612e0857607f821691505b60208210811415612e2957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715612e5557612e55612e8d565b6040525050565b6000600019821415612e7057612e70612e77565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115612eb857600481823e5160e01c5b90565b600060443d1015612ec95790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612ef957505050505090565b8285019150815181811115612f115750505050505090565b843d8701016020828501011115612f2b5750505050505090565b612f3a60208286010187612e2f565b509095945050505050565b6001600160e01b03198116811461123157600080fdfea264697066735822122099f55b7b84b8152b15cf86e18db82027fdd9af7f0a8b2075ef34f5c4e784dd7864736f6c63430008040033",
  "deployedSourceMap": "227:15277:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:228:1;;;;;;:::i;:::-;;:::i;:::-;;;14741:25:15;;;14729:2;14714:18;2170:228:1;;;;;;;;1221:305;;;;;;:::i;:::-;;:::i;:::-;;;14568:14:15;;14561:22;14543:41;;14531:2;14516:18;1221:305:1;14498:92:15;1925:103:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14721:110:13:-;;;;;;:::i;:::-;14777:7;14803:14;;;:6;:14;;;;;:21;;;-1:-1:-1;;;;;14803:21:13;;14721:110;;;;-1:-1:-1;;;;;11165:32:15;;;11147:51;;11135:2;11120:18;14721:110:13;11102:102:15;12450:133:13;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6303:745::-;;;;;;:::i;:::-;;:::i;2047:38::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;5470:328::-;;;;;;:::i;:::-;;:::i;:::-;;4045:430:1;;;;;;:::i;:::-;;:::i;2131:40:13:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;2555:508:1:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8298:566:13:-;;;;;;:::i;:::-;;:::i;4582:703::-;;;;;;:::i;:::-;;:::i;13264:119::-;;;;;;:::i;:::-;13325:7;13351:11;;;:5;:11;;;;;:25;;;;13264:119;13708:107;;;;;;:::i;:::-;13764:7;13790:14;;;:6;:14;;;;;:18;;13708:107;1668:101:0;;;:::i;14395:111:13:-;;;;;;:::i;:::-;14450:7;14476:14;;;:6;:14;;;;;:23;;;;14395:111;473:18;;;;;-1:-1:-1;;;;;473:18:13;;;12103:109;;;;;;:::i;:::-;12159:7;12185:11;;;:5;:11;;;;;:20;;;;-1:-1:-1;;;;;12185:20:13;;12103:109;11793:108;;;;;;:::i;:::-;11849:6;11874:11;;;:5;:11;;;;;:20;-1:-1:-1;;;11874:20:13;;;;;11793:108;;;;27348:10:15;27336:23;;;27318:42;;27306:2;27291:18;11793:108:13;27273:93:15;15132:84:13;;;;;;:::i;:::-;;:::i;1036:85:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;1036:85;;15411:91:13;;;;;;:::i;:::-;;:::i;11469:112::-;;;;;;:::i;:::-;11527:6;11552:11;;;:5;:11;;;;;:22;-1:-1:-1;;;11552:22:13;;;;;11469:112;;;;27545:12:15;27533:25;;;27515:44;;27503:2;27488:18;11469:112:13;27470:95:15;3131:153:1;;;;;;:::i;:::-;;:::i;9009:245:13:-;;;;;;:::i;:::-;;:::i;572:17::-;;;;;;14066:127;;;;;;:::i;:::-;;:::i;9490:308::-;;;;;;:::i;:::-;;:::i;12776:121::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3351:166:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3473:27:1;;;3450:4;3473:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3351:166;10881:273:13;;;;;;:::i;:::-;;:::i;:::-;;;27742:4:15;27730:17;;;27712:36;;27700:2;27685:18;10881:273:13;27667:87:15;3584:389:1;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;7681:358:13:-;;;;;;:::i;:::-;;:::i;10017:310::-;;;;;;:::i;:::-;;:::i;2170:228:1:-;2256:7;-1:-1:-1;;;;;2283:21:1;;2275:77;;;;-1:-1:-1;;;2275:77:1;;16473:2:15;2275:77:1;;;16455:21:15;16512:2;16492:18;;;16485:30;16551:34;16531:18;;;16524:62;-1:-1:-1;;;16602:18:15;;;16595:41;16653:19;;2275:77:1;;;;;;;;;-1:-1:-1;2369:9:1;:13;;;;;;;;;;;-1:-1:-1;;;;;2369:22:1;;;;;;;;;;2170:228;;;;;:::o;1221:305::-;1323:4;-1:-1:-1;;;;;;1358:41:1;;-1:-1:-1;;;1358:41:1;;:109;;-1:-1:-1;;;;;;;1415:52:1;;-1:-1:-1;;;1415:52:1;1358:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1483:36:1;829:155:9;1925:103:1;1985:13;2017:4;2010:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:103;;;:::o;12450:133:13:-;12512:23;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12512:23:13;12554:11;;;;:5;:11;;;;;;;;;12547:29;;;;;;;;12554:22;;12547:29;;-1:-1:-1;;;;;12547:29:13;;;;12554:22;;12547:29;;;-1:-1:-1;;;12547:29:13;;;;;;;;;;-1:-1:-1;;;12547:29:13;;;;;;;;;;;;;;;-1:-1:-1;;;12547:29:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12450:133;-1:-1:-1;;12450:133:13:o;6303:745::-;3171:3;;6489:7;;-1:-1:-1;;;;;3171:3:13;3157:10;:17;3149:51;;;;-1:-1:-1;;;3149:51:13;;;;;;;:::i;:::-;6516:19:::1;6530:4;6516:13;:19::i;:::-;:24;;6539:1;6516:24;6508:62;;;::::0;-1:-1:-1;;;6508:62:13;;23214:2:15;6508:62:13::1;::::0;::::1;23196:21:15::0;23253:2;23233:18;;;23226:30;23292:27;23272:18;;;23265:55;23337:18;;6508:62:13::1;23186:175:15::0;6508:62:13::1;6632:5;::::0;;6606:32:::1;::::0;;10879:2:15;10875:15;;;-1:-1:-1;;10871:53:15;6606:32:13::1;::::0;;::::1;10859:66:15::0;;;;10941:12;;;;10934:28;;;6606:32:13;;;;;;;;;;10978:12:15;;;;6606:32:13;;;6596:43;;;::::1;::::0;;-1:-1:-1;6649:7:13::1;6632:5:::0;6649:7:::1;:::i;:::-;::::0;;;-1:-1:-1;;6667:19:13::1;6689:12:::0;;;:6:::1;:12;::::0;;;;;;;6711:10:::1;::::0;::::1;:39:::0;;-1:-1:-1;;;;;6711:39:13;;::::1;-1:-1:-1::0;;;;;;6711:39:13;;::::1;::::0;::::1;::::0;;;6760:17;;;:32;;;-1:-1:-1;6802:14:13;;::::1;:26:::0;;;-1:-1:-1;6838:12:13;::::1;:22:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;6870:16;;;6897:11;;;:5:::1;:11:::0;;;;;:25:::1;;:36:::0;;;;::::1;::::0;;;;;;;;::::1;::::0;;;6949:70;;12836:51:15;;;12903:18;;;12896:34;;;12946:18;;;12939:34;;;13004:2;12989:18;;12982:34;;;6689:12:13;6870:16;;6949:70:::1;::::0;12823:3:15;12808:19;6949:70:13::1;;;;;;;-1:-1:-1::0;7037:4:13;-1:-1:-1;3210:1:13::1;6303:745:::0;;;;;;;:::o;2047:38::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2047:38:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;2047:38:13;;;;;-1:-1:-1;;;2047:38:13;;;;;;;;;;;;;-1:-1:-1;;;2047:38:13;;;;;;;;;;-1:-1:-1;;;2047:38:13;;;;;;;;;;;;;;;-1:-1:-1;;;2047:38:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5470:328::-;3171:3;;-1:-1:-1;;;;;3171:3:13;3157:10;:17;3149:51;;;;-1:-1:-1;;;3149:51:13;;;;;;;:::i;:::-;5573:23:::1;5583:6;5591:4;5573:9;:23::i;:::-;5600:1;5573:28;5565:78;;;;-1:-1:-1::0;;;5565:78:13::1;;;;;;;:::i;:::-;5661:19;5675:4;5661:13;:19::i;:::-;:24;;5684:1;5661:24;5653:72;;;::::0;-1:-1:-1;;;5653:72:13;;25199:2:15;5653:72:13::1;::::0;::::1;25181:21:15::0;25238:2;25218:18;;;25211:30;25277:34;25257:18;;;25250:62;-1:-1:-1;;;25328:18:15;;;25321:33;25371:19;;5653:72:13::1;25171:225:15::0;5653:72:13::1;5757:1;5736:11:::0;;;:5:::1;:11;::::0;;;;;;:22;;-1:-1:-1;;5736:22:13::1;::::0;;5774:17;::::1;::::0;::::1;::::0;5742:4;14741:25:15;;14729:2;14714:18;;14696:76;5774:17:13::1;;;;;;;;5470:328:::0;;:::o;4045:430:1:-;-1:-1:-1;;;;;4270:20:1;;719:10:8;4270:20:1;;:60;;-1:-1:-1;4294:36:1;4311:4;719:10:8;3351:166:1;:::i;4294:36::-;4249:157;;;;-1:-1:-1;;;4249:157:1;;19578:2:15;4249:157:1;;;19560:21:15;19617:2;19597:18;;;19590:30;19656:34;19636:18;;;19629:62;-1:-1:-1;;;19707:18:15;;;19700:48;19765:19;;4249:157:1;19550:240:15;4249:157:1;4416:52;4439:4;4445:2;4449:3;4454:7;4463:4;4416:22;:52::i;:::-;4045:430;;;;;:::o;2131:40:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2131:40:13;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2131:40:13;;;;;;;;;;-1:-1:-1;;;2131:40:13;;;;;;;;;;;;;;;-1:-1:-1;;;2131:40:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2555:508:1:-;2706:16;2765:3;:10;2746:8;:15;:29;2738:83;;;;-1:-1:-1;;;2738:83:1;;23978:2:15;2738:83:1;;;23960:21:15;24017:2;23997:18;;;23990:30;24056:34;24036:18;;;24029:62;-1:-1:-1;;;24107:18:15;;;24100:39;24156:19;;2738:83:1;23950:231:15;2738:83:1;2832:30;2879:8;:15;2865:30;;;;;;-1:-1:-1;;;2865:30:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2865:30:1;;2832:63;;2911:9;2906:120;2930:8;:15;2926:1;:19;2906:120;;;2985:30;2995:8;3004:1;2995:11;;;;;;-1:-1:-1;;;2995:11:1;;;;;;;;;;;;;;;3008:3;3012:1;3008:6;;;;;;-1:-1:-1;;;3008:6:1;;;;;;;;;;;;;;;2985:9;:30::i;:::-;2966:13;2980:1;2966:16;;;;;;-1:-1:-1;;;2966:16:1;;;;;;;;;;;;;;;;;;:49;2947:3;;;:::i;:::-;;;2906:120;;;-1:-1:-1;3043:13:1;2555:508;-1:-1:-1;;;2555:508:1:o;8298:566:13:-;3171:3;;-1:-1:-1;;;;;3171:3:13;3157:10;:17;3149:51;;;;-1:-1:-1;;;3149:51:13;;;;;;;:::i;:::-;8430:23:::1;8440:6;8448:4;8430:9;:23::i;:::-;8457:1;8430:28;8422:78;;;;-1:-1:-1::0;;;8422:78:13::1;;;;;;;:::i;:::-;8518:19;8532:4;8518:13;:19::i;:::-;:24;;8541:1;8518:24;8510:66;;;::::0;-1:-1:-1;;;8510:66:13;;18457:2:15;8510:66:13::1;::::0;::::1;18439:21:15::0;18496:2;18476:18;;;18469:30;18535:31;18515:18;;;18508:59;18584:18;;8510:66:13::1;18429:179:15::0;8510:66:13::1;8587:17;8607:11:::0;;;:5:::1;:11;::::0;;;;8628:22;;-1:-1:-1;;;;;;8628:22:13::1;;-1:-1:-1::0;;;;;8628:22:13;::::1;;;::::0;;;8678:39:::1;::::0;-1:-1:-1;;;8704:13:13;::::1;;;8685:15;8678:39;:::i;:::-;8660:57:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;8660:57:13::1;-1:-1:-1::0;;;;8660:57:13;;::::1;;::::0;;8727:18:::1;::::0;::::1;:27:::0;;;8764:25:::1;8771:18;::::0;::::1;8660:15;8764:25;:::i;:::-;8799:15:::0;;-1:-1:-1;;8799:15:13::1;8813:1;8799:15;::::0;;8830:27:::1;::::0;;26357:25:15;;;26413:2;26398:18;;26391:34;;;8830:27:13::1;::::0;26330:18:15;8830:27:13::1;;;;;;;3210:1;8298:566:::0;;;:::o;4582:703::-;3171:3;;4811:7;;-1:-1:-1;;;;;3171:3:13;3157:10;:17;3149:51;;;;-1:-1:-1;;;3149:51:13;;;;;;;:::i;:::-;4830:2:::1;:4:::0;;;:2:::1;:4;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;4871:2:13::1;::::0;4845:17:::1;4865:9:::0;;;:5:::1;:9;::::0;;;;4884:25;;-1:-1:-1;;;;4884:25:13::1;-1:-1:-1::0;;;4884:25:13::1;::::0;::::1;;;::::0;;-1:-1:-1;4919:15:13;::::1;:44:::0;;-1:-1:-1;;;;;;4919:44:13;::::1;-1:-1:-1::0;;;;;4919:44:13;::::1;::::0;;::::1;::::0;;5000:14;;4919:15;-1:-1:-1;;;;;;4973:41:13;;-1:-1:-1;;;5000:14:13;4973:41:::1;::::0;::::1;;;;-1:-1:-1::0;;;4973:41:13::1;;;;;;;;;;;::::0;;-1:-1:-1;5024:18:13;;;:29;;;:18:::1;5063:22:::0;;:37;;;5125:2:::1;::::0;5111:24:::1;::::0;;::::1;::::0;::::1;::::0;;;-1:-1:-1;5111:24:13;;::::1;::::0;5117:6;;5024:15:::1;::::0;5111:5:::1;:24::i;:::-;5146:15:::0;;-1:-1:-1;;5146:15:13::1;5160:1;5146:15;::::0;;5255:2:::1;::::0;5177:81:::1;::::0;-1:-1:-1;;;;;5177:81:13;::::1;::::0;::::1;::::0;::::1;::::0;5204:14;;5220:8;;5230:12;;5244:9;;5177:81:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;5276:2:13::1;::::0;4582:703;;;;;;;;:::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;15132:84:13:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;15195:3:13::1;:14:::0;;-1:-1:-1;;;;;;15195:14:13::1;-1:-1:-1::0;;;;;15195:14:13;;;::::1;::::0;;;::::1;::::0;;15132:84::o;15411:91::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;15479:16:13::1;15487:7;15479;:16::i;:::-;15411:91:::0;:::o;3131:153:1:-;3225:52;719:10:8;3258:8:1;3268;3225:18;:52::i;:::-;3131:153;;:::o;9009:245:13:-;3171:3;;-1:-1:-1;;;;;3171:3:13;3157:10;:17;3149:51;;;;-1:-1:-1;;;3149:51:13;;;;;;;:::i;:::-;9077:19:::1;9091:4;9077:13;:19::i;:::-;:24;;9100:1;9077:24;9069:88;;;::::0;-1:-1:-1;;;9069:88:13;;22794:2:15;9069:88:13::1;::::0;::::1;22776:21:15::0;22833:2;22813:18;;;22806:30;22872:34;22852:18;;;22845:62;-1:-1:-1;;;22923:18:15;;;22916:49;22982:19;;9069:88:13::1;22766:241:15::0;9069:88:13::1;9168:11;::::0;;;:5:::1;:11;::::0;;;;;;;;:22;;-1:-1:-1;;9168:22:13::1;9189:1;9168:22;::::0;;9221:25:::1;;::::0;9206:41;;26357:25:15;;;26398:18;;;26391:34;9206:41:13::1;::::0;26330:18:15;9206:41:13::1;;;;;;;9009:245:::0;:::o;14066:127::-;14125:23;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14125:23:13;14167:14;;;;:6;:14;;;;;;;;;14160:26;;;;;;;;14167:19;;14160:26;;-1:-1:-1;;;;;14160:26:13;;;;14167:19;;14160:26;;;-1:-1:-1;;;14160:26:13;;;;;;;;;;-1:-1:-1;;;14160:26:13;;;;;;;;9490:308;3171:3;;-1:-1:-1;;;;;3171:3:13;3157:10;:17;3149:51;;;;-1:-1:-1;;;3149:51:13;;;;;;;:::i;:::-;9592:23:::1;9602:6;9610:4;9592:9;:23::i;:::-;9619:1;9592:28;9584:69;;;::::0;-1:-1:-1;;;9584:69:13;;18815:2:15;9584:69:13::1;::::0;::::1;18797:21:15::0;18854:2;18834:18;;;18827:30;18893;18873:18;;;18866:58;18941:18;;9584:69:13::1;18787:178:15::0;9584:69:13::1;9694:1;9671:19;9685:4;9671:13;:19::i;:::-;:24;;;;9663:62;;;::::0;-1:-1:-1;;;9663:62:13;;25603:2:15;9663:62:13::1;::::0;::::1;25585:21:15::0;25642:2;25622:18;;;25615:30;25681:27;25661:18;;;25654:55;25726:18;;9663:62:13::1;25575:175:15::0;9663:62:13::1;9757:1;9736:11:::0;;;:5:::1;:11;::::0;;;;;;:22;;-1:-1:-1;;9736:22:13::1;::::0;;9774:17;::::1;::::0;::::1;::::0;9742:4;14741:25:15;;14729:2;14714:18;;14696:76;12776:121:13;12865:11;;;;:5;:11;;;;;;;;;:25;;12858:32;;;;;;;;;;;;;;;;;12830:16;;12858:32;;;12865:25;12858:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12776:121;;;:::o;10881:273::-;10939:5;10960:11;;;:5;:11;;;;;:22;-1:-1:-1;;;10960:22:13;;;;:26;;;;:70;;-1:-1:-1;10990:11:13;;;;:5;:11;;;;;:22;11015:15;-1:-1:-1;;;10990:22:13;;;;;:40;10960:70;:97;;;;-1:-1:-1;11034:11:13;;;;:5;:11;;;;;:18;;;11056:1;11034:23;;10960:97;10956:192;;;-1:-1:-1;11080:1:13;;10881:273;-1:-1:-1;10881:273:13:o;10956:192::-;-1:-1:-1;11119:11:13;;;;:5;:11;;;;;:18;;;;10881:273::o;10956:192::-;10881:273;;;:::o;3584:389:1:-;-1:-1:-1;;;;;3784:20:1;;719:10:8;3784:20:1;;:60;;-1:-1:-1;3808:36:1;3825:4;719:10:8;3351:166:1;:::i;3808:36::-;3763:148;;;;-1:-1:-1;;;3763:148:1;;17697:2:15;3763:148:1;;;17679:21:15;17736:2;17716:18;;;17709:30;17775:34;17755:18;;;17748:62;-1:-1:-1;;;17826:18:15;;;17819:39;17875:19;;3763:148:1;17669:231:15;3763:148:1;3921:45;3939:4;3945:2;3949;3953:6;3961:4;3921:17;:45::i;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:8;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;16885:2:15;1998:73:0::1;::::0;::::1;16867:21:15::0;16924:2;16904:18;;;16897:30;16963:34;16943:18;;;16936:62;-1:-1:-1;;;17014:18:15;;;17007:36;17060:19;;1998:73:0::1;16857:228:15::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;7681:358:13:-:0;3171:3;;-1:-1:-1;;;;;3171:3:13;3157:10;:17;3149:51;;;;-1:-1:-1;;;3149:51:13;;;;;;;:::i;:::-;7792:14:::1;::::0;;;:6:::1;:14;::::0;;;;:21:::1;;::::0;-1:-1:-1;;;;;7792:32:13;;::::1;:21:::0;::::1;:32;7784:81;;;::::0;-1:-1:-1;;;7784:81:13;;19997:2:15;7784:81:13::1;::::0;::::1;19979:21:15::0;20036:2;20016:18;;;20009:30;20075:34;20055:18;;;20048:62;-1:-1:-1;;;20126:18:15;;;20119:34;20170:19;;7784:81:13::1;19969:226:15::0;7784:81:13::1;7897:14;::::0;;;:6:::1;:14;::::0;;;;:18;7883:33:::1;::::0;:13:::1;:33::i;:::-;:38;;7920:1;7883:38;7875:89;;;::::0;-1:-1:-1;;;7875:89:13;;22387:2:15;7875:89:13::1;::::0;::::1;22369:21:15::0;22426:2;22406:18;;;22399:30;22465:34;22445:18;;;22438:62;-1:-1:-1;;;22516:18:15;;;22509:36;22562:19;;7875:89:13::1;22359:228:15::0;7875:89:13::1;7982:14;::::0;;;:6:::1;:14;::::0;;;;;7975:21;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;7975:21:13::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;7975:21:13;;;;;;;;;;;;;;;8012:20;::::1;::::0;::::1;::::0;7989:6;14741:25:15;;14729:2;14714:18;;14696:76;10017:310:13;3171:3;;-1:-1:-1;;;;;3171:3:13;3157:10;:17;3149:51;;;;-1:-1:-1;;;3149:51:13;;;;;;;:::i;:::-;10118:23:::1;10128:6;10136:4;10118:9;:23::i;:::-;10145:1;10118:28;10110:69;;;::::0;-1:-1:-1;;;10110:69:13;;18815:2:15;10110:69:13::1;::::0;::::1;18797:21:15::0;18854:2;18834:18;;;18827:30;18893;18873:18;;;18866:58;18941:18;;10110:69:13::1;18787:178:15::0;10110:69:13::1;10197:11;::::0;;;:5:::1;:11;::::0;;;;:18;::::1;;:23:::0;10189:70:::1;;;::::0;-1:-1:-1;;;10189:70:13;;20402:2:15;10189:70:13::1;::::0;::::1;20384:21:15::0;20441:2;20421:18;;;20414:30;20480:34;20460:18;;;20453:62;-1:-1:-1;;;20531:18:15;;;20524:32;20573:19;;10189:70:13::1;20374:224:15::0;10189:70:13::1;10277:11;::::0;;;:5:::1;:11;::::0;;;;10270:18;;-1:-1:-1;;;;;;10270:18:13;;;;;::::1;::::0;;-1:-1:-1;;;;;;10270:18:13;;;;;;;;;;;;;;;::::1;::::0;::::1;::::0;;;10277:11;10270:18:::1;;::::0;::::1;10277:11:::0;10270:18:::1;:::i;:::-;;;10298:22;10304:6;10312:4;10318:1;10298:5;:22::i;6068:1045:1:-:0;6288:7;:14;6274:3;:10;:28;6266:81;;;;-1:-1:-1;;;6266:81:1;;24388:2:15;6266:81:1;;;24370:21:15;24427:2;24407:18;;;24400:30;24466:34;24446:18;;;24439:62;-1:-1:-1;;;24517:18:15;;;24510:38;24565:19;;6266:81:1;24360:230:15;6266:81:1;-1:-1:-1;;;;;6365:16:1;;6357:66;;;;-1:-1:-1;;;6357:66:1;;;;;;;:::i;:::-;719:10:8;6434:16:1;6547:411;6571:3;:10;6567:1;:14;6547:411;;;6602:10;6615:3;6619:1;6615:6;;;;;;-1:-1:-1;;;6615:6:1;;;;;;;;;;;;;;;6602:19;;6635:14;6652:7;6660:1;6652:10;;;;;;-1:-1:-1;;;6652:10:1;;;;;;;;;;;;;;;;;;;;6677:19;6699:13;;;;;;;;;;-1:-1:-1;;;;;6699:19:1;;;;;;;;;;;;6652:10;;-1:-1:-1;6740:21:1;;;;6732:76;;;;-1:-1:-1;;;6732:76:1;;;;;;;:::i;:::-;6850:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6850:19:1;;;;;;;;;;6872:20;;;6850:42;;6920:17;;;;;;;:27;;6872:20;;6850:9;6920:27;;6872:20;;6920:27;:::i;:::-;;;;;;;;6547:411;;;6583:3;;;;:::i;:::-;;;6547:411;;;;7003:2;-1:-1:-1;;;;;6973:47:1;6997:4;-1:-1:-1;;;;;6973:47:1;6987:8;-1:-1:-1;;;;;6973:47:1;;7007:3;7012:7;6973:47;;;;;;;:::i;:::-;;;;;;;;7031:75;7067:8;7077:4;7083:2;7087:3;7092:7;7101:4;7031:35;:75::i;:::-;6068:1045;;;;;;:::o;8395:553::-;-1:-1:-1;;;;;8542:16:1;;8534:62;;;;-1:-1:-1;;;8534:62:1;;24797:2:15;8534:62:1;;;24779:21:15;24836:2;24816:18;;;24809:30;24875:34;24855:18;;;24848:62;-1:-1:-1;;;24926:18:15;;;24919:31;24967:19;;8534:62:1;24769:223:15;8534:62:1;719:10:8;8649:102:1;719:10:8;8607:16:1;8692:2;8696:21;8714:2;8696:17;:21::i;:::-;8719:25;8737:6;8719:17;:25::i;8649:102::-;8762:9;:13;;;;;;;;;;;-1:-1:-1;;;;;8762:17:1;;;;;;;;;:27;;8783:6;;8762:9;:27;;8783:6;;8762:27;:::i;:::-;;;;-1:-1:-1;;8804:52:1;;;26357:25:15;;;26413:2;26398:18;;26391:34;;;-1:-1:-1;;;;;8804:52:1;;;;8837:1;;8804:52;;;;;;26330:18:15;8804:52:1;;;;;;;8867:74;8898:8;8916:1;8920:2;8924;8928:6;8936:4;8867:30;:74::i;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2270:187;;:::o;7936:86:1:-;8002:13;;;;:4;;:13;;;;;:::i;12074:323::-;12224:8;-1:-1:-1;;;;;12215:17:1;:5;-1:-1:-1;;;;;12215:17:1;;;12207:71;;;;-1:-1:-1;;;12207:71:1;;23568:2:15;12207:71:1;;;23550:21:15;23607:2;23587:18;;;23580:30;23646:34;23626:18;;;23619:62;-1:-1:-1;;;23697:18:15;;;23690:39;23746:19;;12207:71:1;23540:231:15;12207:71:1;-1:-1:-1;;;;;12288:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12288:46:1;;;;;;;;;;12349:41;;14543::15;;;12349::1;;14516:18:15;12349:41:1;;;;;;;12074:323;;;:::o;4925:797::-;-1:-1:-1;;;;;5106:16:1;;5098:66;;;;-1:-1:-1;;;5098:66:1;;;;;;;:::i;:::-;719:10:8;5217:96:1;719:10:8;5248:4:1;5254:2;5258:21;5276:2;5258:17;:21::i;5217:96::-;5324:19;5346:13;;;;;;;;;;;-1:-1:-1;;;;;5346:19:1;;;;;;;;;;5383:21;;;;5375:76;;;;-1:-1:-1;;;5375:76:1;;;;;;;:::i;:::-;5485:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5485:19:1;;;;;;;;;;5507:20;;;5485:42;;5547:17;;;;;;;:27;;5507:20;;5485:9;5547:27;;5507:20;;5547:27;:::i;:::-;;;;-1:-1:-1;;5590:46:1;;;26357:25:15;;;26413:2;26398:18;;26391:34;;;-1:-1:-1;;;;;5590:46:1;;;;;;;;;;;;;;26330:18:15;5590:46:1;;;;;;;5647:68;5678:8;5688:4;5694:2;5698;5702:6;5710:4;5647:30;:68::i;:::-;4925:797;;;;;;;:::o;10248:630::-;-1:-1:-1;;;;;10370:18:1;;10362:66;;;;-1:-1:-1;;;10362:66:1;;20805:2:15;10362:66:1;;;20787:21:15;20844:2;20824:18;;;20817:30;20883:34;20863:18;;;20856:62;-1:-1:-1;;;20934:18:15;;;20927:33;20977:19;;10362:66:1;20777:225:15;10362:66:1;719:10:8;10481:102:1;719:10:8;10512:4:1;10439:16;10530:21;10548:2;10530:17;:21::i;:::-;10553:25;10571:6;10553:17;:25::i;:::-;-1:-1:-1;;10481:102:1;;;;;;;;;-1:-1:-1;10481:102:1;;-1:-1:-1;;;6068:1045:1;10481:102;10594:19;10616:13;;;;;;;;;;;-1:-1:-1;;;;;10616:19:1;;;;;;;;;;10653:21;;;;10645:70;;;;-1:-1:-1;;;10645:70:1;;17292:2:15;10645:70:1;;;17274:21:15;17331:2;17311:18;;;17304:30;17370:34;17350:18;;;17343:62;-1:-1:-1;;;17421:18:15;;;17414:34;17465:19;;10645:70:1;17264:226:15;10645:70:1;10749:9;:13;;;;;;;;;;;-1:-1:-1;;;;;10749:19:1;;;;;;;;;;;;10771:20;;;10749:42;;10817:54;;26357:25:15;;;26398:18;;;26391:34;;;10749:19:1;;10817:54;;;;;;26330:18:15;10817:54:1;;;;;;;10248:630;;;;;:::o;14282:792::-;-1:-1:-1;;;;;14514:13:1;;1465:19:7;:23;14510:558:1;;14549:79;;-1:-1:-1;;;14549:79:1;;-1:-1:-1;;;;;14549:43:1;;;;;:79;;14593:8;;14603:4;;14609:3;;14614:7;;14623:4;;14549:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14549:79:1;;;;;;;;-1:-1:-1;;14549:79:1;;;;;;;;;;;;:::i;:::-;;;14545:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14934:6;14927:14;;-1:-1:-1;;;14927:14:1;;;;;;;;:::i;14545:513::-;;;14981:62;;-1:-1:-1;;;14981:62:1;;15643:2:15;14981:62:1;;;15625:21:15;15682:2;15662:18;;;15655:30;15721:34;15701:18;;;15694:62;-1:-1:-1;;;15772:18:15;;;15765:50;15832:19;;14981:62:1;15615:242:15;14545:513:1;-1:-1:-1;;;;;;14707:60:1;;-1:-1:-1;;;14707:60:1;14703:157;;14791:50;;-1:-1:-1;;;14791:50:1;;;;;;;:::i;15080:193::-;15199:16;;;15213:1;15199:16;;;;;;;;;15146;;15174:22;;15199:16;;;;;;;;;;;;-1:-1:-1;15199:16:1;15174:41;;15236:7;15225:5;15231:1;15225:8;;;;;;-1:-1:-1;;;15225:8:1;;;;;;;;;;;;;;;;;;:18;15261:5;15080:193;-1:-1:-1;;15080:193:1:o;13551:725::-;-1:-1:-1;;;;;13758:13:1;;1465:19:7;:23;13754:516:1;;13793:72;;-1:-1:-1;;;13793:72:1;;-1:-1:-1;;;;;13793:38:1;;;;;:72;;13832:8;;13842:4;;13848:2;;13852:6;;13860:4;;13793:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13793:72:1;;;;;;;;-1:-1:-1;;13793:72:1;;;;;;;;;;;;:::i;:::-;;;13789:471;;;;:::i;:::-;-1:-1:-1;;;;;;13914:55:1;;-1:-1:-1;;;13914:55:1;13910:152;;13993:50;;-1:-1:-1;;;13993:50:1;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:468:15;78:5;112:18;104:6;101:30;98:2;;;134:18;;:::i;:::-;183:2;177:9;195:69;252:2;231:15;;-1:-1:-1;;227:29:15;258:4;223:40;177:9;195:69;:::i;:::-;282:6;273:15;;312:6;304;297:22;352:3;343:6;338:3;334:16;331:25;328:2;;;369:1;366;359:12;328:2;419:6;414:3;407:4;399:6;395:17;382:44;474:1;467:4;458:6;450;446:19;442:30;435:41;;88:394;;;;;:::o;487:173::-;555:20;;-1:-1:-1;;;;;604:31:15;;594:42;;584:2;;650:1;647;640:12;665:755;719:5;772:3;765:4;757:6;753:17;749:27;739:2;;794:5;787;780:20;739:2;834:6;821:20;860:4;883:43;923:2;883:43;:::i;:::-;955:2;949:9;967:31;995:2;987:6;967:31;:::i;:::-;1033:18;;;1067:15;;;;-1:-1:-1;1102:15:15;;;1152:1;1148:10;;;1136:23;;1132:32;;1129:41;-1:-1:-1;1126:2:15;;;1187:5;1180;1173:20;1126:2;1213:5;1227:163;1241:2;1238:1;1235:9;1227:163;;;1298:17;;1286:30;;1336:12;;;;1368;;;;1259:1;1252:9;1227:163;;;-1:-1:-1;1408:6:15;;729:691;-1:-1:-1;;;;;;;729:691:15:o;1425:228::-;1467:5;1520:3;1513:4;1505:6;1501:17;1497:27;1487:2;;1542:5;1535;1528:20;1487:2;1568:79;1643:3;1634:6;1621:20;1614:4;1606:6;1602:17;1568:79;:::i;:::-;1559:88;1477:176;-1:-1:-1;;;1477:176:15:o;1658:196::-;1717:6;1770:2;1758:9;1749:7;1745:23;1741:32;1738:2;;;1791:6;1783;1776:22;1738:2;1819:29;1838:9;1819:29;:::i;1859:270::-;1927:6;1935;1988:2;1976:9;1967:7;1963:23;1959:32;1956:2;;;2009:6;2001;1994:22;1956:2;2037:29;2056:9;2037:29;:::i;:::-;2027:39;;2085:38;2119:2;2108:9;2104:18;2085:38;:::i;:::-;2075:48;;1946:183;;;;;:::o;2134:983::-;2288:6;2296;2304;2312;2320;2373:3;2361:9;2352:7;2348:23;2344:33;2341:2;;;2395:6;2387;2380:22;2341:2;2423:29;2442:9;2423:29;:::i;:::-;2413:39;;2471:38;2505:2;2494:9;2490:18;2471:38;:::i;:::-;2461:48;;2560:2;2549:9;2545:18;2532:32;2583:18;2624:2;2616:6;2613:14;2610:2;;;2645:6;2637;2630:22;2610:2;2673:61;2726:7;2717:6;2706:9;2702:22;2673:61;:::i;:::-;2663:71;;2787:2;2776:9;2772:18;2759:32;2743:48;;2816:2;2806:8;2803:16;2800:2;;;2837:6;2829;2822:22;2800:2;2865:63;2920:7;2909:8;2898:9;2894:24;2865:63;:::i;:::-;2855:73;;2981:3;2970:9;2966:19;2953:33;2937:49;;3011:2;3001:8;2998:16;2995:2;;;3032:6;3024;3017:22;2995:2;;3060:51;3103:7;3092:8;3081:9;3077:24;3060:51;:::i;:::-;3050:61;;;2331:786;;;;;;;;:::o;3122:626::-;3226:6;3234;3242;3250;3258;3311:3;3299:9;3290:7;3286:23;3282:33;3279:2;;;3333:6;3325;3318:22;3279:2;3361:29;3380:9;3361:29;:::i;:::-;3351:39;;3409:38;3443:2;3432:9;3428:18;3409:38;:::i;:::-;3399:48;;3494:2;3483:9;3479:18;3466:32;3456:42;;3545:2;3534:9;3530:18;3517:32;3507:42;;3600:3;3589:9;3585:19;3572:33;3628:18;3620:6;3617:30;3614:2;;;3665:6;3657;3650:22;3614:2;3693:49;3734:7;3725:6;3714:9;3710:22;3693:49;:::i;3753:367::-;3818:6;3826;3879:2;3867:9;3858:7;3854:23;3850:32;3847:2;;;3900:6;3892;3885:22;3847:2;3928:29;3947:9;3928:29;:::i;:::-;3918:39;;4007:2;3996:9;3992:18;3979:32;4054:5;4047:13;4040:21;4033:5;4030:32;4020:2;;4081:6;4073;4066:22;4020:2;4109:5;4099:15;;;3837:283;;;;;:::o;4125:758::-;4241:6;4249;4257;4265;4273;4281;4334:3;4322:9;4313:7;4309:23;4305:33;4302:2;;;4356:6;4348;4341:22;4302:2;4384:29;4403:9;4384:29;:::i;:::-;4374:39;;4463:2;4452:9;4448:18;4435:32;4496:1;4489:5;4486:12;4476:2;;4517:6;4509;4502:22;4476:2;4545:5;-1:-1:-1;4602:2:15;4587:18;;4574:32;4650:10;4637:24;;4625:37;;4615:2;;4681:6;4673;4666:22;4615:2;4709:7;-1:-1:-1;4763:2:15;4748:18;;4735:32;;-1:-1:-1;4814:3:15;4799:19;;4786:33;;-1:-1:-1;4838:39:15;4872:3;4857:19;;4838:39;:::i;:::-;4828:49;;4292:591;;;;;;;;:::o;4888:264::-;4956:6;4964;5017:2;5005:9;4996:7;4992:23;4988:32;4985:2;;;5038:6;5030;5023:22;4985:2;5066:29;5085:9;5066:29;:::i;:::-;5056:39;5142:2;5127:18;;;;5114:32;;-1:-1:-1;;;4975:177:15:o;5157:476::-;5252:6;5260;5268;5276;5284;5337:3;5325:9;5316:7;5312:23;5308:33;5305:2;;;5359:6;5351;5344:22;5305:2;5387:29;5406:9;5387:29;:::i;:::-;5377:39;;5463:2;5452:9;5448:18;5435:32;5425:42;;5486:38;5520:2;5509:9;5505:18;5486:38;:::i;:::-;5295:338;;;;-1:-1:-1;5476:48:15;;5571:2;5556:18;;5543:32;;-1:-1:-1;5622:3:15;5607:19;5594:33;;5295:338;-1:-1:-1;;5295:338:15:o;5638:1274::-;5756:6;5764;5817:2;5805:9;5796:7;5792:23;5788:32;5785:2;;;5838:6;5830;5823:22;5785:2;5883:9;5870:23;5912:18;5953:2;5945:6;5942:14;5939:2;;;5974:6;5966;5959:22;5939:2;6017:6;6006:9;6002:22;5992:32;;6062:7;6055:4;6051:2;6047:13;6043:27;6033:2;;6089:6;6081;6074:22;6033:2;6130;6117:16;6152:4;6175:43;6215:2;6175:43;:::i;:::-;6247:2;6241:9;6259:31;6287:2;6279:6;6259:31;:::i;:::-;6325:18;;;6359:15;;;;-1:-1:-1;6394:11:15;;;6436:1;6432:10;;;6424:19;;6420:28;;6417:41;-1:-1:-1;6414:2:15;;;6476:6;6468;6461:22;6414:2;6503:6;6494:15;;6518:169;6532:2;6529:1;6526:9;6518:169;;;6589:23;6608:3;6589:23;:::i;:::-;6577:36;;6550:1;6543:9;;;;;6633:12;;;;6665;;6518:169;;;-1:-1:-1;6706:6:15;-1:-1:-1;;6750:18:15;;6737:32;;-1:-1:-1;;6781:16:15;;;6778:2;;;6815:6;6807;6800:22;6778:2;;6843:63;6898:7;6887:8;6876:9;6872:24;6843:63;:::i;:::-;6833:73;;;5775:1137;;;;;:::o;6917:190::-;6976:6;7029:2;7017:9;7008:7;7004:23;7000:32;6997:2;;;7050:6;7042;7035:22;6997:2;-1:-1:-1;7078:23:15;;6987:120;-1:-1:-1;6987:120:15:o;7112:264::-;7180:6;7188;7241:2;7229:9;7220:7;7216:23;7212:32;7209:2;;;7262:6;7254;7247:22;7209:2;7303:9;7290:23;7280:33;;7332:38;7366:2;7355:9;7351:18;7332:38;:::i;7381:255::-;7439:6;7492:2;7480:9;7471:7;7467:23;7463:32;7460:2;;;7513:6;7505;7498:22;7460:2;7557:9;7544:23;7576:30;7600:5;7576:30;:::i;7641:259::-;7710:6;7763:2;7751:9;7742:7;7738:23;7734:32;7731:2;;;7784:6;7776;7769:22;7731:2;7821:9;7815:16;7840:30;7864:5;7840:30;:::i;7905:480::-;7974:6;8027:2;8015:9;8006:7;8002:23;7998:32;7995:2;;;8048:6;8040;8033:22;7995:2;8093:9;8080:23;8126:18;8118:6;8115:30;8112:2;;;8163:6;8155;8148:22;8112:2;8191:22;;8244:4;8236:13;;8232:27;-1:-1:-1;8222:2:15;;8278:6;8270;8263:22;8222:2;8306:73;8371:7;8366:2;8353:16;8348:2;8344;8340:11;8306:73;:::i;:::-;8296:83;7985:400;-1:-1:-1;;;;7985:400:15:o;8854:332::-;8931:6;8939;8947;9000:2;8988:9;8979:7;8975:23;8971:32;8968:2;;;9021:6;9013;9006:22;8968:2;9062:9;9049:23;9039:33;;9119:2;9108:9;9104:18;9091:32;9081:42;;9142:38;9176:2;9165:9;9161:18;9142:38;:::i;:::-;9132:48;;8958:228;;;;;:::o;9191:437::-;9244:3;9282:5;9276:12;9309:6;9304:3;9297:19;9335:4;9364:2;9359:3;9355:12;9348:19;;9401:2;9394:5;9390:14;9422:3;9434:169;9448:6;9445:1;9442:13;9434:169;;;9509:13;;9497:26;;9543:12;;;;9578:15;;;;9470:1;9463:9;9434:169;;;-1:-1:-1;9619:3:15;;9252:376;-1:-1:-1;;;;;9252:376:15:o;9633:475::-;9674:3;9712:5;9706:12;9739:6;9734:3;9727:19;9764:3;9776:162;9790:6;9787:1;9784:13;9776:162;;;9852:4;9908:13;;;9904:22;;9898:29;9880:11;;;9876:20;;9869:59;9805:12;9776:162;;;9956:6;9953:1;9950:13;9947:2;;;10022:3;10015:4;10006:6;10001:3;9997:16;9993:27;9986:40;9947:2;-1:-1:-1;10090:2:15;10069:15;-1:-1:-1;;10065:29:15;10056:39;;;;10097:4;10052:50;;9682:426;-1:-1:-1;;9682:426:15:o;10113:236::-;10193:1;10186:5;10183:12;10173:2;;10238:10;10233:3;10229:20;10226:1;10219:31;10273:4;10270:1;10263:15;10301:4;10298:1;10291:15;10173:2;10325:18;;10163:186::o;10354:343::-;10429:12;;-1:-1:-1;;;;;10425:38:15;10413:51;;10510:4;10499:16;;;10493:23;;10525:54;;10564:14;;10493:23;10525:54;:::i;:::-;-1:-1:-1;10628:4:15;10617:16;;;10611:23;10595:14;;;10588:47;10684:4;10673:16;;;10667:23;10651:14;;10644:47;10403:294::o;11209:826::-;-1:-1:-1;;;;;11606:15:15;;;11588:34;;11658:15;;11653:2;11638:18;;11631:43;11568:3;11705:2;11690:18;;11683:31;;;11531:4;;11737:57;;11774:19;;11766:6;11737:57;:::i;:::-;11842:9;11834:6;11830:22;11825:2;11814:9;11810:18;11803:50;11876:44;11913:6;11905;11876:44;:::i;:::-;11862:58;;11969:9;11961:6;11957:22;11951:3;11940:9;11936:19;11929:51;11997:32;12022:6;12014;11997:32;:::i;:::-;11989:40;11540:495;-1:-1:-1;;;;;;;;11540:495:15:o;12040:560::-;-1:-1:-1;;;;;12337:15:15;;;12319:34;;12389:15;;12384:2;12369:18;;12362:43;12436:2;12421:18;;12414:34;;;12479:2;12464:18;;12457:34;;;12299:3;12522;12507:19;;12500:32;;;12262:4;;12549:45;;12574:19;;12566:6;12549:45;:::i;:::-;12541:53;12271:329;-1:-1:-1;;;;;;;12271:329:15:o;13027:635::-;13198:2;13250:21;;;13320:13;;13223:18;;;13342:22;;;13169:4;;13198:2;13421:15;;;;13395:2;13380:18;;;13169:4;13467:169;13481:6;13478:1;13475:13;13467:169;;;13542:13;;13530:26;;13611:15;;;;13576:12;;;;13503:1;13496:9;13467:169;;;-1:-1:-1;13653:3:15;;13178:484;-1:-1:-1;;;;;;13178:484:15:o;13667:261::-;13846:2;13835:9;13828:21;13809:4;13866:56;13918:2;13907:9;13903:18;13895:6;13866:56;:::i;13933:465::-;14190:2;14179:9;14172:21;14153:4;14216:56;14268:2;14257:9;14253:18;14245:6;14216:56;:::i;:::-;14320:9;14312:6;14308:22;14303:2;14292:9;14288:18;14281:50;14348:44;14385:6;14377;14348:44;:::i;14777:435::-;15004:3;14989:19;;15017:43;14993:9;15042:6;15017:43;:::i;:::-;15096:6;15091:2;15080:9;15076:18;15069:34;15139:6;15134:2;15123:9;15119:18;15112:34;15194:10;15186:6;15182:23;15177:2;15166:9;15162:18;15155:51;14971:241;;;;;;;:::o;15217:219::-;15366:2;15355:9;15348:21;15329:4;15386:44;15426:2;15415:9;15411:18;15403:6;15386:44;:::i;15862:404::-;16064:2;16046:21;;;16103:2;16083:18;;;16076:30;16142:34;16137:2;16122:18;;16115:62;-1:-1:-1;;;16208:2:15;16193:18;;16186:38;16256:3;16241:19;;16036:230::o;17905:345::-;18107:2;18089:21;;;18146:2;18126:18;;;18119:30;-1:-1:-1;;;18180:2:15;18165:18;;18158:51;18241:2;18226:18;;18079:171::o;18970:401::-;19172:2;19154:21;;;19211:2;19191:18;;;19184:30;19250:34;19245:2;19230:18;;19223:62;-1:-1:-1;;;19316:2:15;19301:18;;19294:35;19361:3;19346:19;;19144:227::o;21007:406::-;21209:2;21191:21;;;21248:2;21228:18;;;21221:30;21287:34;21282:2;21267:18;;21260:62;-1:-1:-1;;;21353:2:15;21338:18;;21331:40;21403:3;21388:19;;21181:232::o;21418:356::-;21620:2;21602:21;;;21639:18;;;21632:30;21698:34;21693:2;21678:18;;21671:62;21765:2;21750:18;;21592:182::o;21779:401::-;21981:2;21963:21;;;22020:2;22000:18;;;21993:30;22059:34;22054:2;22039:18;;22032:62;-1:-1:-1;;;22125:2:15;22110:18;;22103:35;22170:3;22155:19;;21953:227::o;25755:241::-;25935:3;25920:19;;25948:42;25924:9;25972:6;25948:42;:::i;26689:480::-;26966:25;;;27022:2;27007:18;;27000:34;;;-1:-1:-1;;;;;27070:32:15;;27065:2;27050:18;;27043:60;26953:3;26938:19;;27112:51;27159:2;27144:18;;27136:6;27112:51;:::i;27759:663::-;28114:4;28102:17;;28084:36;;-1:-1:-1;;;;;28156:32:15;;28151:2;28136:18;;28129:60;28237:10;28225:23;;28220:2;28205:18;;28198:51;28297:12;28285:25;;28280:2;28265:18;;28258:53;28071:3;28056:19;;28320:52;28367:3;28352:19;;28344:6;28320:52;:::i;:::-;28409:6;28403:3;28392:9;28388:19;28381:35;28038:384;;;;;;;;;:::o;28427:183::-;28487:4;28520:18;28512:6;28509:30;28506:2;;;28542:18;;:::i;:::-;-1:-1:-1;28587:1:15;28583:14;28599:4;28579:25;;28496:114::o;28615:128::-;28655:3;28686:1;28682:6;28679:1;28676:13;28673:2;;;28692:18;;:::i;:::-;-1:-1:-1;28728:9:15;;28663:80::o;28748:230::-;28787:3;28815:12;28854:2;28851:1;28847:10;28884:2;28881:1;28877:10;28915:3;28911:2;28907:12;28902:3;28899:21;28896:2;;;28923:18;;:::i;:::-;28959:13;;28795:183;-1:-1:-1;;;;28795:183:15:o;28983:380::-;29062:1;29058:12;;;;29105;;;29126:2;;29180:4;29172:6;29168:17;29158:27;;29126:2;29233;29225:6;29222:14;29202:18;29199:38;29196:2;;;29279:10;29274:3;29270:20;29267:1;29260:31;29314:4;29311:1;29304:15;29342:4;29339:1;29332:15;29196:2;;29038:325;;;:::o;29368:249::-;29478:2;29459:13;;-1:-1:-1;;29455:27:15;29443:40;;29513:18;29498:34;;29534:22;;;29495:62;29492:2;;;29560:18;;:::i;:::-;29596:2;29589:22;-1:-1:-1;;29415:202:15:o;29622:135::-;29661:3;-1:-1:-1;;29682:17:15;;29679:2;;;29702:18;;:::i;:::-;-1:-1:-1;29749:1:15;29738:13;;29669:88::o;29762:127::-;29823:10;29818:3;29814:20;29811:1;29804:31;29854:4;29851:1;29844:15;29878:4;29875:1;29868:15;29894:127;29955:10;29950:3;29946:20;29943:1;29936:31;29986:4;29983:1;29976:15;30010:4;30007:1;30000:15;30026:185;30061:3;30103:1;30085:16;30082:23;30079:2;;;30153:1;30148:3;30143;30128:27;30184:10;30179:3;30175:20;30079:2;30069:142;:::o;30216:671::-;30255:3;30297:4;30279:16;30276:26;30273:2;;;30263:624;:::o;30273:2::-;30339;30333:9;-1:-1:-1;;30404:16:15;30400:25;;30397:1;30333:9;30376:50;30455:4;30449:11;30479:16;30514:18;30585:2;30578:4;30570:6;30566:17;30563:25;30558:2;30550:6;30547:14;30544:45;30541:2;;;30592:5;;;;;30263:624;:::o;30541:2::-;30629:6;30623:4;30619:17;30608:28;;30665:3;30659:10;30692:2;30684:6;30681:14;30678:2;;;30698:5;;;;;;30263:624;:::o;30678:2::-;30782;30763:16;30757:4;30753:27;30749:36;30742:4;30733:6;30728:3;30724:16;30720:27;30717:69;30714:2;;;30789:5;;;;;;30263:624;:::o;30714:2::-;30805:57;30856:4;30847:6;30839;30835:19;30831:30;30825:4;30805:57;:::i;:::-;-1:-1:-1;30878:3:15;;30263:624;-1:-1:-1;;;;;30263:624:15:o;30892:131::-;-1:-1:-1;;;;;;30966:32:15;;30956:43;;30946:2;;31013:1;31010;31003:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "acceptOffer(uint256,bytes32,address)": {
        "details": "function to set accepted offer",
        "notice": "acceptOffer",
        "params": {
          "_did": "ID of the Deed the offer should be bound to",
          "_offer": "Hash identifying an offer",
          "_owner": "Address of the borrower who issued the Deed"
        }
      },
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "burn(uint256,address)": {
        "details": "function that would burn the deed token if the token is in dead state",
        "notice": "burn",
        "params": {
          "_did": "ID of the Deed which is burned",
          "_owner": "Address of the deed token owner"
        }
      },
      "claim(uint256,address)": {
        "details": "function that would burn the deed token if the token is in paidBack or expired state",
        "notice": "claim",
        "params": {
          "_did": "ID of the Deed which is claimed",
          "_owner": "Address of the deed token owner"
        }
      },
      "create(address,uint8,uint32,uint256,uint256,address)": {
        "details": "Creates the PWN Deed token contract - ERC1155 with extra use case specific features",
        "notice": "create",
        "params": {
          "_assetAddress": "Address of the asset contract",
          "_assetAmount": "Amount of an ERC20 or ERC1155 token || 0 in case of NFTs",
          "_assetCategory": "Category of the asset - see { MultiToken.sol }",
          "_assetId": "ID of an ERC721 or ERC1155 token || 0 in case the token doesn't have IDs",
          "_duration": "Loan duration in seconds",
          "_owner": "Address initiating the new Deed"
        },
        "returns": {
          "_0": "Deed ID of the newly minted Deed"
        }
      },
      "getAcceptedOffer(uint256)": {
        "details": "used to get a list of made offers to be queried in the UI - needs additional check for re-validating each offerrevalidation requires checking if the lender has sufficient balance and approved the asset",
        "notice": "getAcceptedOffer",
        "params": {
          "_did": "Deed ID being queried for offers"
        },
        "returns": {
          "_0": "Hash of the accepted offer"
        }
      },
      "getBorrower(uint256)": {
        "details": "utility function to find out a borrower address of a particular Deed",
        "notice": "getBorrower",
        "params": {
          "_did": "Deed ID to be checked"
        },
        "returns": {
          "_0": "address of the borrower"
        }
      },
      "getDeedCollateral(uint256)": {
        "details": "utility function to find out collateral asset of a particular Deed",
        "notice": "getDeedCollateral",
        "params": {
          "_did": "Deed ID to be checked"
        },
        "returns": {
          "_0": "Asset construct - for definition see { MultiToken.sol }"
        }
      },
      "getDeedID(bytes32)": {
        "details": "utility function to find out which Deed is an offer associated with",
        "notice": "getDeedID",
        "params": {
          "_offer": "Offer hash of an offer to be prompted"
        },
        "returns": {
          "_0": "Deed ID"
        }
      },
      "getDeedStatus(uint256)": {
        "details": "used in contract calls & status checks and also in UI for elementary deed status categorization",
        "notice": "getDeedStatus",
        "params": {
          "_did": "Deed ID checked for status"
        },
        "returns": {
          "_0": "a status number"
        }
      },
      "getDuration(uint256)": {
        "details": "utility function to find out loan duration period of a particular Deed",
        "notice": "getDuration",
        "params": {
          "_did": "Deed ID to be checked"
        },
        "returns": {
          "_0": "loan duration period in seconds"
        }
      },
      "getExpiration(uint256)": {
        "details": "utility function to find out exact expiration time of a particular Deedfor simple status check use `this.getDeedStatus(did)` if `status == 4` then Deed has expired",
        "notice": "getExpiration",
        "params": {
          "_did": "Deed ID to be checked"
        },
        "returns": {
          "_0": "unix time stamp in seconds"
        }
      },
      "getLender(bytes32)": {
        "details": "utility function to find out a lender address of a particular offer",
        "notice": "getLender",
        "params": {
          "_offer": "Offer hash of an offer to be prompted"
        },
        "returns": {
          "_0": "Address of the lender"
        }
      },
      "getOfferLoan(bytes32)": {
        "details": "utility function that returns the loan asset of a particular offer",
        "notice": "getOfferLoan",
        "params": {
          "_offer": "Offer hash of an offer to be prompted"
        },
        "returns": {
          "_0": "Asset construct - for definition see { MultiToken.sol }"
        }
      },
      "getOffers(uint256)": {
        "details": "utility function to get a list of all pending offers of a Deed",
        "notice": "getOffers",
        "params": {
          "_did": "Deed ID to be checked"
        },
        "returns": {
          "_0": "a list of offer hashes"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "makeOffer(address,uint256,address,uint256,uint256)": {
        "details": "saves an offer object that defines loan termsonly ERC20 tokens can be offered as loan",
        "notice": "makeOffer",
        "params": {
          "_assetAddress": "Address of the asset contract",
          "_assetAmount": "Amount of an ERC20 token to be offered as loan",
          "_did": "ID of the Deed the offer should be bound to",
          "_lender": "Address of the asset lender",
          "_toBePaid": "Amount to be paid back by the borrower"
        },
        "returns": {
          "_0": "hash of the newly created offer"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "repayLoan(uint256)": {
        "details": "function to make proper state transition",
        "notice": "repayLoan",
        "params": {
          "_did": "ID of the Deed which is paid back"
        }
      },
      "revoke(uint256,address)": {
        "details": "Burns a deed token",
        "notice": "revoke",
        "params": {
          "_did": "Deed ID of the token to be burned",
          "_owner": "Address of the borrower who issued the Deed"
        }
      },
      "revokeOffer(bytes32,address)": {
        "details": "function to remove a pending offerThis only removes the offer representation but it doesn't remove the offer from a list of pending offers.         The offers associated with a deed has to be filtered on the front end to only list the valid ones.         No longer existent offers will simply return 0 if prompted about their DID.TODO: consider ways to remove the offer from the pending offers array / maybe replace for a mapping",
        "notice": "revokeOffer",
        "params": {
          "_lender": "Address of the lender who made the offer",
          "_offer": "Hash identifying an offer"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "setPWN(address)": {
        "details": "An essential setup function. Has to be called once PWN contract was deployed",
        "notice": "setPWN",
        "params": {
          "_address": "Identifying the PWN contract"
        }
      },
      "setUri(string)": {
        "details": "An non-essential setup function. Can be called to adjust the Deed token metadata URI",
        "notice": "setUri",
        "params": {
          "_newUri": "setting the new origin of Deed metadata"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "toBePaid(bytes32)": {
        "details": "quick query of the total amount to be paid to an offer",
        "notice": "toBePaid",
        "params": {
          "_offer": "Offer hash of an offer to be prompted"
        },
        "returns": {
          "_0": "Amount to be paid back"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "version": 1
  },
  "offset": [
    227,
    15504
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8500D919 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xD05197C1 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF1898A95 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF1898A95 EQ PUSH2 0x5D3 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0xFC09DE89 EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0xFCD3533C EQ PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD05197C1 EQ PUSH2 0x551 JUMPI DUP1 PUSH4 0xDDD5E1B2 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0xDFA49E6F EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B642DE1 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x9B642DE1 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xA05B775F EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0xAB7B1C89 EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0xAF640D0F EQ PUSH2 0x548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8500D919 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x8BB126A7 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x8C26BA0C EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x474D3FF0 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x691DA990 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x691DA990 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0x69BDC155 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x7F4285F1 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x805094C7 EQ PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x474D3FF0 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x600CA3D2 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x63BBF33A EQ PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12DBC1D8 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x12DBC1D8 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x1387C2B5 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x18EDF564 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x20D154DA EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x1218239F EQ PUSH2 0x289 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x233 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x2712 JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x288D JUMP JUMPDEST PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23D JUMP JUMPDEST PUSH2 0x27C PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x2853 JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0x2853 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23D JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x2853 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x2D05 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x273B JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH2 0x313 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x2853 JUMP JUMPDEST PUSH2 0xA2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D3D JUMP JUMPDEST PUSH2 0x338 PUSH2 0x333 CALLDATASIZE PUSH1 0x4 PUSH2 0x286B JUMP JUMPDEST PUSH2 0xAF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x338 PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x255B JUMP JUMPDEST PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x360 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x2853 JUMP JUMPDEST PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D13 JUMP JUMPDEST PUSH2 0x383 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0xD4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x2B0B JUMP JUMPDEST PUSH2 0x338 PUSH2 0x39E CALLDATASIZE PUSH1 0x4 PUSH2 0x2913 JUMP JUMPDEST PUSH2 0xEAE JUMP JUMPDEST PUSH2 0x233 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x269E JUMP JUMPDEST PUSH2 0x1021 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2853 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2853 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x117C JUMP JUMPDEST PUSH2 0x233 PUSH2 0x40F CALLDATASIZE PUSH1 0x4 PUSH2 0x2853 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2B5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B5 PUSH2 0x445 CALLDATASIZE PUSH1 0x4 PUSH2 0x2853 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x492 PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x2853 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23D JUMP JUMPDEST PUSH2 0x338 PUSH2 0x4B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x250F JUMP JUMPDEST PUSH2 0x11B2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B5 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x28C5 JUMP JUMPDEST PUSH2 0x11FE JUMP JUMPDEST PUSH2 0x50C PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x2853 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH5 0xFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23D JUMP JUMPDEST PUSH2 0x338 PUSH2 0x530 CALLDATASIZE PUSH1 0x4 PUSH2 0x2664 JUMP JUMPDEST PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x543 CALLDATASIZE PUSH1 0x4 PUSH2 0x2853 JUMP JUMPDEST PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x233 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E0 PUSH2 0x55F CALLDATASIZE PUSH1 0x4 PUSH2 0x2853 JUMP JUMPDEST PUSH2 0x133C JUMP JUMPDEST PUSH2 0x338 PUSH2 0x572 CALLDATASIZE PUSH1 0x4 PUSH2 0x286B JUMP JUMPDEST PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x58A PUSH2 0x585 CALLDATASIZE PUSH1 0x4 PUSH2 0x2853 JUMP JUMPDEST PUSH2 0x14E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x2AC7 JUMP JUMPDEST PUSH2 0x259 PUSH2 0x5A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2529 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x5E6 PUSH2 0x5E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2853 JUMP JUMPDEST PUSH2 0x154D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23D JUMP JUMPDEST PUSH2 0x338 PUSH2 0x606 CALLDATASIZE PUSH1 0x4 PUSH2 0x2601 JUMP JUMPDEST PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x338 PUSH2 0x619 CALLDATASIZE PUSH1 0x4 PUSH2 0x250F JUMP JUMPDEST PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x62C CALLDATASIZE PUSH1 0x4 PUSH2 0x286B JUMP JUMPDEST PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x63F CALLDATASIZE PUSH1 0x4 PUSH2 0x286B JUMP JUMPDEST PUSH2 0x188F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x70F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x6D8 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x73D SWAP1 PUSH2 0x2DF4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x769 SWAP1 PUSH2 0x2DF4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7B6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x78B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x799 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7EE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x848 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x867 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2BCD JUMP JUMPDEST PUSH2 0x8BB DUP4 PUSH2 0x154D JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656564206E6F7420616363657074696E67206F666665727300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP9 SWAP1 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x54 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP2 PUSH1 0x0 PUSH2 0x95D DUP4 PUSH2 0x2E5C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x4 DUP5 ADD DUP14 SWAP1 SSTORE PUSH1 0x1 DUP1 DUP6 ADD DUP12 SWAP1 SSTORE PUSH1 0x2 DUP6 ADD DUP1 SLOAD SWAP3 DUP15 AND SWAP3 SWAP1 SWAP4 AND DUP3 OR SWAP1 SWAP3 SSTORE DUP11 DUP5 SSTORE DUP11 DUP8 MSTORE PUSH1 0x7 DUP7 MSTORE DUP5 DUP8 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP8 MSTORE SWAP6 DUP6 SWAP1 KECCAK256 ADD DUP7 SWAP1 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP3 DUP4 ADD DUP11 SWAP1 MSTORE SWAP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 DUP7 SWAP2 PUSH32 0xAC3DC350FD8FE7A7B7C5B88BF344A2DF332C672B59D6DD43A0CD1794A7270E39 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x80 DUP2 ADD SWAP1 SWAP5 MSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP8 MSTORE PUSH1 0xFF DUP1 DUP6 AND SWAP8 PUSH2 0x100 DUP7 DIV SWAP1 SWAP3 AND SWAP7 PUSH1 0x1 PUSH1 0xA8 SHL DUP7 DIV PUSH4 0xFFFFFFFF AND SWAP7 PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP7 DIV PUSH5 0xFFFFFFFFFF AND SWAP6 SWAP5 SWAP3 SWAP4 SWAP1 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAB8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAD7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD DUP7 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2BCD JUMP JUMPDEST PUSH2 0xB2C DUP2 DUP4 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0xB4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2CC0 JUMP JUMPDEST PUSH2 0xB54 DUP3 PUSH2 0x154D JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446565642063616E2774206265207265766F6B65642061742074686973207374 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x616765 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x5E7D27D7357DA2BCE071CB0105A9736B8264B9C259F97215D7E2F7B502881DD8 SWAP1 PUSH2 0xBFA SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xC22 JUMPI POP PUSH2 0xC22 DUP6 CALLER PUSH2 0x5A5 JUMP JUMPDEST PUSH2 0xC89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH2 0xC96 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x19DB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP1 DUP5 ADD SLOAD DUP7 MLOAD PUSH1 0x80 DUP2 ADD SWAP1 SWAP8 MSTORE PUSH1 0x3 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP11 MSTORE SWAP6 SWAP9 SWAP5 SWAP8 SWAP6 SWAP1 SWAP3 AND SWAP6 SWAP5 SWAP1 SWAP3 SWAP1 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xD10 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD2F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xDB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDDB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE04 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xEA6 JUMPI PUSH2 0xE6B DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE36 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE5E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x644 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE8B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0xE9F DUP2 PUSH2 0x2E5C JUMP JUMPDEST SWAP1 POP PUSH2 0xE0A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xED8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2BCD JUMP JUMPDEST PUSH2 0xEE2 DUP2 DUP5 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2CC0 JUMP JUMPDEST PUSH2 0xF0A DUP4 PUSH2 0x154D JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446565642063616E277420616363657074206D6F7265206F6666657273000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND MUL OR DUP1 DUP3 SSTORE PUSH2 0xFA0 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x2DCB JUMP JUMPDEST DUP2 SLOAD PUSH5 0xFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xC8 SHL MUL PUSH5 0xFFFFFFFFFF PUSH1 0xC8 SHL NOT SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 SSTORE PUSH2 0xFD7 PUSH1 0x5 DUP3 ADD PUSH1 0x0 PUSH2 0x2349 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x44966D4E56D70077531879040894AA85057C3BA7618964BBE117AC526A5BC94B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x104E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2BCD JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x105E DUP4 PUSH2 0x2E5C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL PUSH4 0xFFFFFFFF DUP9 AND MUL OR DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP1 DUP2 OR DUP4 SSTORE DUP10 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x10E3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0x1116 SWAP2 DUP6 SWAP2 PUSH1 0x1 SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH32 0x2ED4C7B7768C6B7A36A2A860B72DCE02EFDFF532675591E9CE525280D7AAEDB6 SWAP1 PUSH2 0x1165 SWAP1 DUP12 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP14 SWAP1 PUSH2 0x2B43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x5 SLOAD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2C8B JUMP JUMPDEST PUSH2 0x11B0 PUSH1 0x0 PUSH2 0x1CDE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2C8B JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1228 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2C8B JUMP JUMPDEST PUSH2 0x1231 DUP2 PUSH2 0x1D30 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x123F CALLER DUP4 DUP4 PUSH2 0x1D43 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x126D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2BCD JUMP JUMPDEST PUSH2 0x1276 DUP2 PUSH2 0x154D JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x2 EQ PUSH2 0x12E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465656420646F65736E2774206861766520616E206163636570746564206F66 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x66657220746F2062652070616964206261636B PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR DUP2 SSTORE PUSH1 0x4 ADD SLOAD DUP3 MLOAD DUP5 DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH32 0xF77ABE96FBD2868E9EA14580A47E854C89DEB2B4D4B8CC87989BDF65C69639C7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1368 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x848 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2BCD JUMP JUMPDEST PUSH2 0x13F6 DUP2 DUP4 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x1445 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74207468652064656564206F776E657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x3 PUSH2 0x1450 DUP4 PUSH2 0x154D JUMP JUMPDEST PUSH1 0xFF AND LT ISZERO PUSH2 0x14A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446565642063616E277420626520636C61696D65642079657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0xA15F537EBC49D6F6D5217F43D2C5D2B830069397BED363FDC1D811814148EC6D SWAP1 PUSH2 0xBFA SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x152E JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1594 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH5 0xFFFFFFFFFF AND LT JUMPDEST DUP1 ISZERO PUSH2 0x15B2 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x3 EQ ISZERO JUMPDEST ISZERO PUSH2 0x15BF JUMPI POP PUSH1 0x4 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x15F6 JUMPI POP PUSH2 0x15F6 DUP6 CALLER PUSH2 0x5A5 JUMP JUMPDEST PUSH2 0x1654 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH2 0xC96 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x168B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2C8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x1231 DUP2 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2BCD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0x179B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x546869732061646472657373206469646E27742063726561746520746865206F PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x333332B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x17B3 SWAP1 PUSH2 0x154D JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x1814 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792072656D6F7665206F66666572732066726F6D206F70656E PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x204465656473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x5 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xC0885ADE686CF1CA700832B5B7A2F2B0759E5A483174588F940E3AC048A8F8D0 SWAP1 PUSH2 0xBFA SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2BCD JUMP JUMPDEST PUSH2 0x18C3 DUP2 DUP4 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x1912 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F74207468652064656564206F776E657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x197C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446565642063616E2774206265206275726E6564206174207468697320737461 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6765 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 PUSH2 0x19CD PUSH1 0x5 DUP4 ADD DUP3 PUSH2 0x2349 JUMP JUMPDEST POP POP PUSH2 0x123F DUP2 DUP4 PUSH1 0x1 PUSH2 0x1F41 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x1A3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1A63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2BFC JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1B66 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A92 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1ABE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x1B0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2C41 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1B4B SWAP1 DUP5 SWAP1 PUSH2 0x2DB3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x1B5F SWAP1 PUSH2 0x2E5C JUMP JUMPDEST SWAP1 POP PUSH2 0x1A67 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1BB6 SWAP3 SWAP2 SWAP1 PUSH2 0x2B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1BCC DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x20BB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST CALLER PUSH2 0x1C4E DUP2 PUSH1 0x0 DUP8 PUSH2 0x1C45 DUP9 PUSH2 0x2226 JUMP JUMPDEST PUSH2 0xC96 DUP9 PUSH2 0x2226 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1C7E SWAP1 DUP5 SWAP1 PUSH2 0x2DB3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xC96 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x227F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x123F SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2367 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1DB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1E4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2BFC JUMP JUMPDEST CALLER PUSH2 0x1E5A DUP2 DUP8 DUP8 PUSH2 0x1C45 DUP9 PUSH2 0x2226 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x1E9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2C41 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1ED8 SWAP1 DUP5 SWAP1 PUSH2 0x2DB3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1F38 DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x227F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST CALLER PUSH2 0x1FD3 DUP2 DUP6 PUSH1 0x0 PUSH2 0x1FB4 DUP8 PUSH2 0x2226 JUMP JUMPDEST PUSH2 0x1FBD DUP8 PUSH2 0x2226 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2050 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP9 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP10 DUP2 MSTORE SWAP4 DUP5 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1BCC JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x20FF SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2149 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2146 SWAP2 DUP2 ADD SWAP1 PUSH2 0x28A9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x21F6 JUMPI PUSH2 0x2155 PUSH2 0x2EA3 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x218F JUMPI POP PUSH2 0x216A PUSH2 0x2EBB JUMP JUMPDEST DUP1 PUSH2 0x2175 JUMPI POP PUSH2 0x2191 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x2B72 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1F38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x226E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1BCC JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x22C3 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x230D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x230A SWAP2 DUP2 ADD SWAP1 PUSH2 0x28A9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2319 JUMPI PUSH2 0x2155 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1F38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP1 PUSH2 0x2B85 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1231 SWAP2 SWAP1 PUSH2 0x23EB JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2373 SWAP1 PUSH2 0x2DF4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2395 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x23DB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x23AE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x23DB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x23DB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x23DB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x23C0 JUMP JUMPDEST POP PUSH2 0x23E7 SWAP3 SWAP2 POP PUSH2 0x23EB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x23E7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x23EC JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x241A JUMPI PUSH2 0x241A PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2431 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x2E2F JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2485 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2492 DUP3 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249F DUP3 DUP3 PUSH2 0x2E2F JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x24BE JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24DC JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x24C0 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24F9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2508 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2400 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2520 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2508 DUP3 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x253B JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2544 DUP4 PUSH2 0x245E JUMP JUMPDEST SWAP2 POP PUSH2 0x2552 PUSH1 0x20 DUP5 ADD PUSH2 0x245E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2572 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x257B DUP7 PUSH2 0x245E JUMP JUMPDEST SWAP5 POP PUSH2 0x2589 PUSH1 0x20 DUP8 ADD PUSH2 0x245E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x25A5 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x25B1 DUP10 DUP4 DUP11 ADD PUSH2 0x2475 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x25C6 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x25D2 DUP10 DUP4 DUP11 ADD PUSH2 0x2475 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x25E7 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x25F4 DUP9 DUP3 DUP10 ADD PUSH2 0x24E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2618 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2621 DUP7 PUSH2 0x245E JUMP JUMPDEST SWAP5 POP PUSH2 0x262F PUSH1 0x20 DUP8 ADD PUSH2 0x245E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2658 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x25F4 DUP9 DUP3 DUP10 ADD PUSH2 0x24E9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2676 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x267F DUP4 PUSH2 0x245E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2693 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x26B6 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x26BF DUP8 PUSH2 0x245E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x26D2 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x26EA JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2706 PUSH1 0xA0 DUP9 ADD PUSH2 0x245E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2724 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x272D DUP4 PUSH2 0x245E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2752 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x275B DUP7 PUSH2 0x245E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2770 PUSH1 0x40 DUP8 ADD PUSH2 0x245E JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x279A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x27B1 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27C4 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x27D1 DUP3 PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27DE DUP3 DUP3 PUSH2 0x2E2F JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x27FD JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x2826 JUMPI PUSH2 0x2812 DUP2 PUSH2 0x245E JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2801 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x283C JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2849 DUP6 DUP3 DUP7 ADD PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2864 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x287D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2552 PUSH1 0x20 DUP5 ADD PUSH2 0x245E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x289E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2508 DUP2 PUSH2 0x2F45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28BA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2508 DUP2 PUSH2 0x2F45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28D6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28EC JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x28FC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x290B DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2400 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2927 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x293E PUSH1 0x40 DUP6 ADD PUSH2 0x245E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2976 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x295A JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29A6 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x298A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x29B7 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x29EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD SWAP1 PUSH2 0x2A0E SWAP1 DUP5 ADD DUP3 PUSH2 0x29CC JUMP JUMPDEST POP PUSH1 0x40 DUP2 DUP2 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2A50 SWAP1 DUP4 ADD DUP7 PUSH2 0x2947 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2A62 DUP2 DUP7 PUSH2 0x2947 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2A76 DUP2 DUP6 PUSH2 0x2981 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2ABC SWAP1 DUP4 ADD DUP5 PUSH2 0x2981 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2AFF JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2AE3 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2508 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2B31 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2947 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xA23 DUP2 DUP6 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x2B51 DUP3 DUP8 PUSH2 0x29CC JUMP JUMPDEST DUP5 PUSH1 0x20 DUP4 ADD MSTORE DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2508 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2981 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x21B0B63632B91034B9903737BA103A343290282BA7 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x546865206465656420646F65736E27742062656C6F6E6720746F207468652063 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x30B63632B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x6D8 DUP3 DUP5 PUSH2 0x29EE JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD PUSH2 0xA23 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x29EE JUMP JUMPDEST PUSH1 0xFF DUP8 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF DUP5 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x120 DUP2 ADD PUSH2 0x2D7D PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x29EE JUMP JUMPDEST DUP3 PUSH2 0x100 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2DA9 JUMPI PUSH2 0x2DA9 PUSH2 0x2E8D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2DC6 JUMPI PUSH2 0x2DC6 PUSH2 0x2E77 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x2DEB JUMPI PUSH2 0x2DEB PUSH2 0x2E77 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2E08 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2E29 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2E55 JUMPI PUSH2 0x2E55 PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2E70 JUMPI PUSH2 0x2E70 PUSH2 0x2E77 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2EB8 JUMPI PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2EC9 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x2EF9 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2F11 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2F2B JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2F3A PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x2E2F JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1231 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 CREATE2 JUMPDEST PUSH28 0x84B8152B15CF86E18DB82027FDD9AF7F0A8B2075EF34F5C4E784DD78 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        227,
        15504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "6": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "7": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "12": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "REVERT",
      "path": "13"
    },
    "16": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "17": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "POP",
      "path": "13"
    },
    "18": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "21": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "LT",
      "path": "13"
    },
    "22": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x21B"
    },
    "25": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "26": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "29": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "SHR",
      "path": "13"
    },
    "32": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "33": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8500D919"
    },
    "38": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "GT",
      "path": "13"
    },
    "39": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x125"
    },
    "42": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "43": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "44": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD05197C1"
    },
    "49": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "GT",
      "path": "13"
    },
    "50": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "54": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "55": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF1898A95"
    },
    "60": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "GT",
      "path": "13"
    },
    "61": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "65": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "66": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF1898A95"
    },
    "71": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "72": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5D3"
    },
    "75": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "76": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "77": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF242432A"
    },
    "82": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "83": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5F8"
    },
    "86": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "87": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "88": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "94": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x60B"
    },
    "97": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "98": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "99": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFC09DE89"
    },
    "104": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "105": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x61E"
    },
    "108": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "109": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "110": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFCD3533C"
    },
    "115": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "116": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x631"
    },
    "119": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "120": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "123": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "REVERT",
      "path": "13"
    },
    "124": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "125": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "126": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xD05197C1"
    },
    "131": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "132": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x551"
    },
    "135": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "136": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "137": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xDDD5E1B2"
    },
    "142": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "143": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x564"
    },
    "146": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "147": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "148": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xDFA49E6F"
    },
    "153": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "154": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x577"
    },
    "157": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "158": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "159": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE985E9C5"
    },
    "164": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "165": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x597"
    },
    "168": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "169": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "172": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "REVERT",
      "path": "13"
    },
    "173": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "174": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "175": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x9B642DE1"
    },
    "180": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "GT",
      "path": "13"
    },
    "181": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "185": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "186": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x9B642DE1"
    },
    "191": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "192": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4CB"
    },
    "195": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "196": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "197": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA05B775F"
    },
    "202": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "203": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4DE"
    },
    "206": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "207": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "208": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xA22CB465"
    },
    "213": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "214": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x522"
    },
    "217": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "218": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "219": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xAB7B1C89"
    },
    "224": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "225": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x535"
    },
    "228": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "229": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "230": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xAF640D0F"
    },
    "235": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "236": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x548"
    },
    "239": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "240": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "243": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "REVERT",
      "path": "13"
    },
    "244": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "245": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "246": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8500D919"
    },
    "251": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "252": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x437"
    },
    "255": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "256": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "257": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8BB126A7"
    },
    "262": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "263": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x465"
    },
    "266": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "267": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "268": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8C26BA0C"
    },
    "273": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "274": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4A7"
    },
    "277": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "278": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "279": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8DA5CB5B"
    },
    "284": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "285": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4BA"
    },
    "288": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "289": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "292": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "REVERT",
      "path": "13"
    },
    "293": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "294": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "295": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x474D3FF0"
    },
    "300": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "GT",
      "path": "13"
    },
    "301": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1A8"
    },
    "304": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "305": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "306": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x691DA990"
    },
    "311": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "GT",
      "path": "13"
    },
    "312": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x177"
    },
    "315": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "316": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "317": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x691DA990"
    },
    "322": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "323": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3B6"
    },
    "326": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "327": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "328": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x69BDC155"
    },
    "333": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "334": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3D9"
    },
    "337": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "338": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "339": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x715018A6"
    },
    "344": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "345": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3F9"
    },
    "348": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "349": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "350": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x7F4285F1"
    },
    "355": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "356": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x401"
    },
    "359": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "360": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "361": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x805094C7"
    },
    "366": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "367": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x424"
    },
    "370": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "371": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "373": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "374": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "REVERT",
      "path": "13"
    },
    "375": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "376": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "377": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x474D3FF0"
    },
    "382": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "383": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x34D"
    },
    "386": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "387": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "388": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x4E1273F4"
    },
    "393": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "394": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x370"
    },
    "397": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "398": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "399": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x600CA3D2"
    },
    "404": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "405": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x390"
    },
    "408": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "409": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "410": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x63BBF33A"
    },
    "415": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "416": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3A3"
    },
    "419": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "420": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "422": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "423": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "REVERT",
      "path": "13"
    },
    "424": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "425": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "426": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x12DBC1D8"
    },
    "431": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "GT",
      "path": "13"
    },
    "432": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1EF"
    },
    "435": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "436": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "437": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x12DBC1D8"
    },
    "442": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "443": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2CD"
    },
    "446": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "447": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "448": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x1387C2B5"
    },
    "453": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "454": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2ED"
    },
    "457": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "458": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "459": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x18EDF564"
    },
    "464": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "465": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x300"
    },
    "468": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "469": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "470": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x20D154DA"
    },
    "475": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "476": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x325"
    },
    "479": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "480": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "481": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x2EB2C2D6"
    },
    "486": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "487": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x33A"
    },
    "490": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "491": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "493": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "494": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "REVERT",
      "path": "13"
    },
    "495": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "496": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "497": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xFDD58E"
    },
    "501": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "502": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x220"
    },
    "505": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "506": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "507": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x1FFC9A7"
    },
    "512": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "513": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x246"
    },
    "516": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "517": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "518": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xE89341C"
    },
    "523": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "524": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x269"
    },
    "527": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "528": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "529": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x1218239F"
    },
    "534": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "EQ",
      "path": "13"
    },
    "535": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x289"
    },
    "538": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "539": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "540": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "542": {
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "DUP1",
      "path": "13"
    },
    "543": {
      "first_revert": true,
      "fn": null,
      "offset": [
        227,
        15504
      ],
      "op": "REVERT",
      "path": "13"
    },
    "544": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "545": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x233"
    },
    "548": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22E"
    },
    "551": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "552": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "554": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2712"
    },
    "557": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMP",
      "path": "1"
    },
    "558": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "559": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x644"
    },
    "562": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMP",
      "path": "1"
    },
    "563": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "564": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "566": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "567": {
      "op": "SWAP1"
    },
    "568": {
      "op": "DUP2"
    },
    "569": {
      "op": "MSTORE"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "572": {
      "op": "ADD"
    },
    "573": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "574": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "576": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "577": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "DUP1",
      "path": "1"
    },
    "578": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "579": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "SUB",
      "path": "1"
    },
    "580": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "581": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "RETURN",
      "path": "1"
    },
    "582": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "583": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x259"
    },
    "586": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x254"
    },
    "589": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "590": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "592": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x288D"
    },
    "595": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMP",
      "path": "1"
    },
    "596": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "597": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6DE"
    },
    "600": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMP",
      "path": "1"
    },
    "601": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "602": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "604": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "605": {
      "op": "SWAP1"
    },
    "606": {
      "op": "ISZERO"
    },
    "607": {
      "op": "ISZERO"
    },
    "608": {
      "op": "DUP2"
    },
    "609": {
      "op": "MSTORE"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "612": {
      "op": "ADD"
    },
    "613": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23D"
    },
    "616": {
      "op": "JUMP"
    },
    "617": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "618": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27C"
    },
    "621": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x277"
    },
    "624": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "625": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "627": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2853"
    },
    "630": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMP",
      "path": "1"
    },
    "631": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "632": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72E"
    },
    "635": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMP",
      "path": "1"
    },
    "636": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "637": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "639": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "640": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23D"
    },
    "643": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "644": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "645": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B72"
    },
    "648": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMP",
      "path": "1"
    },
    "649": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14721,
        14831
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "650": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14721,
        14831
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2B5"
    },
    "653": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14721,
        14831
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x297"
    },
    "656": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14721,
        14831
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "657": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14721,
        14831
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "659": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14721,
        14831
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2853"
    },
    "662": {
      "fn": "PWNDeed.getLender",
      "jump": "i",
      "offset": [
        14721,
        14831
      ],
      "op": "JUMP",
      "path": "13"
    },
    "663": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14721,
        14831
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "664": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14777,
        14784
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "666": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14803,
        14817
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 0
    },
    "667": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14803,
        14817
      ],
      "op": "DUP2",
      "path": "13"
    },
    "668": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14803,
        14817
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "669": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14803,
        14809
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "671": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14803,
        14817
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "673": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14803,
        14817
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "674": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14803,
        14817
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "676": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14803,
        14817
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "677": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14803,
        14817
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "678": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14803,
        14824
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "680": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14803,
        14824
      ],
      "op": "ADD",
      "path": "13"
    },
    "681": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14803,
        14824
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "688": {
      "op": "SHL"
    },
    "689": {
      "op": "SUB"
    },
    "690": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14803,
        14824
      ],
      "op": "AND",
      "path": "13"
    },
    "691": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14803,
        14824
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "692": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14721,
        14831
      ],
      "op": "JUMP",
      "path": "13"
    },
    "693": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14721,
        14831
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "694": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14721,
        14831
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "696": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14721,
        14831
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "703": {
      "op": "SHL"
    },
    "704": {
      "op": "SUB"
    },
    "705": {
      "op": "SWAP1"
    },
    "706": {
      "op": "SWAP2"
    },
    "707": {
      "op": "AND"
    },
    "708": {
      "op": "DUP2"
    },
    "709": {
      "op": "MSTORE"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "712": {
      "op": "ADD"
    },
    "713": {
      "fn": "PWNDeed.getLender",
      "offset": [
        14721,
        14831
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x23D"
    },
    "716": {
      "op": "JUMP"
    },
    "717": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "718": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2E0"
    },
    "721": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2DB"
    },
    "724": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "725": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "727": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2853"
    },
    "730": {
      "fn": "PWNDeed.getDeedCollateral",
      "jump": "i",
      "offset": [
        12450,
        12583
      ],
      "op": "JUMP",
      "path": "13"
    },
    "731": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "732": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7C2"
    },
    "735": {
      "fn": "PWNDeed.getDeedCollateral",
      "jump": "i",
      "offset": [
        12450,
        12583
      ],
      "op": "JUMP",
      "path": "13"
    },
    "736": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "737": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "739": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "740": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x23D"
    },
    "743": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "744": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "745": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2D05"
    },
    "748": {
      "fn": "PWNDeed.getDeedCollateral",
      "jump": "i",
      "offset": [
        12450,
        12583
      ],
      "op": "JUMP",
      "path": "13"
    },
    "749": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "750": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x233"
    },
    "753": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2FB"
    },
    "756": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "757": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "759": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x273B"
    },
    "762": {
      "fn": "PWNDeed.makeOffer",
      "jump": "i",
      "offset": [
        6303,
        7048
      ],
      "op": "JUMP",
      "path": "13"
    },
    "763": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "764": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x885"
    },
    "767": {
      "fn": "PWNDeed.makeOffer",
      "jump": "i",
      "offset": [
        6303,
        7048
      ],
      "op": "JUMP",
      "path": "13"
    },
    "768": {
      "offset": [
        2047,
        2085
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "769": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x313"
    },
    "772": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x30E"
    },
    "775": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "776": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "778": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2853"
    },
    "781": {
      "fn": "PWNDeed.makeOffer",
      "jump": "i",
      "offset": [
        2047,
        2085
      ],
      "op": "JUMP",
      "path": "13"
    },
    "782": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "783": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xA2C"
    },
    "786": {
      "fn": "PWNDeed.makeOffer",
      "jump": "i",
      "offset": [
        2047,
        2085
      ],
      "op": "JUMP",
      "path": "13"
    },
    "787": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "788": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "790": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "791": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x23D"
    },
    "794": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "795": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "796": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "797": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "798": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "799": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "800": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "801": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2D3D"
    },
    "804": {
      "fn": "PWNDeed.makeOffer",
      "jump": "i",
      "offset": [
        2047,
        2085
      ],
      "op": "JUMP",
      "path": "13"
    },
    "805": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5470,
        5798
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "806": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5470,
        5798
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x338"
    },
    "809": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5470,
        5798
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x333"
    },
    "812": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5470,
        5798
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "813": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5470,
        5798
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "815": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5470,
        5798
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x286B"
    },
    "818": {
      "fn": "PWNDeed.revoke",
      "jump": "i",
      "offset": [
        5470,
        5798
      ],
      "op": "JUMP",
      "path": "13"
    },
    "819": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5470,
        5798
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "820": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5470,
        5798
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAF8"
    },
    "823": {
      "fn": "PWNDeed.revoke",
      "jump": "i",
      "offset": [
        5470,
        5798
      ],
      "op": "JUMP",
      "path": "13"
    },
    "824": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5470,
        5798
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "825": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5470,
        5798
      ],
      "op": "STOP",
      "path": "13"
    },
    "826": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "827": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x338"
    },
    "830": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x348"
    },
    "833": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "834": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "836": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255B"
    },
    "839": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMP",
      "path": "1"
    },
    "840": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "841": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC06"
    },
    "844": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMP",
      "path": "1"
    },
    "845": {
      "offset": [
        2131,
        2171
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "846": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x360"
    },
    "849": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x35B"
    },
    "852": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "853": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "855": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2853"
    },
    "858": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        2131,
        2171
      ],
      "op": "JUMP",
      "path": "13"
    },
    "859": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "860": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC9D"
    },
    "863": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        2131,
        2171
      ],
      "op": "JUMP",
      "path": "13"
    },
    "864": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "865": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "867": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "868": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x23D"
    },
    "871": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "872": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "873": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "874": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "875": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "876": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2D13"
    },
    "879": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        2131,
        2171
      ],
      "op": "JUMP",
      "path": "13"
    },
    "880": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "881": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x383"
    },
    "884": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37E"
    },
    "887": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "888": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "890": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2788"
    },
    "893": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMP",
      "path": "1"
    },
    "894": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "895": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD4C"
    },
    "898": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMP",
      "path": "1"
    },
    "899": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "900": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "902": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "903": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23D"
    },
    "906": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "907": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "908": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B0B"
    },
    "911": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMP",
      "path": "1"
    },
    "912": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8298,
        8864
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "913": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8298,
        8864
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x338"
    },
    "916": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8298,
        8864
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x39E"
    },
    "919": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8298,
        8864
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "920": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8298,
        8864
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "922": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8298,
        8864
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2913"
    },
    "925": {
      "fn": "PWNDeed.acceptOffer",
      "jump": "i",
      "offset": [
        8298,
        8864
      ],
      "op": "JUMP",
      "path": "13"
    },
    "926": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8298,
        8864
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "927": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8298,
        8864
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xEAE"
    },
    "930": {
      "fn": "PWNDeed.acceptOffer",
      "jump": "i",
      "offset": [
        8298,
        8864
      ],
      "op": "JUMP",
      "path": "13"
    },
    "931": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "932": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x233"
    },
    "935": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3B1"
    },
    "938": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "939": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "941": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x269E"
    },
    "944": {
      "fn": "PWNDeed.create",
      "jump": "i",
      "offset": [
        4582,
        5285
      ],
      "op": "JUMP",
      "path": "13"
    },
    "945": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "946": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1021"
    },
    "949": {
      "fn": "PWNDeed.create",
      "jump": "i",
      "offset": [
        4582,
        5285
      ],
      "op": "JUMP",
      "path": "13"
    },
    "950": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13264,
        13383
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "951": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13264,
        13383
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x233"
    },
    "954": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13264,
        13383
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3C4"
    },
    "957": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13264,
        13383
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "958": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13264,
        13383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "960": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13264,
        13383
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2853"
    },
    "963": {
      "fn": "PWNDeed.getAcceptedOffer",
      "jump": "i",
      "offset": [
        13264,
        13383
      ],
      "op": "JUMP",
      "path": "13"
    },
    "964": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13264,
        13383
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "965": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13325,
        13332
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "967": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13351,
        13362
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 1
    },
    "968": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13351,
        13362
      ],
      "op": "DUP2",
      "path": "13"
    },
    "969": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13351,
        13362
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "970": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13351,
        13356
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "972": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13351,
        13362
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "974": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13351,
        13362
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "975": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13351,
        13362
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "977": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13351,
        13362
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "978": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13351,
        13362
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "979": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13351,
        13376
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "981": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13351,
        13376
      ],
      "op": "ADD",
      "path": "13"
    },
    "982": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13351,
        13376
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "983": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13351,
        13376
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "984": {
      "fn": "PWNDeed.getAcceptedOffer",
      "offset": [
        13264,
        13383
      ],
      "op": "JUMP",
      "path": "13"
    },
    "985": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13708,
        13815
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "986": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13708,
        13815
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x233"
    },
    "989": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13708,
        13815
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3E7"
    },
    "992": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13708,
        13815
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "993": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13708,
        13815
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "995": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13708,
        13815
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2853"
    },
    "998": {
      "fn": "PWNDeed.getDeedID",
      "jump": "i",
      "offset": [
        13708,
        13815
      ],
      "op": "JUMP",
      "path": "13"
    },
    "999": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13708,
        13815
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1000": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13764,
        13771
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1002": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13790,
        13804
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 2
    },
    "1003": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13790,
        13804
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1004": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13790,
        13804
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1005": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13790,
        13796
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "1007": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13790,
        13804
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1009": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13790,
        13804
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1010": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13790,
        13804
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1012": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13790,
        13804
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1013": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13790,
        13804
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1014": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13790,
        13808
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1015": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13790,
        13808
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1016": {
      "fn": "PWNDeed.getDeedID",
      "offset": [
        13708,
        13815
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1017": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1018": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x338"
    },
    "1021": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117C"
    },
    "1024": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1025": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14395,
        14506
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1026": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14395,
        14506
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x233"
    },
    "1029": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14395,
        14506
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x40F"
    },
    "1032": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14395,
        14506
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1033": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14395,
        14506
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1035": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14395,
        14506
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2853"
    },
    "1038": {
      "fn": "PWNDeed.toBePaid",
      "jump": "i",
      "offset": [
        14395,
        14506
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1039": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14395,
        14506
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1040": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14450,
        14457
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1042": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14476,
        14490
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 3
    },
    "1043": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14476,
        14490
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1044": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14476,
        14490
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1045": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14476,
        14482
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "1047": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14476,
        14490
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1049": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14476,
        14490
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1050": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14476,
        14490
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1052": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14476,
        14490
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1053": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14476,
        14490
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1054": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14476,
        14499
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "1056": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14476,
        14499
      ],
      "op": "ADD",
      "path": "13"
    },
    "1057": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14476,
        14499
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1058": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14476,
        14499
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1059": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        14395,
        14506
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1060": {
      "offset": [
        473,
        491
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1061": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        473,
        491
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1063": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        473,
        491
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1064": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        473,
        491
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2B5"
    },
    "1067": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        473,
        491
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1074": {
      "op": "SHL"
    },
    "1075": {
      "op": "SUB"
    },
    "1076": {
      "offset": [
        473,
        491
      ],
      "op": "AND",
      "path": "13"
    },
    "1077": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        473,
        491
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1078": {
      "fn": "PWNDeed.toBePaid",
      "offset": [
        473,
        491
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1079": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12103,
        12212
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1080": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12103,
        12212
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2B5"
    },
    "1083": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12103,
        12212
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x445"
    },
    "1086": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12103,
        12212
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1087": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12103,
        12212
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1089": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12103,
        12212
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2853"
    },
    "1092": {
      "fn": "PWNDeed.getBorrower",
      "jump": "i",
      "offset": [
        12103,
        12212
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1093": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12103,
        12212
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1094": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12159,
        12166
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1096": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12185,
        12196
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 4
    },
    "1097": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12185,
        12196
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1098": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12185,
        12196
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1099": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12185,
        12190
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "1101": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12185,
        12196
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1103": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12185,
        12196
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1104": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12185,
        12196
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1106": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12185,
        12196
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1107": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12185,
        12196
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1108": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12185,
        12205
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1109": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12185,
        12205
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "1112": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12185,
        12205
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1113": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12185,
        12205
      ],
      "op": "DIV",
      "path": "13"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1120": {
      "op": "SHL"
    },
    "1121": {
      "op": "SUB"
    },
    "1122": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12185,
        12205
      ],
      "op": "AND",
      "path": "13"
    },
    "1123": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12185,
        12205
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1124": {
      "fn": "PWNDeed.getBorrower",
      "offset": [
        12103,
        12212
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1125": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11793,
        11901
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1126": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11793,
        11901
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x492"
    },
    "1129": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11793,
        11901
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x473"
    },
    "1132": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11793,
        11901
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1133": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11793,
        11901
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1135": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11793,
        11901
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2853"
    },
    "1138": {
      "fn": "PWNDeed.getDuration",
      "jump": "i",
      "offset": [
        11793,
        11901
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1139": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11793,
        11901
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1140": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11849,
        11855
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1142": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11874,
        11885
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 5
    },
    "1143": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11874,
        11885
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1144": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11874,
        11885
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1145": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11874,
        11879
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "1147": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11874,
        11885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1149": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11874,
        11885
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1150": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11874,
        11885
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1152": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11874,
        11885
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1153": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11874,
        11885
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1154": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11874,
        11894
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1159": {
      "op": "SHL"
    },
    "1160": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11874,
        11894
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1161": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11874,
        11894
      ],
      "op": "DIV",
      "path": "13"
    },
    "1162": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11874,
        11894
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "1167": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11874,
        11894
      ],
      "op": "AND",
      "path": "13"
    },
    "1168": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11874,
        11894
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1169": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11793,
        11901
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1170": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11793,
        11901
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1171": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11793,
        11901
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1173": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11793,
        11901
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1174": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1179": {
      "op": "SWAP1"
    },
    "1180": {
      "op": "SWAP2"
    },
    "1181": {
      "op": "AND"
    },
    "1182": {
      "op": "DUP2"
    },
    "1183": {
      "op": "MSTORE"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1186": {
      "op": "ADD"
    },
    "1187": {
      "fn": "PWNDeed.getDuration",
      "offset": [
        11793,
        11901
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x23D"
    },
    "1190": {
      "op": "JUMP"
    },
    "1191": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15132,
        15216
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1192": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15132,
        15216
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x338"
    },
    "1195": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15132,
        15216
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4B5"
    },
    "1198": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15132,
        15216
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1199": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15132,
        15216
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1201": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15132,
        15216
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x250F"
    },
    "1204": {
      "fn": "PWNDeed.setPWN",
      "jump": "i",
      "offset": [
        15132,
        15216
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1205": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15132,
        15216
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1206": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15132,
        15216
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x11B2"
    },
    "1209": {
      "fn": "PWNDeed.setPWN",
      "jump": "i",
      "offset": [
        15132,
        15216
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1210": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1211": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x3"
    },
    "1213": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1220": {
      "op": "SHL"
    },
    "1221": {
      "op": "SUB"
    },
    "1222": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1223": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B5"
    },
    "1226": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1227": {
      "fn": "PWNDeed.setUri",
      "offset": [
        15411,
        15502
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1228": {
      "fn": "PWNDeed.setUri",
      "offset": [
        15411,
        15502
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x338"
    },
    "1231": {
      "fn": "PWNDeed.setUri",
      "offset": [
        15411,
        15502
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4D9"
    },
    "1234": {
      "fn": "PWNDeed.setUri",
      "offset": [
        15411,
        15502
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1235": {
      "fn": "PWNDeed.setUri",
      "offset": [
        15411,
        15502
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1237": {
      "fn": "PWNDeed.setUri",
      "offset": [
        15411,
        15502
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x28C5"
    },
    "1240": {
      "fn": "PWNDeed.setUri",
      "jump": "i",
      "offset": [
        15411,
        15502
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1241": {
      "fn": "PWNDeed.setUri",
      "offset": [
        15411,
        15502
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1242": {
      "fn": "PWNDeed.setUri",
      "offset": [
        15411,
        15502
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x11FE"
    },
    "1245": {
      "fn": "PWNDeed.setUri",
      "jump": "i",
      "offset": [
        15411,
        15502
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1246": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11469,
        11581
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1247": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11469,
        11581
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x50C"
    },
    "1250": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11469,
        11581
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x4EC"
    },
    "1253": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11469,
        11581
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1254": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11469,
        11581
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1256": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11469,
        11581
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2853"
    },
    "1259": {
      "fn": "PWNDeed.getExpiration",
      "jump": "i",
      "offset": [
        11469,
        11581
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1260": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11469,
        11581
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1261": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11527,
        11533
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1263": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11552,
        11563
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 7
    },
    "1264": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11552,
        11563
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1265": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11552,
        11563
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1266": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11552,
        11557
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "1268": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11552,
        11563
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "1270": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11552,
        11563
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "1271": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11552,
        11563
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1273": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11552,
        11563
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1274": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11552,
        11563
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "1275": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11552,
        11574
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "1280": {
      "op": "SHL"
    },
    "1281": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11552,
        11574
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1282": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11552,
        11574
      ],
      "op": "DIV",
      "path": "13"
    },
    "1283": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11552,
        11574
      ],
      "op": "PUSH5",
      "path": "13",
      "value": "0xFFFFFFFFFF"
    },
    "1289": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11552,
        11574
      ],
      "op": "AND",
      "path": "13"
    },
    "1290": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11552,
        11574
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1291": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11469,
        11581
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1292": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11469,
        11581
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1293": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11469,
        11581
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1295": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11469,
        11581
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1296": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "1302": {
      "op": "SWAP1"
    },
    "1303": {
      "op": "SWAP2"
    },
    "1304": {
      "op": "AND"
    },
    "1305": {
      "op": "DUP2"
    },
    "1306": {
      "op": "MSTORE"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "fn": "PWNDeed.getExpiration",
      "offset": [
        11469,
        11581
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x23D"
    },
    "1313": {
      "op": "JUMP"
    },
    "1314": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1315": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x338"
    },
    "1318": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x530"
    },
    "1321": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1322": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1324": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2664"
    },
    "1327": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1328": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1329": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1234"
    },
    "1332": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1333": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9009,
        9254
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1334": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9009,
        9254
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x338"
    },
    "1337": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9009,
        9254
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x543"
    },
    "1340": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9009,
        9254
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1341": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9009,
        9254
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1343": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9009,
        9254
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2853"
    },
    "1346": {
      "fn": "PWNDeed.repayLoan",
      "jump": "i",
      "offset": [
        9009,
        9254
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1347": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9009,
        9254
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1348": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9009,
        9254
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1243"
    },
    "1351": {
      "fn": "PWNDeed.repayLoan",
      "jump": "i",
      "offset": [
        9009,
        9254
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1352": {
      "offset": [
        572,
        589
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1353": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        572,
        589
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x233"
    },
    "1356": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        572,
        589
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "1358": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        572,
        589
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1359": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        572,
        589
      ],
      "op": "DUP2",
      "path": "13"
    },
    "1360": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        572,
        589
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1361": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14066,
        14193
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1362": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14066,
        14193
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2E0"
    },
    "1365": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14066,
        14193
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x55F"
    },
    "1368": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14066,
        14193
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1369": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14066,
        14193
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1371": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14066,
        14193
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2853"
    },
    "1374": {
      "fn": "PWNDeed.getOfferLoan",
      "jump": "i",
      "offset": [
        14066,
        14193
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1375": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14066,
        14193
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1376": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14066,
        14193
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x133C"
    },
    "1379": {
      "fn": "PWNDeed.getOfferLoan",
      "jump": "i",
      "offset": [
        14066,
        14193
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1380": {
      "fn": "PWNDeed.claim",
      "offset": [
        9490,
        9798
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1381": {
      "fn": "PWNDeed.claim",
      "offset": [
        9490,
        9798
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x338"
    },
    "1384": {
      "fn": "PWNDeed.claim",
      "offset": [
        9490,
        9798
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x572"
    },
    "1387": {
      "fn": "PWNDeed.claim",
      "offset": [
        9490,
        9798
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1388": {
      "fn": "PWNDeed.claim",
      "offset": [
        9490,
        9798
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1390": {
      "fn": "PWNDeed.claim",
      "offset": [
        9490,
        9798
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x286B"
    },
    "1393": {
      "fn": "PWNDeed.claim",
      "jump": "i",
      "offset": [
        9490,
        9798
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1394": {
      "fn": "PWNDeed.claim",
      "offset": [
        9490,
        9798
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1395": {
      "fn": "PWNDeed.claim",
      "offset": [
        9490,
        9798
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13C2"
    },
    "1398": {
      "fn": "PWNDeed.claim",
      "jump": "i",
      "offset": [
        9490,
        9798
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1399": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1400": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x58A"
    },
    "1403": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x585"
    },
    "1406": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1407": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1409": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2853"
    },
    "1412": {
      "fn": "PWNDeed.getOffers",
      "jump": "i",
      "offset": [
        12776,
        12897
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1413": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1414": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14E9"
    },
    "1417": {
      "fn": "PWNDeed.getOffers",
      "jump": "i",
      "offset": [
        12776,
        12897
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1418": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1419": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1421": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1422": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x23D"
    },
    "1425": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "1426": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "1427": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2AC7"
    },
    "1430": {
      "fn": "PWNDeed.getOffers",
      "jump": "i",
      "offset": [
        12776,
        12897
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1431": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1432": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x259"
    },
    "1435": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A5"
    },
    "1438": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1439": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1441": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2529"
    },
    "1444": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1445": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1452": {
      "op": "SHL"
    },
    "1453": {
      "op": "SUB"
    },
    "1454": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 8
    },
    "1455": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1456": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "AND",
      "path": "1"
    },
    "1457": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3450,
        3454
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1459": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1460": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1461": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1462": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3491
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1464": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1466": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1467": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1468": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1469": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1471": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1472": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1473": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1474": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1475": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1476": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1477": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "AND",
      "path": "1"
    },
    "1478": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1479": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1480": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1481": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1482": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1483": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1484": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1485": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1486": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1488": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "AND",
      "path": "1"
    },
    "1489": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1490": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1491": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1492": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5E6"
    },
    "1495": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x5E1"
    },
    "1498": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1499": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1501": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2853"
    },
    "1504": {
      "fn": "PWNDeed.getDeedStatus",
      "jump": "i",
      "offset": [
        10881,
        11154
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1505": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1506": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x154D"
    },
    "1509": {
      "fn": "PWNDeed.getDeedStatus",
      "jump": "i",
      "offset": [
        10881,
        11154
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1510": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1511": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "1513": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1516": {
      "op": "SWAP1"
    },
    "1517": {
      "op": "SWAP2"
    },
    "1518": {
      "op": "AND"
    },
    "1519": {
      "op": "DUP2"
    },
    "1520": {
      "op": "MSTORE"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1523": {
      "op": "ADD"
    },
    "1524": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x23D"
    },
    "1527": {
      "op": "JUMP"
    },
    "1528": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1529": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x338"
    },
    "1532": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x606"
    },
    "1535": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1536": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1538": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2601"
    },
    "1541": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3584,
        3973
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1542": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1543": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15DA"
    },
    "1546": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3584,
        3973
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1547": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1548": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x338"
    },
    "1551": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x619"
    },
    "1554": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1555": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1557": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x250F"
    },
    "1560": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1561": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1562": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1661"
    },
    "1565": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1566": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7681,
        8039
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1567": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7681,
        8039
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x338"
    },
    "1570": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7681,
        8039
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x62C"
    },
    "1573": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7681,
        8039
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1574": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7681,
        8039
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1576": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7681,
        8039
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x286B"
    },
    "1579": {
      "fn": "PWNDeed.revokeOffer",
      "jump": "i",
      "offset": [
        7681,
        8039
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1580": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7681,
        8039
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1581": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7681,
        8039
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16F9"
    },
    "1584": {
      "fn": "PWNDeed.revokeOffer",
      "jump": "i",
      "offset": [
        7681,
        8039
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1585": {
      "fn": "PWNDeed.burn",
      "offset": [
        10017,
        10327
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1586": {
      "fn": "PWNDeed.burn",
      "offset": [
        10017,
        10327
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x338"
    },
    "1589": {
      "fn": "PWNDeed.burn",
      "offset": [
        10017,
        10327
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x63F"
    },
    "1592": {
      "fn": "PWNDeed.burn",
      "offset": [
        10017,
        10327
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "1593": {
      "fn": "PWNDeed.burn",
      "offset": [
        10017,
        10327
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "1595": {
      "fn": "PWNDeed.burn",
      "offset": [
        10017,
        10327
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x286B"
    },
    "1598": {
      "fn": "PWNDeed.burn",
      "jump": "i",
      "offset": [
        10017,
        10327
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1599": {
      "fn": "PWNDeed.burn",
      "offset": [
        10017,
        10327
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1600": {
      "fn": "PWNDeed.burn",
      "offset": [
        10017,
        10327
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x188F"
    },
    "1603": {
      "fn": "PWNDeed.burn",
      "jump": "i",
      "offset": [
        10017,
        10327
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1604": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1605": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2256,
        2263
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1613": {
      "op": "SHL"
    },
    "1614": {
      "op": "SUB"
    },
    "1615": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2283,
        2304
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 9
    },
    "1616": {
      "branch": 133,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2283,
        2304
      ],
      "op": "AND",
      "path": "1"
    },
    "1617": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B5"
    },
    "1620": {
      "branch": 133,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1621": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1623": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1624": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1630": {
      "op": "SHL"
    },
    "1631": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1632": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1635": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1637": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1638": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "ADD",
      "path": "1"
    },
    "1639": {
      "op": "MSTORE"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1644": {
      "op": "DUP3"
    },
    "1645": {
      "op": "ADD"
    },
    "1646": {
      "op": "MSTORE"
    },
    "1647": {
      "op": "PUSH32",
      "value": "0x455243313135353A2062616C616E636520717565727920666F7220746865207A"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1682": {
      "op": "DUP3"
    },
    "1683": {
      "op": "ADD"
    },
    "1684": {
      "op": "MSTORE"
    },
    "1685": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1702": {
      "op": "DUP3"
    },
    "1703": {
      "op": "ADD"
    },
    "1704": {
      "op": "MSTORE"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1707": {
      "op": "ADD"
    },
    "1708": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1709": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1711": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1712": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1713": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1714": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "SUB",
      "path": "1"
    },
    "1715": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1716": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "1717": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1718": {
      "op": "POP"
    },
    "1719": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2378
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x0"
    },
    "1721": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1722": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1723": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1724": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1726": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1727": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1728": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1729": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1731": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1732": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1733": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1740": {
      "op": "SHL"
    },
    "1741": {
      "op": "SUB"
    },
    "1742": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1743": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "AND",
      "path": "1"
    },
    "1744": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1745": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1746": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1747": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1748": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1749": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1750": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1751": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1752": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1753": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1754": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1755": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "POP",
      "path": "1"
    },
    "1756": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "POP",
      "path": "1"
    },
    "1757": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1758": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1759": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1323,
        1327
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1767": {
      "op": "SHL"
    },
    "1768": {
      "op": "SUB"
    },
    "1769": {
      "op": "NOT"
    },
    "1770": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1399
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 11
    },
    "1771": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1399
      ],
      "op": "AND",
      "path": "1"
    },
    "1772": {
      "op": "PUSH4",
      "value": "0x6CDB3D13"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1779": {
      "op": "SHL"
    },
    "1780": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1399
      ],
      "op": "EQ",
      "path": "1"
    },
    "1781": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1399
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1782": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1467
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x70F"
    },
    "1785": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1467
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1786": {
      "op": "POP"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1793": {
      "op": "SHL"
    },
    "1794": {
      "op": "SUB"
    },
    "1795": {
      "op": "NOT"
    },
    "1796": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1415,
        1467
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1797": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1415,
        1467
      ],
      "op": "AND",
      "path": "1"
    },
    "1798": {
      "op": "PUSH4",
      "value": "0x3A24D07"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1805": {
      "op": "SHL"
    },
    "1806": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1415,
        1467
      ],
      "op": "EQ",
      "path": "1"
    },
    "1807": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1467
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1808": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1519
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1809": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6D8"
    },
    "1812": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1519
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1813": {
      "op": "POP"
    },
    "1814": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1821": {
      "op": "SHL"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "op": "SUB"
    },
    "1830": {
      "op": "NOT"
    },
    "1831": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 12
    },
    "1832": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "9"
    },
    "1833": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "9"
    },
    "1834": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1483,
        1519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6D8"
    },
    "1837": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1838": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1839": {
      "fn": "ERC1155.uri",
      "offset": [
        1985,
        1998
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1841": {
      "fn": "ERC1155.uri",
      "offset": [
        2017,
        2021
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 13,
      "value": "0x2"
    },
    "1843": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1844": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1845": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x73D"
    },
    "1848": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1849": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DF4"
    },
    "1852": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1853": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1854": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1855": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1857": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "1"
    },
    "1858": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1860": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1861": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1862": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DIV",
      "path": "1"
    },
    "1863": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MUL",
      "path": "1"
    },
    "1864": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1866": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "1"
    },
    "1867": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1869": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1870": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1871": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1872": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "1"
    },
    "1873": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1875": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1876": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1877": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1878": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1879": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1880": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1881": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1882": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1883": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1885": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "1"
    },
    "1886": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1887": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1888": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1889": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x769"
    },
    "1892": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1893": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DF4"
    },
    "1896": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1897": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1898": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1899": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1900": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7B6"
    },
    "1903": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1904": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1905": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1907": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "LT",
      "path": "1"
    },
    "1908": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x78B"
    },
    "1911": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1912": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1915": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1916": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1917": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1918": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DIV",
      "path": "1"
    },
    "1919": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MUL",
      "path": "1"
    },
    "1920": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1921": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1922": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1923": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1925": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "1"
    },
    "1926": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1927": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7B6"
    },
    "1930": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1931": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1932": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1933": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "1"
    },
    "1934": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1935": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1936": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1938": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1939": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1941": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1943": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1944": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1945": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1946": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1947": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1948": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1949": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1950": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1951": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1953": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "1"
    },
    "1954": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1955": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1957": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "1"
    },
    "1958": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1959": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1960": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "GT",
      "path": "1"
    },
    "1961": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x799"
    },
    "1964": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1965": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1966": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1967": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SUB",
      "path": "1"
    },
    "1968": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1970": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "AND",
      "path": "1"
    },
    "1971": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1972": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "1"
    },
    "1973": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1974": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1975": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "1"
    },
    "1976": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "1"
    },
    "1977": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "1"
    },
    "1978": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "1"
    },
    "1979": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "1"
    },
    "1980": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1981": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "1"
    },
    "1982": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1983": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1984": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "POP",
      "path": "1"
    },
    "1985": {
      "fn": "ERC1155.uri",
      "jump": "o",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1986": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1987": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12512,
        12535
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7EE"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1992": {
      "op": "DUP1"
    },
    "1993": {
      "op": "MLOAD"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1996": {
      "op": "DUP2"
    },
    "1997": {
      "op": "ADD"
    },
    "1998": {
      "op": "SWAP1"
    },
    "1999": {
      "op": "SWAP2"
    },
    "2000": {
      "op": "MSTORE"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2003": {
      "op": "DUP1"
    },
    "2004": {
      "op": "DUP3"
    },
    "2005": {
      "op": "MSTORE"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2008": {
      "op": "DUP3"
    },
    "2009": {
      "op": "ADD"
    },
    "2010": {
      "op": "SWAP1"
    },
    "2011": {
      "op": "DUP2"
    },
    "2012": {
      "op": "MSTORE"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2015": {
      "op": "ADD"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2018": {
      "op": "DUP2"
    },
    "2019": {
      "op": "MSTORE"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2022": {
      "op": "ADD"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2025": {
      "op": "DUP2"
    },
    "2026": {
      "op": "MSTORE"
    },
    "2027": {
      "op": "POP"
    },
    "2028": {
      "op": "SWAP1"
    },
    "2029": {
      "op": "JUMP"
    },
    "2030": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12512,
        12535
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2031": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12565
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 14,
      "value": "0x0"
    },
    "2033": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12565
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2034": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12565
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2035": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12565
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2036": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12559
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "2038": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12565
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2040": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12565
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2041": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12565
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2042": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12565
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2043": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12565
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2045": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12565
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2046": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12565
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2047": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12565
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2048": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12565
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2049": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2050": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2051": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2053": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2054": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "ADD",
      "path": "13"
    },
    "2055": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2056": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2057": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2058": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2060": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12576
      ],
      "op": "ADD",
      "path": "13"
    },
    "2061": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2062": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2069": {
      "op": "SHL"
    },
    "2070": {
      "op": "SUB"
    },
    "2071": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2072": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "AND",
      "path": "13"
    },
    "2073": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2074": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2075": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2076": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12554,
        12576
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2077": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2078": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "ADD",
      "path": "13"
    },
    "2079": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2084": {
      "op": "SHL"
    },
    "2085": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2086": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "DIV",
      "path": "13"
    },
    "2087": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2089": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "AND",
      "path": "13"
    },
    "2090": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2092": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2093": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "GT",
      "path": "13"
    },
    "2094": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2095": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x848"
    },
    "2098": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2099": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2106": {
      "op": "SHL"
    },
    "2107": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2109": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2110": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x21"
    },
    "2112": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2114": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2115": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "2117": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2119": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2120": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2121": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2123": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2124": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "GT",
      "path": "13"
    },
    "2125": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2126": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x867"
    },
    "2129": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2130": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2137": {
      "op": "SHL"
    },
    "2138": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2140": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2141": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x21"
    },
    "2143": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2145": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2146": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "2148": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2150": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2151": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2152": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2153": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2154": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2156": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2157": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "ADD",
      "path": "13"
    },
    "2158": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2159": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2161": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2162": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "ADD",
      "path": "13"
    },
    "2163": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2164": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2166": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2167": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2168": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "ADD",
      "path": "13"
    },
    "2169": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2170": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2172": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2173": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2174": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "ADD",
      "path": "13"
    },
    "2175": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2176": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12547,
        12576
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2177": {
      "fn": "PWNDeed.getDeedCollateral",
      "offset": [
        12450,
        12583
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2178": {
      "op": "POP"
    },
    "2179": {
      "op": "POP"
    },
    "2180": {
      "fn": "PWNDeed.getDeedCollateral",
      "jump": "o",
      "offset": [
        12450,
        12583
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2181": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2182": {
      "offset": [
        3171,
        3174
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2184": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        3171,
        3174
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2185": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6489,
        6496
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2187": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6489,
        6496
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2194": {
      "op": "SHL"
    },
    "2195": {
      "op": "SUB"
    },
    "2196": {
      "offset": [
        3171,
        3174
      ],
      "op": "AND",
      "path": "13"
    },
    "2197": {
      "offset": [
        3157,
        3167
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2198": {
      "offset": [
        3157,
        3174
      ],
      "op": "EQ",
      "path": "13"
    },
    "2199": {
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x8B2"
    },
    "2202": {
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2203": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2205": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2206": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2212": {
      "op": "SHL"
    },
    "2213": {
      "offset": [
        3149,
        3200
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2214": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2215": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2217": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "ADD",
      "path": "13"
    },
    "2218": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "2221": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2222": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2BCD"
    },
    "2225": {
      "fn": "PWNDeed.makeOffer",
      "jump": "i",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2226": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2227": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6516,
        6535
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 15,
      "value": "0x8BB"
    },
    "2230": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6530,
        6534
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2231": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6516,
        6529
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x154D"
    },
    "2234": {
      "fn": "PWNDeed.makeOffer",
      "jump": "i",
      "offset": [
        6516,
        6535
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2235": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6516,
        6535
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2236": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6516,
        6540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2238": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6516,
        6540
      ],
      "op": "AND",
      "path": "13"
    },
    "2239": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6539,
        6540
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2241": {
      "branch": 118,
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6516,
        6540
      ],
      "op": "EQ",
      "path": "13"
    },
    "2242": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6508,
        6570
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x90D"
    },
    "2245": {
      "branch": 118,
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6508,
        6570
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2246": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6508,
        6570
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2248": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6508,
        6570
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2249": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2255": {
      "op": "SHL"
    },
    "2256": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6508,
        6570
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2257": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6508,
        6570
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2260": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6508,
        6570
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2262": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6508,
        6570
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2263": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6508,
        6570
      ],
      "op": "ADD",
      "path": "13"
    },
    "2264": {
      "op": "MSTORE"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2269": {
      "op": "DUP3"
    },
    "2270": {
      "op": "ADD"
    },
    "2271": {
      "op": "MSTORE"
    },
    "2272": {
      "op": "PUSH32",
      "value": "0x44656564206E6F7420616363657074696E67206F666665727300000000000000"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2307": {
      "op": "DUP3"
    },
    "2308": {
      "op": "ADD"
    },
    "2309": {
      "op": "MSTORE"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2312": {
      "op": "ADD"
    },
    "2313": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6508,
        6570
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "2316": {
      "op": "JUMP"
    },
    "2317": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6508,
        6570
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2318": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6632,
        6637
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x6"
    },
    "2320": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6632,
        6637
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2321": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6632,
        6637
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2322": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2324": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2325": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2328": {
      "op": "DUP9"
    },
    "2329": {
      "op": "SWAP1"
    },
    "2330": {
      "op": "SHL"
    },
    "2331": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2344": {
      "op": "NOT"
    },
    "2345": {
      "op": "AND"
    },
    "2346": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2348": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2349": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2350": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "ADD",
      "path": "13"
    },
    "2351": {
      "op": "SWAP2"
    },
    "2352": {
      "op": "SWAP1"
    },
    "2353": {
      "op": "SWAP2"
    },
    "2354": {
      "op": "MSTORE"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "2357": {
      "op": "DUP1"
    },
    "2358": {
      "op": "DUP4"
    },
    "2359": {
      "op": "ADD"
    },
    "2360": {
      "op": "DUP6"
    },
    "2361": {
      "op": "SWAP1"
    },
    "2362": {
      "op": "MSTORE"
    },
    "2363": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2364": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2365": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2366": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2367": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "SUB",
      "path": "13"
    },
    "2368": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2369": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2370": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "ADD",
      "path": "13"
    },
    "2371": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2372": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "2375": {
      "op": "SWAP1"
    },
    "2376": {
      "op": "SWAP3"
    },
    "2377": {
      "op": "ADD"
    },
    "2378": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2379": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2380": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6606,
        6638
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2381": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6596,
        6639
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2382": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6596,
        6639
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2383": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6596,
        6639
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2384": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6596,
        6639
      ],
      "op": "ADD",
      "path": "13"
    },
    "2385": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6596,
        6639
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2386": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6596,
        6639
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2389": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6649,
        6656
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 16,
      "value": "0x95D"
    },
    "2392": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6632,
        6637
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2393": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6649,
        6656
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2E5C"
    },
    "2396": {
      "fn": "PWNDeed.makeOffer",
      "jump": "i",
      "offset": [
        6649,
        6656
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2397": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6649,
        6656
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2398": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6649,
        6656
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2399": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6649,
        6656
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2400": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6649,
        6656
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2401": {
      "op": "POP"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6667,
        6686
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2405": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6689,
        6701
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2406": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6689,
        6701
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2407": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6689,
        6701
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2408": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6689,
        6695
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "2410": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6689,
        6701
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2412": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6689,
        6701
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2413": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6689,
        6701
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2414": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6689,
        6701
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2415": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6689,
        6701
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2417": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6689,
        6701
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2418": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6689,
        6701
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2419": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6689,
        6701
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2420": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6721
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 17,
      "value": "0x3"
    },
    "2422": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6721
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2423": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6721
      ],
      "op": "ADD",
      "path": "13"
    },
    "2424": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6750
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2425": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6750
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2432": {
      "op": "SHL"
    },
    "2433": {
      "op": "SUB"
    },
    "2434": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6750
      ],
      "op": "DUP14",
      "path": "13"
    },
    "2435": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6750
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2436": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6750
      ],
      "op": "AND",
      "path": "13"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2443": {
      "op": "SHL"
    },
    "2444": {
      "op": "SUB"
    },
    "2445": {
      "op": "NOT"
    },
    "2446": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6750
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2447": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6750
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2448": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6750
      ],
      "op": "AND",
      "path": "13"
    },
    "2449": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6750
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2450": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6750
      ],
      "op": "OR",
      "path": "13"
    },
    "2451": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6750
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2452": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6750
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2453": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6711,
        6750
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2454": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6760,
        6777
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 18,
      "value": "0x4"
    },
    "2456": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6760,
        6777
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2457": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6760,
        6777
      ],
      "op": "ADD",
      "path": "13"
    },
    "2458": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6760,
        6792
      ],
      "op": "DUP14",
      "path": "13"
    },
    "2459": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6760,
        6792
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2460": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6760,
        6792
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2463": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6802,
        6816
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 19
    },
    "2464": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6802,
        6816
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2465": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6802,
        6816
      ],
      "op": "ADD",
      "path": "13"
    },
    "2466": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6802,
        6828
      ],
      "op": "DUP12",
      "path": "13"
    },
    "2467": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6802,
        6828
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2468": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6802,
        6828
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2471": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6850
      ],
      "op": "DUP6",
      "path": "13",
      "statement": 20
    },
    "2472": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6850
      ],
      "op": "ADD",
      "path": "13"
    },
    "2473": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6860
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2474": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6860
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2475": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6860
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2476": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6860
      ],
      "op": "DUP15",
      "path": "13"
    },
    "2477": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6860
      ],
      "op": "AND",
      "path": "13"
    },
    "2478": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6860
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2479": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6860
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2480": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6860
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2481": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6860
      ],
      "op": "AND",
      "path": "13"
    },
    "2482": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6860
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2483": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6860
      ],
      "op": "OR",
      "path": "13"
    },
    "2484": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6860
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2485": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6860
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2486": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6838,
        6860
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2487": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6870,
        6886
      ],
      "op": "DUP11",
      "path": "13",
      "statement": 21
    },
    "2488": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6870,
        6886
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2489": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6870,
        6886
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2490": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6908
      ],
      "op": "DUP11",
      "path": "13",
      "statement": 22
    },
    "2491": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6908
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2492": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6908
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2493": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6902
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "2495": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6908
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2496": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6908
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2497": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6908
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2498": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6908
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2499": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6908
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2500": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6922
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "2502": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6922
      ],
      "op": "ADD",
      "path": "13"
    },
    "2503": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2504": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2505": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2506": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2507": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "ADD",
      "path": "13"
    },
    "2508": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2509": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2510": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2511": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2512": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "2513": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2514": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2515": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2516": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "ADD",
      "path": "13"
    },
    "2517": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2518": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2519": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6897,
        6933
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "2520": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6949,
        7019
      ],
      "op": "DUP3",
      "path": "13",
      "statement": 23
    },
    "2521": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6949,
        7019
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2522": {
      "op": "SWAP1"
    },
    "2523": {
      "op": "DUP2"
    },
    "2524": {
      "op": "MSTORE"
    },
    "2525": {
      "op": "SWAP3"
    },
    "2526": {
      "op": "DUP4"
    },
    "2527": {
      "op": "ADD"
    },
    "2528": {
      "op": "DUP11"
    },
    "2529": {
      "op": "SWAP1"
    },
    "2530": {
      "op": "MSTORE"
    },
    "2531": {
      "op": "SWAP1"
    },
    "2532": {
      "op": "DUP3"
    },
    "2533": {
      "op": "ADD"
    },
    "2534": {
      "op": "DUP7"
    },
    "2535": {
      "op": "SWAP1"
    },
    "2536": {
      "op": "MSTORE"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2539": {
      "op": "DUP3"
    },
    "2540": {
      "op": "ADD"
    },
    "2541": {
      "op": "DUP5"
    },
    "2542": {
      "op": "SWAP1"
    },
    "2543": {
      "op": "MSTORE"
    },
    "2544": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6689,
        6701
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2545": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6870,
        6886
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2546": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6870,
        6886
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2547": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6949,
        7019
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xAC3DC350FD8FE7A7B7C5B88BF344A2DF332C672B59D6DD43A0CD1794A7270E39"
    },
    "2580": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6949,
        7019
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2583": {
      "op": "ADD"
    },
    "2584": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6949,
        7019
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2586": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6949,
        7019
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2587": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6949,
        7019
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2588": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6949,
        7019
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2589": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6949,
        7019
      ],
      "op": "SUB",
      "path": "13"
    },
    "2590": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6949,
        7019
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2591": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6949,
        7019
      ],
      "op": "LOG3",
      "path": "13"
    },
    "2592": {
      "op": "POP"
    },
    "2593": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        7037,
        7041
      ],
      "op": "SWAP1",
      "path": "13",
      "statement": 24
    },
    "2594": {
      "op": "POP"
    },
    "2595": {
      "offset": [
        3210,
        3211
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2596": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "2597": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2598": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "POP",
      "path": "13"
    },
    "2599": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "POP",
      "path": "13"
    },
    "2600": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "POP",
      "path": "13"
    },
    "2601": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "POP",
      "path": "13"
    },
    "2602": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        6303,
        7048
      ],
      "op": "POP",
      "path": "13"
    },
    "2603": {
      "fn": "PWNDeed.makeOffer",
      "jump": "o",
      "offset": [
        6303,
        7048
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2604": {
      "offset": [
        2047,
        2085
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2605": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "2607": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2609": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2610": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2611": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2612": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2614": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2615": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2616": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2617": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2619": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2620": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2621": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2622": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "2623": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2624": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2625": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2626": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2627": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2629": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2630": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "ADD",
      "path": "13"
    },
    "2631": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2632": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2633": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2634": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2636": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2637": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "ADD",
      "path": "13"
    },
    "2638": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2639": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2646": {
      "op": "SHL"
    },
    "2647": {
      "op": "SUB"
    },
    "2648": {
      "offset": [
        2047,
        2085
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2649": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2650": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "AND",
      "path": "13"
    },
    "2651": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP8",
      "path": "13"
    },
    "2652": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2653": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2655": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2656": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP6",
      "path": "13"
    },
    "2657": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "AND",
      "path": "13"
    },
    "2658": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "2659": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "2662": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2663": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DIV",
      "path": "13"
    },
    "2664": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2665": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2666": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "AND",
      "path": "13"
    },
    "2667": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2672": {
      "op": "SHL"
    },
    "2673": {
      "offset": [
        2047,
        2085
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2674": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DIV",
      "path": "13"
    },
    "2675": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "2680": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "AND",
      "path": "13"
    },
    "2681": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "2686": {
      "op": "SHL"
    },
    "2687": {
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2688": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "2689": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DIV",
      "path": "13"
    },
    "2690": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH5",
      "path": "13",
      "value": "0xFFFFFFFFFF"
    },
    "2696": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "AND",
      "path": "13"
    },
    "2697": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "2698": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "2699": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2700": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "2701": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2702": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP5",
      "path": "13"
    },
    "2703": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "ADD",
      "path": "13"
    },
    "2704": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2709": {
      "op": "SHL"
    },
    "2710": {
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2711": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2712": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DIV",
      "path": "13"
    },
    "2713": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "AND",
      "path": "13"
    },
    "2714": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2716": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2717": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "GT",
      "path": "13"
    },
    "2718": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2719": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAB8"
    },
    "2722": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2723": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2730": {
      "op": "SHL"
    },
    "2731": {
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2733": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2734": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x21"
    },
    "2736": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2738": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2739": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "2741": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2743": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2744": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2745": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2747": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2748": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "GT",
      "path": "13"
    },
    "2749": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2750": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAD7"
    },
    "2753": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2754": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2761": {
      "op": "SHL"
    },
    "2762": {
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2764": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2765": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x21"
    },
    "2767": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2769": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2770": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "2772": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2774": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2775": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2776": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2777": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2778": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2780": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2781": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "ADD",
      "path": "13"
    },
    "2782": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2783": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "2785": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2786": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "ADD",
      "path": "13"
    },
    "2787": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2788": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "2790": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2791": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2792": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "ADD",
      "path": "13"
    },
    "2793": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2794": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2796": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2797": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2798": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "ADD",
      "path": "13"
    },
    "2799": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2800": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2802": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2803": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2804": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "ADD",
      "path": "13"
    },
    "2805": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2806": {
      "fn": "PWNDeed.makeOffer",
      "offset": [
        2047,
        2085
      ],
      "op": "DUP7",
      "path": "13"
    },
    "2807": {
      "fn": "PWNDeed.makeOffer",
      "jump": "o",
      "offset": [
        2047,
        2085
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2808": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5470,
        5798
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2809": {
      "offset": [
        3171,
        3174
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2811": {
      "fn": "PWNDeed.revoke",
      "offset": [
        3171,
        3174
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "op": "SUB"
    },
    "2820": {
      "offset": [
        3171,
        3174
      ],
      "op": "AND",
      "path": "13"
    },
    "2821": {
      "offset": [
        3157,
        3167
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2822": {
      "offset": [
        3157,
        3174
      ],
      "op": "EQ",
      "path": "13"
    },
    "2823": {
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB22"
    },
    "2826": {
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2827": {
      "fn": "PWNDeed.revoke",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2829": {
      "fn": "PWNDeed.revoke",
      "offset": [
        3149,
        3200
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2830": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2836": {
      "op": "SHL"
    },
    "2837": {
      "offset": [
        3149,
        3200
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2838": {
      "fn": "PWNDeed.revoke",
      "offset": [
        3149,
        3200
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2839": {
      "fn": "PWNDeed.revoke",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2841": {
      "fn": "PWNDeed.revoke",
      "offset": [
        3149,
        3200
      ],
      "op": "ADD",
      "path": "13"
    },
    "2842": {
      "fn": "PWNDeed.revoke",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "2845": {
      "fn": "PWNDeed.revoke",
      "offset": [
        3149,
        3200
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2846": {
      "fn": "PWNDeed.revoke",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2BCD"
    },
    "2849": {
      "fn": "PWNDeed.revoke",
      "jump": "i",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2850": {
      "fn": "PWNDeed.revoke",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2851": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5573,
        5596
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 25,
      "value": "0xB2C"
    },
    "2854": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5583,
        5589
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2855": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5591,
        5595
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2856": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5573,
        5582
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x644"
    },
    "2859": {
      "fn": "PWNDeed.revoke",
      "jump": "i",
      "offset": [
        5573,
        5596
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2860": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5573,
        5596
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2861": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5600,
        5601
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2863": {
      "branch": 119,
      "fn": "PWNDeed.revoke",
      "offset": [
        5573,
        5601
      ],
      "op": "EQ",
      "path": "13"
    },
    "2864": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5565,
        5643
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB4B"
    },
    "2867": {
      "branch": 119,
      "fn": "PWNDeed.revoke",
      "offset": [
        5565,
        5643
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2868": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5565,
        5643
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2870": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5565,
        5643
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2871": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2877": {
      "op": "SHL"
    },
    "2878": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5565,
        5643
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2879": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5565,
        5643
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2880": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5565,
        5643
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2882": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5565,
        5643
      ],
      "op": "ADD",
      "path": "13"
    },
    "2883": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5565,
        5643
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "2886": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5565,
        5643
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2887": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5565,
        5643
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2CC0"
    },
    "2890": {
      "fn": "PWNDeed.revoke",
      "jump": "i",
      "offset": [
        5565,
        5643
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2891": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5565,
        5643
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2892": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5661,
        5680
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 26,
      "value": "0xB54"
    },
    "2895": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5675,
        5679
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2896": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5661,
        5674
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x154D"
    },
    "2899": {
      "fn": "PWNDeed.revoke",
      "jump": "i",
      "offset": [
        5661,
        5680
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2900": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5661,
        5680
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2901": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5661,
        5685
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "2903": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5661,
        5685
      ],
      "op": "AND",
      "path": "13"
    },
    "2904": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5684,
        5685
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "2906": {
      "branch": 120,
      "fn": "PWNDeed.revoke",
      "offset": [
        5661,
        5685
      ],
      "op": "EQ",
      "path": "13"
    },
    "2907": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5653,
        5725
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBB2"
    },
    "2910": {
      "branch": 120,
      "fn": "PWNDeed.revoke",
      "offset": [
        5653,
        5725
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2911": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5653,
        5725
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "2913": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5653,
        5725
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "2914": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2920": {
      "op": "SHL"
    },
    "2921": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5653,
        5725
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2922": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5653,
        5725
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2925": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5653,
        5725
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2927": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5653,
        5725
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2928": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5653,
        5725
      ],
      "op": "ADD",
      "path": "13"
    },
    "2929": {
      "op": "MSTORE"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2934": {
      "op": "DUP3"
    },
    "2935": {
      "op": "ADD"
    },
    "2936": {
      "op": "MSTORE"
    },
    "2937": {
      "op": "PUSH32",
      "value": "0x446565642063616E2774206265207265766F6B65642061742074686973207374"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2972": {
      "op": "DUP3"
    },
    "2973": {
      "op": "ADD"
    },
    "2974": {
      "op": "MSTORE"
    },
    "2975": {
      "op": "PUSH3",
      "value": "0x616765"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2981": {
      "op": "SHL"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2984": {
      "op": "DUP3"
    },
    "2985": {
      "op": "ADD"
    },
    "2986": {
      "op": "MSTORE"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2989": {
      "op": "ADD"
    },
    "2990": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5653,
        5725
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "2993": {
      "op": "JUMP"
    },
    "2994": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5653,
        5725
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2995": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5757,
        5758
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 27,
      "value": "0x0"
    },
    "2997": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5747
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2998": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5747
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2999": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5747
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3000": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5741
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "3002": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5747
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3004": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5747
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3005": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5747
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3007": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5747
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3008": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5747
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3009": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5747
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3010": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5747
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3011": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5758
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3012": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5758
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3015": {
      "op": "NOT"
    },
    "3016": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5758
      ],
      "op": "AND",
      "path": "13"
    },
    "3017": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5758
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3018": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5736,
        5758
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "3019": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5774,
        5791
      ],
      "op": "MLOAD",
      "path": "13",
      "statement": 28
    },
    "3020": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5774,
        5791
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x5E7D27D7357DA2BCE071CB0105A9736B8264B9C259F97215D7E2F7B502881DD8"
    },
    "3053": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5774,
        5791
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3054": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5774,
        5791
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBFA"
    },
    "3057": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5774,
        5791
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3058": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5742,
        5746
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3059": {
      "op": "DUP2"
    },
    "3060": {
      "op": "MSTORE"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3063": {
      "op": "ADD"
    },
    "3064": {
      "op": "SWAP1"
    },
    "3065": {
      "op": "JUMP"
    },
    "3066": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5774,
        5791
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3067": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5774,
        5791
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3069": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5774,
        5791
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3070": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5774,
        5791
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3071": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5774,
        5791
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3072": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5774,
        5791
      ],
      "op": "SUB",
      "path": "13"
    },
    "3073": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5774,
        5791
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3074": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5774,
        5791
      ],
      "op": "LOG1",
      "path": "13"
    },
    "3075": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5470,
        5798
      ],
      "op": "POP",
      "path": "13"
    },
    "3076": {
      "fn": "PWNDeed.revoke",
      "offset": [
        5470,
        5798
      ],
      "op": "POP",
      "path": "13"
    },
    "3077": {
      "fn": "PWNDeed.revoke",
      "jump": "o",
      "offset": [
        5470,
        5798
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3078": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3085": {
      "op": "SHL"
    },
    "3086": {
      "op": "SUB"
    },
    "3087": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4290
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 29
    },
    "3088": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4290
      ],
      "op": "AND",
      "path": "1"
    },
    "3089": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 30
    },
    "3090": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4290
      ],
      "op": "EQ",
      "path": "1"
    },
    "3091": {
      "branch": 134,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4290
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3092": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4330
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC22"
    },
    "3095": {
      "branch": 134,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4330
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3096": {
      "op": "POP"
    },
    "3097": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4294,
        4330
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC22"
    },
    "3100": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4311,
        4315
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3101": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3102": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A5"
    },
    "3105": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3106": {
      "branch": 135,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4294,
        4330
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3107": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC89"
    },
    "3110": {
      "branch": 135,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3111": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3113": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3114": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3120": {
      "op": "SHL"
    },
    "3121": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3122": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3125": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3127": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3128": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "ADD",
      "path": "1"
    },
    "3129": {
      "op": "MSTORE"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3134": {
      "op": "DUP3"
    },
    "3135": {
      "op": "ADD"
    },
    "3136": {
      "op": "MSTORE"
    },
    "3137": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3172": {
      "op": "DUP3"
    },
    "3173": {
      "op": "ADD"
    },
    "3174": {
      "op": "MSTORE"
    },
    "3175": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "3196": {
      "op": "SHL"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3199": {
      "op": "DUP3"
    },
    "3200": {
      "op": "ADD"
    },
    "3201": {
      "op": "MSTORE"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3204": {
      "op": "ADD"
    },
    "3205": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "3208": {
      "op": "JUMP"
    },
    "3209": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3210": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4416,
        4468
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 31,
      "value": "0xC96"
    },
    "3213": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4439,
        4443
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3214": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4445,
        4447
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3215": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4449,
        4452
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3216": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4454,
        4461
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3217": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4463,
        4467
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3218": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4416,
        4438
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19DB"
    },
    "3221": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4416,
        4468
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3222": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4416,
        4468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3223": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "POP",
      "path": "1"
    },
    "3224": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "POP",
      "path": "1"
    },
    "3225": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "POP",
      "path": "1"
    },
    "3226": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "POP",
      "path": "1"
    },
    "3227": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "POP",
      "path": "1"
    },
    "3228": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3229": {
      "offset": [
        2131,
        2171
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3230": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "3232": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3234": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3235": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3236": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3237": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3239": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3240": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3241": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3242": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3244": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3245": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3246": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3247": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3248": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3249": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3250": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3252": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3253": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "ADD",
      "path": "13"
    },
    "3254": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3255": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "3257": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3258": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3259": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "ADD",
      "path": "13"
    },
    "3260": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3261": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP7",
      "path": "13"
    },
    "3262": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3263": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "3265": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3266": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "ADD",
      "path": "13"
    },
    "3267": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3268": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "3269": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3270": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "3272": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP6",
      "path": "13"
    },
    "3273": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "ADD",
      "path": "13"
    },
    "3274": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3275": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3282": {
      "op": "SHL"
    },
    "3283": {
      "op": "SUB"
    },
    "3284": {
      "offset": [
        2131,
        2171
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3285": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3286": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "AND",
      "path": "13"
    },
    "3287": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP11",
      "path": "13"
    },
    "3288": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3289": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "3290": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP9",
      "path": "13"
    },
    "3291": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "3292": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP8",
      "path": "13"
    },
    "3293": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "3294": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3295": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3296": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "AND",
      "path": "13"
    },
    "3297": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "3298": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "3299": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3300": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3301": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3302": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3303": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "ADD",
      "path": "13"
    },
    "3304": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3309": {
      "op": "SHL"
    },
    "3310": {
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3311": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DIV",
      "path": "13"
    },
    "3312": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "3314": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "AND",
      "path": "13"
    },
    "3315": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3316": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3317": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "GT",
      "path": "13"
    },
    "3318": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3319": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD10"
    },
    "3322": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3323": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3330": {
      "op": "SHL"
    },
    "3331": {
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3333": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3334": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x21"
    },
    "3336": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3338": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3339": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "3341": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3343": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3344": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3345": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "3347": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3348": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "GT",
      "path": "13"
    },
    "3349": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "3350": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xD2F"
    },
    "3353": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3354": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3361": {
      "op": "SHL"
    },
    "3362": {
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3364": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3365": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x21"
    },
    "3367": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3369": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3370": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "3372": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3374": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "REVERT",
      "path": "13"
    },
    "3375": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3376": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3377": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3378": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3380": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "ADD",
      "path": "13"
    },
    "3381": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3383": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3384": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "ADD",
      "path": "13"
    },
    "3385": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3386": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3387": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3388": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3390": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "ADD",
      "path": "13"
    },
    "3391": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "3393": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3394": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "ADD",
      "path": "13"
    },
    "3395": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3396": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3397": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3398": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "POP",
      "path": "13"
    },
    "3399": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "POP",
      "path": "13"
    },
    "3400": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3401": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "POP",
      "path": "13"
    },
    "3402": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        2131,
        2171
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3403": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        2131,
        2171
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3404": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3405": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2706,
        2722
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3407": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2765,
        2768
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 32
    },
    "3408": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2765,
        2775
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3409": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2746,
        2754
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3410": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2746,
        2761
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3411": {
      "branch": 136,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2746,
        2775
      ],
      "op": "EQ",
      "path": "1"
    },
    "3412": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDB1"
    },
    "3415": {
      "branch": 136,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3416": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3418": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3425": {
      "op": "SHL"
    },
    "3426": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3427": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3430": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3432": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3433": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "ADD",
      "path": "1"
    },
    "3434": {
      "op": "MSTORE"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3439": {
      "op": "DUP3"
    },
    "3440": {
      "op": "ADD"
    },
    "3441": {
      "op": "MSTORE"
    },
    "3442": {
      "op": "PUSH32",
      "value": "0x455243313135353A206163636F756E747320616E6420696473206C656E677468"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3477": {
      "op": "DUP3"
    },
    "3478": {
      "op": "ADD"
    },
    "3479": {
      "op": "MSTORE"
    },
    "3480": {
      "op": "PUSH9",
      "value": "0x40DAD2E6DAC2E8C6D"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "3492": {
      "op": "SHL"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3495": {
      "op": "DUP3"
    },
    "3496": {
      "op": "ADD"
    },
    "3497": {
      "op": "MSTORE"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3500": {
      "op": "ADD"
    },
    "3501": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "3504": {
      "op": "JUMP"
    },
    "3505": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3506": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2832,
        2862
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3508": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2879,
        2887
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3509": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2879,
        2894
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3510": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3519": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3520": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "GT",
      "path": "1"
    },
    "3521": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3522": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDDB"
    },
    "3525": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3526": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3533": {
      "op": "SHL"
    },
    "3534": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3536": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3537": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x41"
    },
    "3539": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3541": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3542": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3544": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3546": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3547": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3548": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3550": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3551": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3552": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3553": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3554": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3555": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3556": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3558": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MUL",
      "path": "1"
    },
    "3559": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3561": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ADD",
      "path": "1"
    },
    "3562": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3563": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ADD",
      "path": "1"
    },
    "3564": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3566": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3567": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3568": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3569": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE04"
    },
    "3572": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3573": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3574": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3576": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ADD",
      "path": "1"
    },
    "3577": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3579": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3580": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MUL",
      "path": "1"
    },
    "3581": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3582": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "3583": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3584": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "CALLDATACOPY",
      "path": "1"
    },
    "3585": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ADD",
      "path": "1"
    },
    "3586": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3587": {
      "op": "POP"
    },
    "3588": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3589": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "POP",
      "path": "1"
    },
    "3590": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2832,
        2895
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3591": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2832,
        2895
      ],
      "op": "POP",
      "path": "1"
    },
    "3592": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2911,
        2920
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3594": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3595": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2930,
        2938
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3596": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2930,
        2945
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3597": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2926,
        2927
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3598": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2926,
        2945
      ],
      "op": "LT",
      "path": "1"
    },
    "3599": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3600": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEA6"
    },
    "3603": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3604": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2985,
        3015
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 33,
      "value": "0xE6B"
    },
    "3607": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3003
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3608": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3004,
        3005
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3609": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3610": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3611": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3612": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "LT",
      "path": "1"
    },
    "3613": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE36"
    },
    "3616": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3617": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3624": {
      "op": "SHL"
    },
    "3625": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3627": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3628": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "3630": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3632": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3633": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3635": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3637": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3638": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3639": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3641": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "MUL",
      "path": "1"
    },
    "3642": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3644": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "ADD",
      "path": "1"
    },
    "3645": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "ADD",
      "path": "1"
    },
    "3646": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3647": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3011
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3648": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3012,
        3013
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3649": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3650": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3651": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3652": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "LT",
      "path": "1"
    },
    "3653": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE5E"
    },
    "3656": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3657": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3664": {
      "op": "SHL"
    },
    "3665": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3667": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3668": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "3670": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3672": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3673": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3675": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3677": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3678": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3679": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3681": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "MUL",
      "path": "1"
    },
    "3682": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3684": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "ADD",
      "path": "1"
    },
    "3685": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "ADD",
      "path": "1"
    },
    "3686": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3687": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2985,
        2994
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x644"
    },
    "3690": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2985,
        3015
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3691": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2985,
        3015
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3692": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2979
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3693": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2980,
        2981
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3694": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3695": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3696": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3697": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "LT",
      "path": "1"
    },
    "3698": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE8B"
    },
    "3701": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3702": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3709": {
      "op": "SHL"
    },
    "3710": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3712": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3713": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "3715": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3717": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3718": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3720": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3722": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3723": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3724": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3726": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3727": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3728": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "MUL",
      "path": "1"
    },
    "3729": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3730": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3731": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3732": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "ADD",
      "path": "1"
    },
    "3733": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "ADD",
      "path": "1"
    },
    "3734": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        3015
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3735": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 34,
      "value": "0xE9F"
    },
    "3738": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3739": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E5C"
    },
    "3742": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2947,
        2950
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3743": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3744": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3745": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "POP",
      "path": "1"
    },
    "3746": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE0A"
    },
    "3749": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3750": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3751": {
      "op": "POP"
    },
    "3752": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3043,
        3056
      ],
      "op": "SWAP4",
      "path": "1",
      "statement": 35
    },
    "3753": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3754": {
      "op": "POP"
    },
    "3755": {
      "op": "POP"
    },
    "3756": {
      "op": "POP"
    },
    "3757": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3758": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8298,
        8864
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3759": {
      "offset": [
        3171,
        3174
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3761": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        3171,
        3174
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3768": {
      "op": "SHL"
    },
    "3769": {
      "op": "SUB"
    },
    "3770": {
      "offset": [
        3171,
        3174
      ],
      "op": "AND",
      "path": "13"
    },
    "3771": {
      "offset": [
        3157,
        3167
      ],
      "op": "CALLER",
      "path": "13"
    },
    "3772": {
      "offset": [
        3157,
        3174
      ],
      "op": "EQ",
      "path": "13"
    },
    "3773": {
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xED8"
    },
    "3776": {
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3777": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3779": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3780": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3786": {
      "op": "SHL"
    },
    "3787": {
      "offset": [
        3149,
        3200
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3788": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3789": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3791": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "ADD",
      "path": "13"
    },
    "3792": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "3795": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3796": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2BCD"
    },
    "3799": {
      "fn": "PWNDeed.acceptOffer",
      "jump": "i",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3800": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3801": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8430,
        8453
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 36,
      "value": "0xEE2"
    },
    "3804": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8440,
        8446
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3805": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8448,
        8452
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3806": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8430,
        8439
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x644"
    },
    "3809": {
      "fn": "PWNDeed.acceptOffer",
      "jump": "i",
      "offset": [
        8430,
        8453
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3810": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8430,
        8453
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3811": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8457,
        8458
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3813": {
      "branch": 121,
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8430,
        8458
      ],
      "op": "EQ",
      "path": "13"
    },
    "3814": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8422,
        8500
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF01"
    },
    "3817": {
      "branch": 121,
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8422,
        8500
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3818": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8422,
        8500
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3820": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8422,
        8500
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3821": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3827": {
      "op": "SHL"
    },
    "3828": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8422,
        8500
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3829": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8422,
        8500
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3830": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8422,
        8500
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3832": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8422,
        8500
      ],
      "op": "ADD",
      "path": "13"
    },
    "3833": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8422,
        8500
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "3836": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8422,
        8500
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3837": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8422,
        8500
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2CC0"
    },
    "3840": {
      "fn": "PWNDeed.acceptOffer",
      "jump": "i",
      "offset": [
        8422,
        8500
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3841": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8422,
        8500
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3842": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8518,
        8537
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 37,
      "value": "0xF0A"
    },
    "3845": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8532,
        8536
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3846": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8518,
        8531
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x154D"
    },
    "3849": {
      "fn": "PWNDeed.acceptOffer",
      "jump": "i",
      "offset": [
        8518,
        8537
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3850": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8518,
        8537
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3851": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8518,
        8542
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "3853": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8518,
        8542
      ],
      "op": "AND",
      "path": "13"
    },
    "3854": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8541,
        8542
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "3856": {
      "branch": 122,
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8518,
        8542
      ],
      "op": "EQ",
      "path": "13"
    },
    "3857": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8510,
        8576
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xF5C"
    },
    "3860": {
      "branch": 122,
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8510,
        8576
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3861": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8510,
        8576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3863": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8510,
        8576
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "3864": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3868": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3870": {
      "op": "SHL"
    },
    "3871": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8510,
        8576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3872": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8510,
        8576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3875": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8510,
        8576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "3877": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8510,
        8576
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3878": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8510,
        8576
      ],
      "op": "ADD",
      "path": "13"
    },
    "3879": {
      "op": "MSTORE"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3884": {
      "op": "DUP3"
    },
    "3885": {
      "op": "ADD"
    },
    "3886": {
      "op": "MSTORE"
    },
    "3887": {
      "op": "PUSH32",
      "value": "0x446565642063616E277420616363657074206D6F7265206F6666657273000000"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3922": {
      "op": "DUP3"
    },
    "3923": {
      "op": "ADD"
    },
    "3924": {
      "op": "MSTORE"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3927": {
      "op": "ADD"
    },
    "3928": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8510,
        8576
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "3931": {
      "op": "JUMP"
    },
    "3932": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8510,
        8576
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3933": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8587,
        8604
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3935": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8607,
        8618
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3936": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8607,
        8618
      ],
      "op": "DUP2",
      "path": "13"
    },
    "3937": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8607,
        8618
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3938": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8607,
        8612
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "3940": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8607,
        8618
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "3942": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8607,
        8618
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "3943": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8607,
        8618
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "3945": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8607,
        8618
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3946": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8607,
        8618
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "3947": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8628,
        8650
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 38
    },
    "3948": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8628,
        8650
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "3949": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3956": {
      "op": "SHL"
    },
    "3957": {
      "op": "SUB"
    },
    "3958": {
      "op": "NOT"
    },
    "3959": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8628,
        8650
      ],
      "op": "AND",
      "path": "13"
    },
    "3960": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8628,
        8650
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "3963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3969": {
      "op": "SHL"
    },
    "3970": {
      "op": "SUB"
    },
    "3971": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8628,
        8650
      ],
      "op": "DUP5",
      "path": "13"
    },
    "3972": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8628,
        8650
      ],
      "op": "AND",
      "path": "13"
    },
    "3973": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8628,
        8650
      ],
      "op": "MUL",
      "path": "13"
    },
    "3974": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8628,
        8650
      ],
      "op": "OR",
      "path": "13"
    },
    "3975": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8628,
        8650
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3976": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8628,
        8650
      ],
      "op": "DUP3",
      "path": "13"
    },
    "3977": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8628,
        8650
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "3978": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8678,
        8717
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 39,
      "value": "0xFA0"
    },
    "3981": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8678,
        8717
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3986": {
      "op": "SHL"
    },
    "3987": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8704,
        8717
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3988": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8704,
        8717
      ],
      "op": "DIV",
      "path": "13"
    },
    "3989": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8704,
        8717
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "3994": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8704,
        8717
      ],
      "op": "AND",
      "path": "13"
    },
    "3995": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8685,
        8700
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "3996": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8678,
        8717
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2DCB"
    },
    "3999": {
      "fn": "PWNDeed.acceptOffer",
      "jump": "i",
      "offset": [
        8678,
        8717
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4000": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8678,
        8717
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4001": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8660,
        8717
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4002": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8660,
        8717
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4003": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8660,
        8717
      ],
      "op": "PUSH5",
      "path": "13",
      "value": "0xFFFFFFFFFF"
    },
    "4009": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8660,
        8717
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4010": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8660,
        8717
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4011": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8660,
        8717
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4012": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8660,
        8717
      ],
      "op": "AND",
      "path": "13"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "4017": {
      "op": "SHL"
    },
    "4018": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8660,
        8717
      ],
      "op": "MUL",
      "path": "13"
    },
    "4019": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "4027": {
      "op": "SHL"
    },
    "4028": {
      "op": "NOT"
    },
    "4029": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8660,
        8717
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4030": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8660,
        8717
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4031": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8660,
        8717
      ],
      "op": "AND",
      "path": "13"
    },
    "4032": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8660,
        8717
      ],
      "op": "OR",
      "path": "13"
    },
    "4033": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8660,
        8717
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4034": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8660,
        8717
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "4035": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8727,
        8745
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 40,
      "value": "0x4"
    },
    "4037": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8727,
        8745
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4038": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8727,
        8745
      ],
      "op": "ADD",
      "path": "13"
    },
    "4039": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8727,
        8754
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4040": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8727,
        8754
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4041": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8727,
        8754
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "4042": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8764,
        8789
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 41,
      "value": "0xFD7"
    },
    "4045": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8771,
        8789
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "4047": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8771,
        8789
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4048": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8771,
        8789
      ],
      "op": "ADD",
      "path": "13"
    },
    "4049": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8660,
        8675
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4051": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8764,
        8789
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2349"
    },
    "4054": {
      "fn": "PWNDeed.acceptOffer",
      "jump": "i",
      "offset": [
        8764,
        8789
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4055": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8764,
        8789
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4056": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8799,
        8814
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 42
    },
    "4057": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8799,
        8814
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4060": {
      "op": "NOT"
    },
    "4061": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8799,
        8814
      ],
      "op": "AND",
      "path": "13"
    },
    "4062": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8813,
        8814
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "4064": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8799,
        8814
      ],
      "op": "OR",
      "path": "13"
    },
    "4065": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8799,
        8814
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4066": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8799,
        8814
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "4067": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8830,
        8857
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 43,
      "value": "0x40"
    },
    "4069": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8830,
        8857
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4070": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8830,
        8857
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4071": {
      "op": "DUP6"
    },
    "4072": {
      "op": "DUP2"
    },
    "4073": {
      "op": "MSTORE"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4076": {
      "op": "DUP2"
    },
    "4077": {
      "op": "ADD"
    },
    "4078": {
      "op": "DUP6"
    },
    "4079": {
      "op": "SWAP1"
    },
    "4080": {
      "op": "MSTORE"
    },
    "4081": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8830,
        8857
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x44966D4E56D70077531879040894AA85057C3BA7618964BBE117AC526A5BC94B"
    },
    "4114": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8830,
        8857
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4115": {
      "op": "ADD"
    },
    "4116": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8830,
        8857
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4118": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8830,
        8857
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4119": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8830,
        8857
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4120": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8830,
        8857
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4121": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8830,
        8857
      ],
      "op": "SUB",
      "path": "13"
    },
    "4122": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8830,
        8857
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4123": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8830,
        8857
      ],
      "op": "LOG1",
      "path": "13"
    },
    "4124": {
      "offset": [
        3210,
        3211
      ],
      "op": "POP",
      "path": "13"
    },
    "4125": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8298,
        8864
      ],
      "op": "POP",
      "path": "13"
    },
    "4126": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8298,
        8864
      ],
      "op": "POP",
      "path": "13"
    },
    "4127": {
      "fn": "PWNDeed.acceptOffer",
      "offset": [
        8298,
        8864
      ],
      "op": "POP",
      "path": "13"
    },
    "4128": {
      "fn": "PWNDeed.acceptOffer",
      "jump": "o",
      "offset": [
        8298,
        8864
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4129": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4130": {
      "offset": [
        3171,
        3174
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4132": {
      "fn": "PWNDeed.create",
      "offset": [
        3171,
        3174
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4133": {
      "fn": "PWNDeed.create",
      "offset": [
        4811,
        4818
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4135": {
      "fn": "PWNDeed.create",
      "offset": [
        4811,
        4818
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4142": {
      "op": "SHL"
    },
    "4143": {
      "op": "SUB"
    },
    "4144": {
      "offset": [
        3171,
        3174
      ],
      "op": "AND",
      "path": "13"
    },
    "4145": {
      "offset": [
        3157,
        3167
      ],
      "op": "CALLER",
      "path": "13"
    },
    "4146": {
      "offset": [
        3157,
        3174
      ],
      "op": "EQ",
      "path": "13"
    },
    "4147": {
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x104E"
    },
    "4150": {
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4151": {
      "fn": "PWNDeed.create",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4153": {
      "fn": "PWNDeed.create",
      "offset": [
        3149,
        3200
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4160": {
      "op": "SHL"
    },
    "4161": {
      "offset": [
        3149,
        3200
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4162": {
      "fn": "PWNDeed.create",
      "offset": [
        3149,
        3200
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4163": {
      "fn": "PWNDeed.create",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4165": {
      "fn": "PWNDeed.create",
      "offset": [
        3149,
        3200
      ],
      "op": "ADD",
      "path": "13"
    },
    "4166": {
      "fn": "PWNDeed.create",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "4169": {
      "fn": "PWNDeed.create",
      "offset": [
        3149,
        3200
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4170": {
      "fn": "PWNDeed.create",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2BCD"
    },
    "4173": {
      "fn": "PWNDeed.create",
      "jump": "i",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4174": {
      "fn": "PWNDeed.create",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4175": {
      "fn": "PWNDeed.create",
      "offset": [
        4830,
        4832
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 44,
      "value": "0x5"
    },
    "4177": {
      "fn": "PWNDeed.create",
      "offset": [
        4830,
        4834
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4178": {
      "fn": "PWNDeed.create",
      "offset": [
        4830,
        4834
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4179": {
      "fn": "PWNDeed.create",
      "offset": [
        4830,
        4834
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4180": {
      "fn": "PWNDeed.create",
      "offset": [
        4830,
        4832
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4182": {
      "fn": "PWNDeed.create",
      "offset": [
        4830,
        4834
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x105E"
    },
    "4185": {
      "fn": "PWNDeed.create",
      "offset": [
        4830,
        4834
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4186": {
      "fn": "PWNDeed.create",
      "offset": [
        4830,
        4834
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2E5C"
    },
    "4189": {
      "fn": "PWNDeed.create",
      "jump": "i",
      "offset": [
        4830,
        4834
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4190": {
      "fn": "PWNDeed.create",
      "offset": [
        4830,
        4834
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4191": {
      "fn": "PWNDeed.create",
      "offset": [
        4830,
        4834
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4192": {
      "fn": "PWNDeed.create",
      "offset": [
        4830,
        4834
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4193": {
      "fn": "PWNDeed.create",
      "offset": [
        4830,
        4834
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "4194": {
      "op": "POP"
    },
    "4195": {
      "op": "POP"
    },
    "4196": {
      "fn": "PWNDeed.create",
      "offset": [
        4871,
        4873
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "4198": {
      "fn": "PWNDeed.create",
      "offset": [
        4871,
        4873
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4199": {
      "fn": "PWNDeed.create",
      "offset": [
        4845,
        4862
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4201": {
      "fn": "PWNDeed.create",
      "offset": [
        4865,
        4874
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4202": {
      "fn": "PWNDeed.create",
      "offset": [
        4865,
        4874
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4203": {
      "fn": "PWNDeed.create",
      "offset": [
        4865,
        4874
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4204": {
      "fn": "PWNDeed.create",
      "offset": [
        4865,
        4870
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "4206": {
      "fn": "PWNDeed.create",
      "offset": [
        4865,
        4874
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4208": {
      "fn": "PWNDeed.create",
      "offset": [
        4865,
        4874
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4209": {
      "fn": "PWNDeed.create",
      "offset": [
        4865,
        4874
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4211": {
      "fn": "PWNDeed.create",
      "offset": [
        4865,
        4874
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4212": {
      "fn": "PWNDeed.create",
      "offset": [
        4865,
        4874
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "4213": {
      "fn": "PWNDeed.create",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 45
    },
    "4214": {
      "fn": "PWNDeed.create",
      "offset": [
        4884,
        4909
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4215": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4222": {
      "op": "SHL"
    },
    "4223": {
      "op": "NOT"
    },
    "4224": {
      "fn": "PWNDeed.create",
      "offset": [
        4884,
        4909
      ],
      "op": "AND",
      "path": "13"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4229": {
      "op": "SHL"
    },
    "4230": {
      "fn": "PWNDeed.create",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xFFFFFFFF"
    },
    "4235": {
      "fn": "PWNDeed.create",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP9",
      "path": "13"
    },
    "4236": {
      "fn": "PWNDeed.create",
      "offset": [
        4884,
        4909
      ],
      "op": "AND",
      "path": "13"
    },
    "4237": {
      "fn": "PWNDeed.create",
      "offset": [
        4884,
        4909
      ],
      "op": "MUL",
      "path": "13"
    },
    "4238": {
      "fn": "PWNDeed.create",
      "offset": [
        4884,
        4909
      ],
      "op": "OR",
      "path": "13"
    },
    "4239": {
      "fn": "PWNDeed.create",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4240": {
      "fn": "PWNDeed.create",
      "offset": [
        4884,
        4909
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4243": {
      "fn": "PWNDeed.create",
      "offset": [
        4919,
        4934
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 46
    },
    "4244": {
      "fn": "PWNDeed.create",
      "offset": [
        4919,
        4934
      ],
      "op": "ADD",
      "path": "13"
    },
    "4245": {
      "fn": "PWNDeed.create",
      "offset": [
        4919,
        4963
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4246": {
      "fn": "PWNDeed.create",
      "offset": [
        4919,
        4963
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4253": {
      "op": "SHL"
    },
    "4254": {
      "op": "SUB"
    },
    "4255": {
      "op": "NOT"
    },
    "4256": {
      "fn": "PWNDeed.create",
      "offset": [
        4919,
        4963
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4257": {
      "fn": "PWNDeed.create",
      "offset": [
        4919,
        4963
      ],
      "op": "AND",
      "path": "13"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4264": {
      "op": "SHL"
    },
    "4265": {
      "op": "SUB"
    },
    "4266": {
      "fn": "PWNDeed.create",
      "offset": [
        4919,
        4963
      ],
      "op": "DUP12",
      "path": "13"
    },
    "4267": {
      "fn": "PWNDeed.create",
      "offset": [
        4919,
        4963
      ],
      "op": "AND",
      "path": "13"
    },
    "4268": {
      "fn": "PWNDeed.create",
      "offset": [
        4919,
        4963
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4269": {
      "fn": "PWNDeed.create",
      "offset": [
        4919,
        4963
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4270": {
      "fn": "PWNDeed.create",
      "offset": [
        4919,
        4963
      ],
      "op": "OR",
      "path": "13"
    },
    "4271": {
      "fn": "PWNDeed.create",
      "offset": [
        4919,
        4963
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4272": {
      "fn": "PWNDeed.create",
      "offset": [
        4919,
        4963
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "4273": {
      "fn": "PWNDeed.create",
      "offset": [
        5000,
        5014
      ],
      "op": "DUP10",
      "path": "13",
      "statement": 47
    },
    "4274": {
      "fn": "PWNDeed.create",
      "offset": [
        5000,
        5014
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4275": {
      "fn": "PWNDeed.create",
      "offset": [
        4919,
        4934
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4282": {
      "op": "SHL"
    },
    "4283": {
      "op": "SUB"
    },
    "4284": {
      "op": "NOT"
    },
    "4285": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "AND",
      "path": "13"
    },
    "4286": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "OR",
      "path": "13"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4291": {
      "op": "SHL"
    },
    "4292": {
      "fn": "PWNDeed.create",
      "offset": [
        5000,
        5014
      ],
      "op": "DUP4",
      "path": "13"
    },
    "4293": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "4295": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4296": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "GT",
      "path": "13"
    },
    "4297": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "4298": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10E3"
    },
    "4301": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4302": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4309": {
      "op": "SHL"
    },
    "4310": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4312": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4313": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x21"
    },
    "4315": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4317": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4318": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "4320": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "4322": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "REVERT",
      "path": "13"
    },
    "4323": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4324": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "MUL",
      "path": "13"
    },
    "4325": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "OR",
      "path": "13"
    },
    "4326": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4327": {
      "fn": "PWNDeed.create",
      "offset": [
        4973,
        5014
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "4328": {
      "op": "POP"
    },
    "4329": {
      "fn": "PWNDeed.create",
      "offset": [
        5024,
        5042
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 48,
      "value": "0x3"
    },
    "4331": {
      "fn": "PWNDeed.create",
      "offset": [
        5024,
        5042
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4332": {
      "fn": "PWNDeed.create",
      "offset": [
        5024,
        5042
      ],
      "op": "ADD",
      "path": "13"
    },
    "4333": {
      "fn": "PWNDeed.create",
      "offset": [
        5024,
        5053
      ],
      "op": "DUP6",
      "path": "13"
    },
    "4334": {
      "fn": "PWNDeed.create",
      "offset": [
        5024,
        5053
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4335": {
      "fn": "PWNDeed.create",
      "offset": [
        5024,
        5053
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "4336": {
      "fn": "PWNDeed.create",
      "offset": [
        5024,
        5042
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "4338": {
      "fn": "PWNDeed.create",
      "offset": [
        5063,
        5085
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 49
    },
    "4339": {
      "fn": "PWNDeed.create",
      "offset": [
        5063,
        5085
      ],
      "op": "ADD",
      "path": "13"
    },
    "4340": {
      "fn": "PWNDeed.create",
      "offset": [
        5063,
        5100
      ],
      "op": "DUP5",
      "path": "13"
    },
    "4341": {
      "fn": "PWNDeed.create",
      "offset": [
        5063,
        5100
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4342": {
      "fn": "PWNDeed.create",
      "offset": [
        5063,
        5100
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "4343": {
      "fn": "PWNDeed.create",
      "offset": [
        5125,
        5127
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 50,
      "value": "0x5"
    },
    "4345": {
      "fn": "PWNDeed.create",
      "offset": [
        5125,
        5127
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4346": {
      "fn": "PWNDeed.create",
      "offset": [
        5111,
        5135
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4348": {
      "fn": "PWNDeed.create",
      "offset": [
        5111,
        5135
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4349": {
      "fn": "PWNDeed.create",
      "offset": [
        5111,
        5135
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4350": {
      "fn": "PWNDeed.create",
      "offset": [
        5111,
        5135
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4352": {
      "fn": "PWNDeed.create",
      "offset": [
        5111,
        5135
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4353": {
      "fn": "PWNDeed.create",
      "offset": [
        5111,
        5135
      ],
      "op": "ADD",
      "path": "13"
    },
    "4354": {
      "fn": "PWNDeed.create",
      "offset": [
        5111,
        5135
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4355": {
      "fn": "PWNDeed.create",
      "offset": [
        5111,
        5135
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4356": {
      "fn": "PWNDeed.create",
      "offset": [
        5111,
        5135
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4359": {
      "fn": "PWNDeed.create",
      "offset": [
        5111,
        5135
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4360": {
      "fn": "PWNDeed.create",
      "offset": [
        5111,
        5135
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4361": {
      "fn": "PWNDeed.create",
      "offset": [
        5111,
        5135
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1116"
    },
    "4364": {
      "fn": "PWNDeed.create",
      "offset": [
        5111,
        5135
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4365": {
      "fn": "PWNDeed.create",
      "offset": [
        5117,
        5123
      ],
      "op": "DUP6",
      "path": "13"
    },
    "4366": {
      "fn": "PWNDeed.create",
      "offset": [
        5117,
        5123
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4367": {
      "fn": "PWNDeed.create",
      "offset": [
        5024,
        5039
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4369": {
      "fn": "PWNDeed.create",
      "offset": [
        5024,
        5039
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4370": {
      "fn": "PWNDeed.create",
      "offset": [
        5111,
        5116
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1BD4"
    },
    "4373": {
      "fn": "PWNDeed.create",
      "jump": "i",
      "offset": [
        5111,
        5135
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4374": {
      "fn": "PWNDeed.create",
      "offset": [
        5111,
        5135
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4375": {
      "fn": "PWNDeed.create",
      "offset": [
        5146,
        5161
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 51
    },
    "4376": {
      "fn": "PWNDeed.create",
      "offset": [
        5146,
        5161
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4379": {
      "op": "NOT"
    },
    "4380": {
      "fn": "PWNDeed.create",
      "offset": [
        5146,
        5161
      ],
      "op": "AND",
      "path": "13"
    },
    "4381": {
      "fn": "PWNDeed.create",
      "offset": [
        5160,
        5161
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "4383": {
      "fn": "PWNDeed.create",
      "offset": [
        5146,
        5161
      ],
      "op": "OR",
      "path": "13"
    },
    "4384": {
      "fn": "PWNDeed.create",
      "offset": [
        5146,
        5161
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4385": {
      "fn": "PWNDeed.create",
      "offset": [
        5146,
        5161
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "4386": {
      "fn": "PWNDeed.create",
      "offset": [
        5255,
        5257
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 52,
      "value": "0x5"
    },
    "4388": {
      "fn": "PWNDeed.create",
      "offset": [
        5255,
        5257
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4389": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4391": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4398": {
      "op": "SHL"
    },
    "4399": {
      "op": "SUB"
    },
    "4400": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "DUP11",
      "path": "13"
    },
    "4401": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "AND",
      "path": "13"
    },
    "4402": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4403": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x2ED4C7B7768C6B7A36A2A860B72DCE02EFDFF532675591E9CE525280D7AAEDB6"
    },
    "4436": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4437": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1165"
    },
    "4440": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4441": {
      "fn": "PWNDeed.create",
      "offset": [
        5204,
        5218
      ],
      "op": "DUP12",
      "path": "13"
    },
    "4442": {
      "fn": "PWNDeed.create",
      "offset": [
        5204,
        5218
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4443": {
      "fn": "PWNDeed.create",
      "offset": [
        5220,
        5228
      ],
      "op": "DUP11",
      "path": "13"
    },
    "4444": {
      "fn": "PWNDeed.create",
      "offset": [
        5220,
        5228
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4445": {
      "fn": "PWNDeed.create",
      "offset": [
        5230,
        5242
      ],
      "op": "DUP11",
      "path": "13"
    },
    "4446": {
      "fn": "PWNDeed.create",
      "offset": [
        5230,
        5242
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4447": {
      "fn": "PWNDeed.create",
      "offset": [
        5244,
        5253
      ],
      "op": "DUP14",
      "path": "13"
    },
    "4448": {
      "fn": "PWNDeed.create",
      "offset": [
        5244,
        5253
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4449": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2B43"
    },
    "4452": {
      "fn": "PWNDeed.create",
      "jump": "i",
      "offset": [
        5177,
        5258
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4453": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4454": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4456": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4457": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4458": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4459": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "SUB",
      "path": "13"
    },
    "4460": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4461": {
      "fn": "PWNDeed.create",
      "offset": [
        5177,
        5258
      ],
      "op": "LOG3",
      "path": "13"
    },
    "4462": {
      "op": "POP"
    },
    "4463": {
      "op": "POP"
    },
    "4464": {
      "fn": "PWNDeed.create",
      "offset": [
        5276,
        5278
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 53,
      "value": "0x5"
    },
    "4466": {
      "fn": "PWNDeed.create",
      "offset": [
        5276,
        5278
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4467": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "SWAP7",
      "path": "13"
    },
    "4468": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "SWAP6",
      "path": "13"
    },
    "4469": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "POP",
      "path": "13"
    },
    "4470": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "POP",
      "path": "13"
    },
    "4471": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "POP",
      "path": "13"
    },
    "4472": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "POP",
      "path": "13"
    },
    "4473": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "POP",
      "path": "13"
    },
    "4474": {
      "fn": "PWNDeed.create",
      "offset": [
        4582,
        5285
      ],
      "op": "POP",
      "path": "13"
    },
    "4475": {
      "fn": "PWNDeed.create",
      "jump": "o",
      "offset": [
        4582,
        5285
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4476": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4477": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4479": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4486": {
      "op": "SHL"
    },
    "4487": {
      "op": "SUB"
    },
    "4488": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4489": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4490": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4491": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A6"
    },
    "4494": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4495": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4497": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4498": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4504": {
      "op": "SHL"
    },
    "4505": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4506": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4507": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4509": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4510": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AC"
    },
    "4513": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4514": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8B"
    },
    "4517": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4518": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4519": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 54,
      "value": "0x11B0"
    },
    "4522": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4524": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CDE"
    },
    "4527": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4528": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4529": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4530": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15132,
        15216
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4531": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4533": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4540": {
      "op": "SHL"
    },
    "4541": {
      "op": "SUB"
    },
    "4542": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4543": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4544": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4545": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11DC"
    },
    "4548": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4549": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4551": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4552": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4558": {
      "op": "SHL"
    },
    "4559": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4560": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4561": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4563": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4564": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AC"
    },
    "4567": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4568": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8B"
    },
    "4571": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4572": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4573": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15195,
        15198
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 55,
      "value": "0x4"
    },
    "4575": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15195,
        15209
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4576": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15195,
        15209
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4583": {
      "op": "SHL"
    },
    "4584": {
      "op": "SUB"
    },
    "4585": {
      "op": "NOT"
    },
    "4586": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15195,
        15209
      ],
      "op": "AND",
      "path": "13"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4593": {
      "op": "SHL"
    },
    "4594": {
      "op": "SUB"
    },
    "4595": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15195,
        15209
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4596": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15195,
        15209
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4597": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15195,
        15209
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "4598": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15195,
        15209
      ],
      "op": "AND",
      "path": "13"
    },
    "4599": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15195,
        15209
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4600": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15195,
        15209
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4601": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15195,
        15209
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4602": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15195,
        15209
      ],
      "op": "OR",
      "path": "13"
    },
    "4603": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15195,
        15209
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4604": {
      "fn": "PWNDeed.setPWN",
      "offset": [
        15195,
        15209
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "4605": {
      "fn": "PWNDeed.setPWN",
      "jump": "o",
      "offset": [
        15132,
        15216
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4606": {
      "fn": "PWNDeed.setUri",
      "offset": [
        15411,
        15502
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4607": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4609": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4616": {
      "op": "SHL"
    },
    "4617": {
      "op": "SUB"
    },
    "4618": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4619": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4620": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4621": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1228"
    },
    "4624": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4625": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4627": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4628": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4634": {
      "op": "SHL"
    },
    "4635": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4636": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4637": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4639": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4640": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AC"
    },
    "4643": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4644": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8B"
    },
    "4647": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4648": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4649": {
      "fn": "PWNDeed.setUri",
      "offset": [
        15479,
        15495
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 56,
      "value": "0x1231"
    },
    "4652": {
      "fn": "PWNDeed.setUri",
      "offset": [
        15487,
        15494
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4653": {
      "fn": "PWNDeed.setUri",
      "offset": [
        15479,
        15486
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1D30"
    },
    "4656": {
      "fn": "PWNDeed.setUri",
      "jump": "i",
      "offset": [
        15479,
        15495
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4657": {
      "fn": "PWNDeed.setUri",
      "offset": [
        15479,
        15495
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4658": {
      "fn": "PWNDeed.setUri",
      "offset": [
        15411,
        15502
      ],
      "op": "POP",
      "path": "13"
    },
    "4659": {
      "fn": "PWNDeed.setUri",
      "jump": "o",
      "offset": [
        15411,
        15502
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4660": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4661": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3225,
        3277
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 57,
      "value": "0x123F"
    },
    "4664": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "4665": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3258,
        3266
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4666": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3268,
        3276
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4667": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3225,
        3243
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D43"
    },
    "4670": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3225,
        3277
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4671": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3225,
        3277
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4672": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "POP",
      "path": "1"
    },
    "4673": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "POP",
      "path": "1"
    },
    "4674": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "o",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4675": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9009,
        9254
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4676": {
      "offset": [
        3171,
        3174
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4678": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        3171,
        3174
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4685": {
      "op": "SHL"
    },
    "4686": {
      "op": "SUB"
    },
    "4687": {
      "offset": [
        3171,
        3174
      ],
      "op": "AND",
      "path": "13"
    },
    "4688": {
      "offset": [
        3157,
        3167
      ],
      "op": "CALLER",
      "path": "13"
    },
    "4689": {
      "offset": [
        3157,
        3174
      ],
      "op": "EQ",
      "path": "13"
    },
    "4690": {
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x126D"
    },
    "4693": {
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4694": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4696": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        3149,
        3200
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4697": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4703": {
      "op": "SHL"
    },
    "4704": {
      "offset": [
        3149,
        3200
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4705": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        3149,
        3200
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4706": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4708": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        3149,
        3200
      ],
      "op": "ADD",
      "path": "13"
    },
    "4709": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "4712": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        3149,
        3200
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4713": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2BCD"
    },
    "4716": {
      "fn": "PWNDeed.repayLoan",
      "jump": "i",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4717": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4718": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9077,
        9096
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 58,
      "value": "0x1276"
    },
    "4721": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9091,
        9095
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4722": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9077,
        9090
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x154D"
    },
    "4725": {
      "fn": "PWNDeed.repayLoan",
      "jump": "i",
      "offset": [
        9077,
        9096
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4726": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9077,
        9096
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4727": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9077,
        9101
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "4729": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9077,
        9101
      ],
      "op": "AND",
      "path": "13"
    },
    "4730": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9100,
        9101
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "4732": {
      "branch": 123,
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9077,
        9101
      ],
      "op": "EQ",
      "path": "13"
    },
    "4733": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9069,
        9157
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x12E4"
    },
    "4736": {
      "branch": 123,
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9069,
        9157
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4737": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9069,
        9157
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4739": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9069,
        9157
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4740": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4746": {
      "op": "SHL"
    },
    "4747": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9069,
        9157
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4748": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9069,
        9157
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4751": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9069,
        9157
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4753": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9069,
        9157
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4754": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9069,
        9157
      ],
      "op": "ADD",
      "path": "13"
    },
    "4755": {
      "op": "MSTORE"
    },
    "4756": {
      "op": "PUSH1",
      "value": "0x33"
    },
    "4758": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4760": {
      "op": "DUP3"
    },
    "4761": {
      "op": "ADD"
    },
    "4762": {
      "op": "MSTORE"
    },
    "4763": {
      "op": "PUSH32",
      "value": "0x4465656420646F65736E2774206861766520616E206163636570746564206F66"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4798": {
      "op": "DUP3"
    },
    "4799": {
      "op": "ADD"
    },
    "4800": {
      "op": "MSTORE"
    },
    "4801": {
      "op": "PUSH19",
      "value": "0x66657220746F2062652070616964206261636B"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "4823": {
      "op": "SHL"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4826": {
      "op": "DUP3"
    },
    "4827": {
      "op": "ADD"
    },
    "4828": {
      "op": "MSTORE"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4831": {
      "op": "ADD"
    },
    "4832": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9069,
        9157
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "4835": {
      "op": "JUMP"
    },
    "4836": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9069,
        9157
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4837": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9179
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 59,
      "value": "0x0"
    },
    "4839": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9179
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4840": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9179
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4841": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9179
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4842": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9173
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "4844": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9179
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4846": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9179
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4847": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9179
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4848": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9179
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4849": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9179
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4851": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9179
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4852": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9179
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4853": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9179
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4854": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9179
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "4855": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9190
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4856": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9190
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4859": {
      "op": "NOT"
    },
    "4860": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9190
      ],
      "op": "AND",
      "path": "13"
    },
    "4861": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9189,
        9190
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "4863": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9190
      ],
      "op": "OR",
      "path": "13"
    },
    "4864": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9190
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4865": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9168,
        9190
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "4866": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9221,
        9246
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 60,
      "value": "0x4"
    },
    "4868": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9221,
        9246
      ],
      "op": "ADD",
      "path": "13"
    },
    "4869": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9221,
        9246
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4870": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9206,
        9247
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4871": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9206,
        9247
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4872": {
      "op": "DUP5"
    },
    "4873": {
      "op": "DUP2"
    },
    "4874": {
      "op": "MSTORE"
    },
    "4875": {
      "op": "SWAP2"
    },
    "4876": {
      "op": "DUP3"
    },
    "4877": {
      "op": "ADD"
    },
    "4878": {
      "op": "MSTORE"
    },
    "4879": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9206,
        9247
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xF77ABE96FBD2868E9EA14580A47E854C89DEB2B4D4B8CC87989BDF65C69639C7"
    },
    "4912": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9206,
        9247
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4913": {
      "op": "ADD"
    },
    "4914": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9206,
        9247
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4916": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9206,
        9247
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4917": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9206,
        9247
      ],
      "op": "DUP1",
      "path": "13"
    },
    "4918": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9206,
        9247
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4919": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9206,
        9247
      ],
      "op": "SUB",
      "path": "13"
    },
    "4920": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9206,
        9247
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4921": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9206,
        9247
      ],
      "op": "LOG1",
      "path": "13"
    },
    "4922": {
      "fn": "PWNDeed.repayLoan",
      "offset": [
        9009,
        9254
      ],
      "op": "POP",
      "path": "13"
    },
    "4923": {
      "fn": "PWNDeed.repayLoan",
      "jump": "o",
      "offset": [
        9009,
        9254
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4924": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14066,
        14193
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4925": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14125,
        14148
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1368"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4930": {
      "op": "DUP1"
    },
    "4931": {
      "op": "MLOAD"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4934": {
      "op": "DUP2"
    },
    "4935": {
      "op": "ADD"
    },
    "4936": {
      "op": "SWAP1"
    },
    "4937": {
      "op": "SWAP2"
    },
    "4938": {
      "op": "MSTORE"
    },
    "4939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4941": {
      "op": "DUP1"
    },
    "4942": {
      "op": "DUP3"
    },
    "4943": {
      "op": "MSTORE"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4946": {
      "op": "DUP3"
    },
    "4947": {
      "op": "ADD"
    },
    "4948": {
      "op": "SWAP1"
    },
    "4949": {
      "op": "DUP2"
    },
    "4950": {
      "op": "MSTORE"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4953": {
      "op": "ADD"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4956": {
      "op": "DUP2"
    },
    "4957": {
      "op": "MSTORE"
    },
    "4958": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4960": {
      "op": "ADD"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4963": {
      "op": "DUP2"
    },
    "4964": {
      "op": "MSTORE"
    },
    "4965": {
      "op": "POP"
    },
    "4966": {
      "op": "SWAP1"
    },
    "4967": {
      "op": "JUMP"
    },
    "4968": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14125,
        14148
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4969": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14181
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 61,
      "value": "0x0"
    },
    "4971": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14181
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4972": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14181
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4973": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14181
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4974": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14173
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "4976": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14181
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "4978": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14181
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4979": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14181
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4980": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14181
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4981": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14181
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4983": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14181
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "4984": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14181
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4985": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14181
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4986": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14181
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "4987": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "DUP3",
      "path": "13"
    },
    "4988": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4989": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "4991": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4992": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "ADD",
      "path": "13"
    },
    "4993": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4994": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "4995": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4996": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14186
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "4998": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14186
      ],
      "op": "ADD",
      "path": "13"
    },
    "4999": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5000": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5007": {
      "op": "SHL"
    },
    "5008": {
      "op": "SUB"
    },
    "5009": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5010": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "AND",
      "path": "13"
    },
    "5011": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5012": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5013": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14186
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5014": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14167,
        14186
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5015": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5016": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "ADD",
      "path": "13"
    },
    "5017": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5022": {
      "op": "SHL"
    },
    "5023": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5024": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "DIV",
      "path": "13"
    },
    "5025": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "5027": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "AND",
      "path": "13"
    },
    "5028": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "5030": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5031": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "GT",
      "path": "13"
    },
    "5032": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5033": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x848"
    },
    "5036": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5037": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5042": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5044": {
      "op": "SHL"
    },
    "5045": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5047": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5048": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x21"
    },
    "5050": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5052": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5053": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x24"
    },
    "5055": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5057": {
      "fn": "PWNDeed.getOfferLoan",
      "offset": [
        14160,
        14186
      ],
      "op": "REVERT",
      "path": "13"
    },
    "5058": {
      "fn": "PWNDeed.claim",
      "offset": [
        9490,
        9798
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5059": {
      "offset": [
        3171,
        3174
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5061": {
      "fn": "PWNDeed.claim",
      "offset": [
        3171,
        3174
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5068": {
      "op": "SHL"
    },
    "5069": {
      "op": "SUB"
    },
    "5070": {
      "offset": [
        3171,
        3174
      ],
      "op": "AND",
      "path": "13"
    },
    "5071": {
      "offset": [
        3157,
        3167
      ],
      "op": "CALLER",
      "path": "13"
    },
    "5072": {
      "offset": [
        3157,
        3174
      ],
      "op": "EQ",
      "path": "13"
    },
    "5073": {
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x13EC"
    },
    "5076": {
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5077": {
      "fn": "PWNDeed.claim",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5079": {
      "fn": "PWNDeed.claim",
      "offset": [
        3149,
        3200
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5080": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5086": {
      "op": "SHL"
    },
    "5087": {
      "offset": [
        3149,
        3200
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5088": {
      "fn": "PWNDeed.claim",
      "offset": [
        3149,
        3200
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5089": {
      "fn": "PWNDeed.claim",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5091": {
      "fn": "PWNDeed.claim",
      "offset": [
        3149,
        3200
      ],
      "op": "ADD",
      "path": "13"
    },
    "5092": {
      "fn": "PWNDeed.claim",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "5095": {
      "fn": "PWNDeed.claim",
      "offset": [
        3149,
        3200
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5096": {
      "fn": "PWNDeed.claim",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2BCD"
    },
    "5099": {
      "fn": "PWNDeed.claim",
      "jump": "i",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5100": {
      "fn": "PWNDeed.claim",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5101": {
      "fn": "PWNDeed.claim",
      "offset": [
        9592,
        9615
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 62,
      "value": "0x13F6"
    },
    "5104": {
      "fn": "PWNDeed.claim",
      "offset": [
        9602,
        9608
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5105": {
      "fn": "PWNDeed.claim",
      "offset": [
        9610,
        9614
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5106": {
      "fn": "PWNDeed.claim",
      "offset": [
        9592,
        9601
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x644"
    },
    "5109": {
      "fn": "PWNDeed.claim",
      "jump": "i",
      "offset": [
        9592,
        9615
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5110": {
      "fn": "PWNDeed.claim",
      "offset": [
        9592,
        9615
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5111": {
      "fn": "PWNDeed.claim",
      "offset": [
        9619,
        9620
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "5113": {
      "branch": 124,
      "fn": "PWNDeed.claim",
      "offset": [
        9592,
        9620
      ],
      "op": "EQ",
      "path": "13"
    },
    "5114": {
      "fn": "PWNDeed.claim",
      "offset": [
        9584,
        9653
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1445"
    },
    "5117": {
      "branch": 124,
      "fn": "PWNDeed.claim",
      "offset": [
        9584,
        9653
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5118": {
      "fn": "PWNDeed.claim",
      "offset": [
        9584,
        9653
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5120": {
      "fn": "PWNDeed.claim",
      "offset": [
        9584,
        9653
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5121": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5125": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5127": {
      "op": "SHL"
    },
    "5128": {
      "fn": "PWNDeed.claim",
      "offset": [
        9584,
        9653
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5129": {
      "fn": "PWNDeed.claim",
      "offset": [
        9584,
        9653
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5132": {
      "fn": "PWNDeed.claim",
      "offset": [
        9584,
        9653
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5134": {
      "fn": "PWNDeed.claim",
      "offset": [
        9584,
        9653
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5135": {
      "fn": "PWNDeed.claim",
      "offset": [
        9584,
        9653
      ],
      "op": "ADD",
      "path": "13"
    },
    "5136": {
      "op": "MSTORE"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5141": {
      "op": "DUP3"
    },
    "5142": {
      "op": "ADD"
    },
    "5143": {
      "op": "MSTORE"
    },
    "5144": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206973206E6F74207468652064656564206F776E657200000000"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5179": {
      "op": "DUP3"
    },
    "5180": {
      "op": "ADD"
    },
    "5181": {
      "op": "MSTORE"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5184": {
      "op": "ADD"
    },
    "5185": {
      "fn": "PWNDeed.claim",
      "offset": [
        9584,
        9653
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "5188": {
      "op": "JUMP"
    },
    "5189": {
      "fn": "PWNDeed.claim",
      "offset": [
        9584,
        9653
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5190": {
      "fn": "PWNDeed.claim",
      "offset": [
        9694,
        9695
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 63,
      "value": "0x3"
    },
    "5192": {
      "fn": "PWNDeed.claim",
      "offset": [
        9671,
        9690
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1450"
    },
    "5195": {
      "fn": "PWNDeed.claim",
      "offset": [
        9685,
        9689
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5196": {
      "fn": "PWNDeed.claim",
      "offset": [
        9671,
        9684
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x154D"
    },
    "5199": {
      "fn": "PWNDeed.claim",
      "jump": "i",
      "offset": [
        9671,
        9690
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5200": {
      "fn": "PWNDeed.claim",
      "offset": [
        9671,
        9690
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5201": {
      "fn": "PWNDeed.claim",
      "offset": [
        9671,
        9695
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "5203": {
      "fn": "PWNDeed.claim",
      "offset": [
        9671,
        9695
      ],
      "op": "AND",
      "path": "13"
    },
    "5204": {
      "fn": "PWNDeed.claim",
      "offset": [
        9671,
        9695
      ],
      "op": "LT",
      "path": "13"
    },
    "5205": {
      "branch": 125,
      "fn": "PWNDeed.claim",
      "offset": [
        9671,
        9695
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5206": {
      "fn": "PWNDeed.claim",
      "offset": [
        9663,
        9725
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x14A1"
    },
    "5209": {
      "branch": 125,
      "fn": "PWNDeed.claim",
      "offset": [
        9663,
        9725
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5210": {
      "fn": "PWNDeed.claim",
      "offset": [
        9663,
        9725
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5212": {
      "fn": "PWNDeed.claim",
      "offset": [
        9663,
        9725
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5219": {
      "op": "SHL"
    },
    "5220": {
      "fn": "PWNDeed.claim",
      "offset": [
        9663,
        9725
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5221": {
      "fn": "PWNDeed.claim",
      "offset": [
        9663,
        9725
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5224": {
      "fn": "PWNDeed.claim",
      "offset": [
        9663,
        9725
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5226": {
      "fn": "PWNDeed.claim",
      "offset": [
        9663,
        9725
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5227": {
      "fn": "PWNDeed.claim",
      "offset": [
        9663,
        9725
      ],
      "op": "ADD",
      "path": "13"
    },
    "5228": {
      "op": "MSTORE"
    },
    "5229": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5233": {
      "op": "DUP3"
    },
    "5234": {
      "op": "ADD"
    },
    "5235": {
      "op": "MSTORE"
    },
    "5236": {
      "op": "PUSH32",
      "value": "0x446565642063616E277420626520636C61696D65642079657400000000000000"
    },
    "5269": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5271": {
      "op": "DUP3"
    },
    "5272": {
      "op": "ADD"
    },
    "5273": {
      "op": "MSTORE"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5276": {
      "op": "ADD"
    },
    "5277": {
      "fn": "PWNDeed.claim",
      "offset": [
        9663,
        9725
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "5280": {
      "op": "JUMP"
    },
    "5281": {
      "fn": "PWNDeed.claim",
      "offset": [
        9663,
        9725
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5282": {
      "fn": "PWNDeed.claim",
      "offset": [
        9757,
        9758
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 64,
      "value": "0x0"
    },
    "5284": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9747
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5285": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9747
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5286": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9747
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5287": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9741
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "5289": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9747
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5291": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9747
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5292": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9747
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5294": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9747
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5295": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9747
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5296": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9747
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5297": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9747
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5298": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9758
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5299": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9758
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5302": {
      "op": "NOT"
    },
    "5303": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9758
      ],
      "op": "AND",
      "path": "13"
    },
    "5304": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9758
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5305": {
      "fn": "PWNDeed.claim",
      "offset": [
        9736,
        9758
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "5306": {
      "fn": "PWNDeed.claim",
      "offset": [
        9774,
        9791
      ],
      "op": "MLOAD",
      "path": "13",
      "statement": 65
    },
    "5307": {
      "fn": "PWNDeed.claim",
      "offset": [
        9774,
        9791
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xA15F537EBC49D6F6D5217F43D2C5D2B830069397BED363FDC1D811814148EC6D"
    },
    "5340": {
      "fn": "PWNDeed.claim",
      "offset": [
        9774,
        9791
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5341": {
      "fn": "PWNDeed.claim",
      "offset": [
        9774,
        9791
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBFA"
    },
    "5344": {
      "fn": "PWNDeed.claim",
      "offset": [
        9774,
        9791
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5345": {
      "fn": "PWNDeed.claim",
      "offset": [
        9742,
        9746
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5346": {
      "op": "DUP2"
    },
    "5347": {
      "op": "MSTORE"
    },
    "5348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5350": {
      "op": "ADD"
    },
    "5351": {
      "op": "SWAP1"
    },
    "5352": {
      "op": "JUMP"
    },
    "5353": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5354": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12876
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 66,
      "value": "0x0"
    },
    "5356": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12876
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5357": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12876
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5358": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12876
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5359": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12870
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "5361": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12876
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5363": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12876
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5364": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12876
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5365": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12876
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5366": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12876
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5368": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12876
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5369": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12876
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5370": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12876
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5371": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12876
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5372": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12890
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "5374": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12890
      ],
      "op": "ADD",
      "path": "13"
    },
    "5375": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5376": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5377": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5378": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5379": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5380": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5381": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "MUL",
      "path": "13"
    },
    "5382": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5383": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "ADD",
      "path": "13"
    },
    "5384": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5385": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "ADD",
      "path": "13"
    },
    "5386": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5387": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "5388": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5389": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5390": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5391": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5392": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12830,
        12846
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "5394": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12830,
        12846
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "5395": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "5396": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5397": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "ADD",
      "path": "13"
    },
    "5398": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12865,
        12890
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5399": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5400": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5401": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5402": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x7B6"
    },
    "5405": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5406": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5408": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "MUL",
      "path": "13"
    },
    "5409": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5410": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "ADD",
      "path": "13"
    },
    "5411": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5412": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5413": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5415": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5416": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5418": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5420": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5421": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5422": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5423": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5424": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5425": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5426": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5427": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5429": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "ADD",
      "path": "13"
    },
    "5430": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5431": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "5433": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "ADD",
      "path": "13"
    },
    "5434": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5435": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5436": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5437": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "GT",
      "path": "13"
    },
    "5438": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x152E"
    },
    "5441": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5442": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "POP",
      "path": "13"
    },
    "5443": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "POP",
      "path": "13"
    },
    "5444": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "POP",
      "path": "13"
    },
    "5445": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "POP",
      "path": "13"
    },
    "5446": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "POP",
      "path": "13"
    },
    "5447": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5448": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12858,
        12890
      ],
      "op": "POP",
      "path": "13"
    },
    "5449": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5450": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5451": {
      "fn": "PWNDeed.getOffers",
      "offset": [
        12776,
        12897
      ],
      "op": "POP",
      "path": "13"
    },
    "5452": {
      "fn": "PWNDeed.getOffers",
      "jump": "o",
      "offset": [
        12776,
        12897
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5453": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5454": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10939,
        10944
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5456": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10971
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5457": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10971
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5458": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10971
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5459": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10965
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "5461": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10971
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5463": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10971
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5464": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10971
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5466": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10971
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5467": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10971
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5468": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10982
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5471": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "5473": {
      "op": "SHL"
    },
    "5474": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10982
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5475": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10982
      ],
      "op": "DIV",
      "path": "13"
    },
    "5476": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10982
      ],
      "op": "PUSH5",
      "path": "13",
      "value": "0xFFFFFFFFFF"
    },
    "5482": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10982
      ],
      "op": "AND",
      "path": "13"
    },
    "5483": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10986
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5484": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10986
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5485": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10986
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5486": {
      "branch": 126,
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        10986
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5487": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        11030
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1594"
    },
    "5490": {
      "branch": 126,
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        11030
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5491": {
      "op": "POP"
    },
    "5492": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11001
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5494": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11001
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5495": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11001
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5496": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11001
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5497": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        10995
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "5499": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11001
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5501": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11001
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5502": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11001
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5504": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11001
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5505": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11001
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5506": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11012
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5507": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11015,
        11030
      ],
      "op": "TIMESTAMP",
      "path": "13"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "5512": {
      "op": "SHL"
    },
    "5513": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11012
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5514": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11012
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5515": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11012
      ],
      "op": "DIV",
      "path": "13"
    },
    "5516": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11012
      ],
      "op": "PUSH5",
      "path": "13",
      "value": "0xFFFFFFFFFF"
    },
    "5522": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11012
      ],
      "op": "AND",
      "path": "13"
    },
    "5523": {
      "branch": 127,
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10990,
        11030
      ],
      "op": "LT",
      "path": "13"
    },
    "5524": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        11030
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5525": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        11057
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5526": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        11057
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5527": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        11057
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15B2"
    },
    "5530": {
      "branch": 127,
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        11057
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5531": {
      "op": "POP"
    },
    "5532": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11034,
        11045
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5534": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11034,
        11045
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5535": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11034,
        11045
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5536": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11034,
        11045
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5537": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11034,
        11039
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "5539": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11034,
        11045
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5541": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11034,
        11045
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5542": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11034,
        11045
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5544": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11034,
        11045
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5545": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11034,
        11045
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5546": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11034,
        11052
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5547": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11034,
        11052
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "5549": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11034,
        11052
      ],
      "op": "AND",
      "path": "13"
    },
    "5550": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11056,
        11057
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "5552": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11034,
        11057
      ],
      "op": "EQ",
      "path": "13"
    },
    "5553": {
      "branch": 128,
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11034,
        11057
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5554": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10960,
        11057
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5555": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10956,
        11148
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "5556": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10956,
        11148
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x15BF"
    },
    "5559": {
      "branch": 128,
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10956,
        11148
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5560": {
      "op": "POP"
    },
    "5561": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11080,
        11081
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 67,
      "value": "0x4"
    },
    "5563": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11080,
        11081
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5564": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5565": {
      "op": "POP"
    },
    "5566": {
      "fn": "PWNDeed.getDeedStatus",
      "jump": "o",
      "offset": [
        10881,
        11154
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5567": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10956,
        11148
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5568": {
      "op": "POP"
    },
    "5569": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11119,
        11130
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 68,
      "value": "0x0"
    },
    "5571": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11119,
        11130
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5572": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11119,
        11130
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5573": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11119,
        11130
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5574": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11119,
        11124
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "5576": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11119,
        11130
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5578": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11119,
        11130
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5579": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11119,
        11130
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5581": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11119,
        11130
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5582": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11119,
        11130
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5583": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11119,
        11137
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5584": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11119,
        11137
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "5586": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11119,
        11137
      ],
      "op": "AND",
      "path": "13"
    },
    "5587": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        11119,
        11137
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5588": {
      "fn": "PWNDeed.getDeedStatus",
      "jump": "o",
      "offset": [
        10881,
        11154
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5589": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10956,
        11148
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5590": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5591": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5592": {
      "fn": "PWNDeed.getDeedStatus",
      "offset": [
        10881,
        11154
      ],
      "op": "POP",
      "path": "13"
    },
    "5593": {
      "fn": "PWNDeed.getDeedStatus",
      "jump": "o",
      "offset": [
        10881,
        11154
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5594": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5601": {
      "op": "SHL"
    },
    "5602": {
      "op": "SUB"
    },
    "5603": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3804
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 69
    },
    "5604": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3804
      ],
      "op": "AND",
      "path": "1"
    },
    "5605": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5606": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3804
      ],
      "op": "EQ",
      "path": "1"
    },
    "5607": {
      "branch": 137,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3804
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5608": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3844
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15F6"
    },
    "5611": {
      "branch": 137,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3844
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5612": {
      "op": "POP"
    },
    "5613": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3808,
        3844
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15F6"
    },
    "5616": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3825,
        3829
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5617": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5618": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A5"
    },
    "5621": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5622": {
      "branch": 138,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3808,
        3844
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5623": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1654"
    },
    "5626": {
      "branch": 138,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5627": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5629": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5636": {
      "op": "SHL"
    },
    "5637": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5638": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5641": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5643": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5644": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "ADD",
      "path": "1"
    },
    "5645": {
      "op": "MSTORE"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5650": {
      "op": "DUP3"
    },
    "5651": {
      "op": "ADD"
    },
    "5652": {
      "op": "MSTORE"
    },
    "5653": {
      "op": "PUSH32",
      "value": "0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
    },
    "5686": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5688": {
      "op": "DUP3"
    },
    "5689": {
      "op": "ADD"
    },
    "5690": {
      "op": "MSTORE"
    },
    "5691": {
      "op": "PUSH9",
      "value": "0x8185C1C1C9BDD9959"
    },
    "5701": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "5703": {
      "op": "SHL"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5706": {
      "op": "DUP3"
    },
    "5707": {
      "op": "ADD"
    },
    "5708": {
      "op": "MSTORE"
    },
    "5709": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5711": {
      "op": "ADD"
    },
    "5712": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "5715": {
      "op": "JUMP"
    },
    "5716": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5717": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3921,
        3966
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 70,
      "value": "0xC96"
    },
    "5720": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3939,
        3943
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5721": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3945,
        3947
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5722": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3949,
        3951
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5723": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3953,
        3959
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5724": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3961,
        3965
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5725": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3921,
        3938
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E24"
    },
    "5728": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3921,
        3966
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5729": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5730": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5732": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5739": {
      "op": "SHL"
    },
    "5740": {
      "op": "SUB"
    },
    "5741": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5742": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "5743": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5744": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168B"
    },
    "5747": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5748": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5750": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5751": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5755": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5757": {
      "op": "SHL"
    },
    "5758": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5759": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5760": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5762": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5763": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AC"
    },
    "5766": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5767": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8B"
    },
    "5770": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5771": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5778": {
      "op": "SHL"
    },
    "5779": {
      "op": "SUB"
    },
    "5780": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 71
    },
    "5781": {
      "branch": 150,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "5782": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F0"
    },
    "5785": {
      "branch": 150,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5786": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5788": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5789": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5795": {
      "op": "SHL"
    },
    "5796": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5797": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5800": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5802": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5803": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "5804": {
      "op": "MSTORE"
    },
    "5805": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5809": {
      "op": "DUP3"
    },
    "5810": {
      "op": "ADD"
    },
    "5811": {
      "op": "MSTORE"
    },
    "5812": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "5845": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5847": {
      "op": "DUP3"
    },
    "5848": {
      "op": "ADD"
    },
    "5849": {
      "op": "MSTORE"
    },
    "5850": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "5857": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5859": {
      "op": "SHL"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5862": {
      "op": "DUP3"
    },
    "5863": {
      "op": "ADD"
    },
    "5864": {
      "op": "MSTORE"
    },
    "5865": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5867": {
      "op": "ADD"
    },
    "5868": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AC"
    },
    "5871": {
      "op": "JUMP"
    },
    "5872": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5873": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 72,
      "value": "0x1231"
    },
    "5876": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5877": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CDE"
    },
    "5880": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5881": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7681,
        8039
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5882": {
      "offset": [
        3171,
        3174
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5884": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        3171,
        3174
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5891": {
      "op": "SHL"
    },
    "5892": {
      "op": "SUB"
    },
    "5893": {
      "offset": [
        3171,
        3174
      ],
      "op": "AND",
      "path": "13"
    },
    "5894": {
      "offset": [
        3157,
        3167
      ],
      "op": "CALLER",
      "path": "13"
    },
    "5895": {
      "offset": [
        3157,
        3174
      ],
      "op": "EQ",
      "path": "13"
    },
    "5896": {
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1723"
    },
    "5899": {
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5900": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5902": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5903": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5909": {
      "op": "SHL"
    },
    "5910": {
      "offset": [
        3149,
        3200
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5911": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5912": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5914": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "ADD",
      "path": "13"
    },
    "5915": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "5918": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5919": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2BCD"
    },
    "5922": {
      "fn": "PWNDeed.revokeOffer",
      "jump": "i",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5923": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5924": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7806
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 73,
      "value": "0x0"
    },
    "5926": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7806
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5927": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7806
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5928": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7806
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5929": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7798
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "5931": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7806
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "5933": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7806
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5934": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7806
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5936": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7806
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5937": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7806
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "5938": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7813
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "5940": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7813
      ],
      "op": "ADD",
      "path": "13"
    },
    "5941": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7813
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5948": {
      "op": "SHL"
    },
    "5949": {
      "op": "SUB"
    },
    "5950": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7824
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5951": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7824
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5952": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7824
      ],
      "op": "AND",
      "path": "13"
    },
    "5953": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7813
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "5954": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7813
      ],
      "op": "AND",
      "path": "13"
    },
    "5955": {
      "branch": 129,
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7792,
        7824
      ],
      "op": "EQ",
      "path": "13"
    },
    "5956": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7784,
        7865
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x179B"
    },
    "5959": {
      "branch": 129,
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7784,
        7865
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5960": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7784,
        7865
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5962": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7784,
        7865
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5963": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5969": {
      "op": "SHL"
    },
    "5970": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7784,
        7865
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5971": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7784,
        7865
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5974": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7784,
        7865
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5976": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7784,
        7865
      ],
      "op": "DUP3",
      "path": "13"
    },
    "5977": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7784,
        7865
      ],
      "op": "ADD",
      "path": "13"
    },
    "5978": {
      "op": "MSTORE"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5981": {
      "op": "DUP1"
    },
    "5982": {
      "op": "DUP3"
    },
    "5983": {
      "op": "ADD"
    },
    "5984": {
      "op": "MSTORE"
    },
    "5985": {
      "op": "PUSH32",
      "value": "0x546869732061646472657373206469646E27742063726561746520746865206F"
    },
    "6018": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6020": {
      "op": "DUP3"
    },
    "6021": {
      "op": "ADD"
    },
    "6022": {
      "op": "MSTORE"
    },
    "6023": {
      "op": "PUSH4",
      "value": "0x333332B9"
    },
    "6028": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6030": {
      "op": "SHL"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6033": {
      "op": "DUP3"
    },
    "6034": {
      "op": "ADD"
    },
    "6035": {
      "op": "MSTORE"
    },
    "6036": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6038": {
      "op": "ADD"
    },
    "6039": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7784,
        7865
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "6042": {
      "op": "JUMP"
    },
    "6043": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7784,
        7865
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6044": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7897,
        7911
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 74,
      "value": "0x0"
    },
    "6046": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7897,
        7911
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6047": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7897,
        7911
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6048": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7897,
        7911
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6049": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7897,
        7903
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "6051": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7897,
        7911
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6053": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7897,
        7911
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6054": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7897,
        7911
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6056": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7897,
        7911
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6057": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7897,
        7911
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "6058": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7897,
        7915
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "6059": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7883,
        7916
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x17B3"
    },
    "6062": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7883,
        7916
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6063": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7883,
        7896
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x154D"
    },
    "6066": {
      "fn": "PWNDeed.revokeOffer",
      "jump": "i",
      "offset": [
        7883,
        7916
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6067": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7883,
        7916
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6068": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7883,
        7921
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "6070": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7883,
        7921
      ],
      "op": "AND",
      "path": "13"
    },
    "6071": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7920,
        7921
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "6073": {
      "branch": 130,
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7883,
        7921
      ],
      "op": "EQ",
      "path": "13"
    },
    "6074": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7875,
        7964
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1814"
    },
    "6077": {
      "branch": 130,
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7875,
        7964
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "6078": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7875,
        7964
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6080": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7875,
        7964
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6081": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6085": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6087": {
      "op": "SHL"
    },
    "6088": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7875,
        7964
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6089": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7875,
        7964
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6092": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7875,
        7964
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "6094": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7875,
        7964
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6095": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7875,
        7964
      ],
      "op": "ADD",
      "path": "13"
    },
    "6096": {
      "op": "MSTORE"
    },
    "6097": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6101": {
      "op": "DUP3"
    },
    "6102": {
      "op": "ADD"
    },
    "6103": {
      "op": "MSTORE"
    },
    "6104": {
      "op": "PUSH32",
      "value": "0x43616E206F6E6C792072656D6F7665206F66666572732066726F6D206F70656E"
    },
    "6137": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6139": {
      "op": "DUP3"
    },
    "6140": {
      "op": "ADD"
    },
    "6141": {
      "op": "MSTORE"
    },
    "6142": {
      "op": "PUSH6",
      "value": "0x204465656473"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6151": {
      "op": "SHL"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6154": {
      "op": "DUP3"
    },
    "6155": {
      "op": "ADD"
    },
    "6156": {
      "op": "MSTORE"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6159": {
      "op": "ADD"
    },
    "6160": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7875,
        7964
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "6163": {
      "op": "JUMP"
    },
    "6164": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7875,
        7964
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6165": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7982,
        7996
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 75,
      "value": "0x0"
    },
    "6167": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7982,
        7996
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6168": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7982,
        7996
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6169": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7982,
        7996
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6170": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7982,
        7988
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "6172": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7982,
        7996
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6174": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7982,
        7996
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6175": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7982,
        7996
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6177": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7982,
        7996
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6178": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7982,
        7996
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6179": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7982,
        7996
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "6180": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6181": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6182": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "6183": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "6185": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6186": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "ADD",
      "path": "13"
    },
    "6187": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "DUP4",
      "path": "13"
    },
    "6188": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6189": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "6190": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "6192": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6193": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "ADD",
      "path": "13"
    },
    "6194": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6195": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "6196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6202": {
      "op": "SHL"
    },
    "6203": {
      "op": "SUB"
    },
    "6204": {
      "op": "NOT"
    },
    "6205": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "AND",
      "path": "13"
    },
    "6206": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6207": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "6208": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "6210": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6211": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "ADD",
      "path": "13"
    },
    "6212": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6213": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "6214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6220": {
      "op": "SHL"
    },
    "6221": {
      "op": "SUB"
    },
    "6222": {
      "op": "NOT"
    },
    "6223": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "AND",
      "path": "13"
    },
    "6224": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6225": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "6226": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "6228": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6229": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "ADD",
      "path": "13"
    },
    "6230": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "DUP4",
      "path": "13"
    },
    "6231": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6232": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "6233": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "6235": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "ADD",
      "path": "13"
    },
    "6236": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "6237": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6238": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "6239": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7975,
        7996
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "6240": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        8012,
        8032
      ],
      "op": "MLOAD",
      "path": "13",
      "statement": 76
    },
    "6241": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        8012,
        8032
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0xC0885ADE686CF1CA700832B5B7A2F2B0759E5A483174588F940E3AC048A8F8D0"
    },
    "6274": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        8012,
        8032
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6275": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        8012,
        8032
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBFA"
    },
    "6278": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        8012,
        8032
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6279": {
      "fn": "PWNDeed.revokeOffer",
      "offset": [
        7989,
        7995
      ],
      "op": "DUP5",
      "path": "13"
    },
    "6280": {
      "op": "DUP2"
    },
    "6281": {
      "op": "MSTORE"
    },
    "6282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6284": {
      "op": "ADD"
    },
    "6285": {
      "op": "SWAP1"
    },
    "6286": {
      "op": "JUMP"
    },
    "6287": {
      "fn": "PWNDeed.burn",
      "offset": [
        10017,
        10327
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6288": {
      "offset": [
        3171,
        3174
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "6290": {
      "fn": "PWNDeed.burn",
      "offset": [
        3171,
        3174
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "6291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6297": {
      "op": "SHL"
    },
    "6298": {
      "op": "SUB"
    },
    "6299": {
      "offset": [
        3171,
        3174
      ],
      "op": "AND",
      "path": "13"
    },
    "6300": {
      "offset": [
        3157,
        3167
      ],
      "op": "CALLER",
      "path": "13"
    },
    "6301": {
      "offset": [
        3157,
        3174
      ],
      "op": "EQ",
      "path": "13"
    },
    "6302": {
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x18B9"
    },
    "6305": {
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "6306": {
      "fn": "PWNDeed.burn",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6308": {
      "fn": "PWNDeed.burn",
      "offset": [
        3149,
        3200
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6309": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6313": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6315": {
      "op": "SHL"
    },
    "6316": {
      "offset": [
        3149,
        3200
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6317": {
      "fn": "PWNDeed.burn",
      "offset": [
        3149,
        3200
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6318": {
      "fn": "PWNDeed.burn",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "6320": {
      "fn": "PWNDeed.burn",
      "offset": [
        3149,
        3200
      ],
      "op": "ADD",
      "path": "13"
    },
    "6321": {
      "fn": "PWNDeed.burn",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "6324": {
      "fn": "PWNDeed.burn",
      "offset": [
        3149,
        3200
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6325": {
      "fn": "PWNDeed.burn",
      "offset": [
        3149,
        3200
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2BCD"
    },
    "6328": {
      "fn": "PWNDeed.burn",
      "jump": "i",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6329": {
      "fn": "PWNDeed.burn",
      "offset": [
        3149,
        3200
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6330": {
      "fn": "PWNDeed.burn",
      "offset": [
        10118,
        10141
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 77,
      "value": "0x18C3"
    },
    "6333": {
      "fn": "PWNDeed.burn",
      "offset": [
        10128,
        10134
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6334": {
      "fn": "PWNDeed.burn",
      "offset": [
        10136,
        10140
      ],
      "op": "DUP4",
      "path": "13"
    },
    "6335": {
      "fn": "PWNDeed.burn",
      "offset": [
        10118,
        10127
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x644"
    },
    "6338": {
      "fn": "PWNDeed.burn",
      "jump": "i",
      "offset": [
        10118,
        10141
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6339": {
      "fn": "PWNDeed.burn",
      "offset": [
        10118,
        10141
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6340": {
      "fn": "PWNDeed.burn",
      "offset": [
        10145,
        10146
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "6342": {
      "branch": 131,
      "fn": "PWNDeed.burn",
      "offset": [
        10118,
        10146
      ],
      "op": "EQ",
      "path": "13"
    },
    "6343": {
      "fn": "PWNDeed.burn",
      "offset": [
        10110,
        10179
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1912"
    },
    "6346": {
      "branch": 131,
      "fn": "PWNDeed.burn",
      "offset": [
        10110,
        10179
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "6347": {
      "fn": "PWNDeed.burn",
      "offset": [
        10110,
        10179
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6349": {
      "fn": "PWNDeed.burn",
      "offset": [
        10110,
        10179
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6350": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6356": {
      "op": "SHL"
    },
    "6357": {
      "fn": "PWNDeed.burn",
      "offset": [
        10110,
        10179
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6358": {
      "fn": "PWNDeed.burn",
      "offset": [
        10110,
        10179
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6361": {
      "fn": "PWNDeed.burn",
      "offset": [
        10110,
        10179
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "6363": {
      "fn": "PWNDeed.burn",
      "offset": [
        10110,
        10179
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6364": {
      "fn": "PWNDeed.burn",
      "offset": [
        10110,
        10179
      ],
      "op": "ADD",
      "path": "13"
    },
    "6365": {
      "op": "MSTORE"
    },
    "6366": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "6368": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6370": {
      "op": "DUP3"
    },
    "6371": {
      "op": "ADD"
    },
    "6372": {
      "op": "MSTORE"
    },
    "6373": {
      "op": "PUSH32",
      "value": "0x43616C6C6572206973206E6F74207468652064656564206F776E657200000000"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6408": {
      "op": "DUP3"
    },
    "6409": {
      "op": "ADD"
    },
    "6410": {
      "op": "MSTORE"
    },
    "6411": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6413": {
      "op": "ADD"
    },
    "6414": {
      "fn": "PWNDeed.burn",
      "offset": [
        10110,
        10179
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "6417": {
      "op": "JUMP"
    },
    "6418": {
      "fn": "PWNDeed.burn",
      "offset": [
        10110,
        10179
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6419": {
      "fn": "PWNDeed.burn",
      "offset": [
        10197,
        10208
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 78,
      "value": "0x0"
    },
    "6421": {
      "fn": "PWNDeed.burn",
      "offset": [
        10197,
        10208
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6422": {
      "fn": "PWNDeed.burn",
      "offset": [
        10197,
        10208
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6423": {
      "fn": "PWNDeed.burn",
      "offset": [
        10197,
        10208
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6424": {
      "fn": "PWNDeed.burn",
      "offset": [
        10197,
        10202
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "6426": {
      "fn": "PWNDeed.burn",
      "offset": [
        10197,
        10208
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6428": {
      "fn": "PWNDeed.burn",
      "offset": [
        10197,
        10208
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6429": {
      "fn": "PWNDeed.burn",
      "offset": [
        10197,
        10208
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6431": {
      "fn": "PWNDeed.burn",
      "offset": [
        10197,
        10208
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6432": {
      "fn": "PWNDeed.burn",
      "offset": [
        10197,
        10208
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "6433": {
      "fn": "PWNDeed.burn",
      "offset": [
        10197,
        10215
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "6434": {
      "fn": "PWNDeed.burn",
      "offset": [
        10197,
        10215
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "6436": {
      "fn": "PWNDeed.burn",
      "offset": [
        10197,
        10215
      ],
      "op": "AND",
      "path": "13"
    },
    "6437": {
      "branch": 132,
      "fn": "PWNDeed.burn",
      "offset": [
        10197,
        10220
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "6438": {
      "fn": "PWNDeed.burn",
      "offset": [
        10189,
        10259
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x197C"
    },
    "6441": {
      "branch": 132,
      "fn": "PWNDeed.burn",
      "offset": [
        10189,
        10259
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "6442": {
      "fn": "PWNDeed.burn",
      "offset": [
        10189,
        10259
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6444": {
      "fn": "PWNDeed.burn",
      "offset": [
        10189,
        10259
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6445": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6451": {
      "op": "SHL"
    },
    "6452": {
      "fn": "PWNDeed.burn",
      "offset": [
        10189,
        10259
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6453": {
      "fn": "PWNDeed.burn",
      "offset": [
        10189,
        10259
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6456": {
      "fn": "PWNDeed.burn",
      "offset": [
        10189,
        10259
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "6458": {
      "fn": "PWNDeed.burn",
      "offset": [
        10189,
        10259
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6459": {
      "fn": "PWNDeed.burn",
      "offset": [
        10189,
        10259
      ],
      "op": "ADD",
      "path": "13"
    },
    "6460": {
      "op": "MSTORE"
    },
    "6461": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6465": {
      "op": "DUP3"
    },
    "6466": {
      "op": "ADD"
    },
    "6467": {
      "op": "MSTORE"
    },
    "6468": {
      "op": "PUSH32",
      "value": "0x446565642063616E2774206265206275726E6564206174207468697320737461"
    },
    "6501": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6503": {
      "op": "DUP3"
    },
    "6504": {
      "op": "ADD"
    },
    "6505": {
      "op": "MSTORE"
    },
    "6506": {
      "op": "PUSH2",
      "value": "0x6765"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6511": {
      "op": "SHL"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6514": {
      "op": "DUP3"
    },
    "6515": {
      "op": "ADD"
    },
    "6516": {
      "op": "MSTORE"
    },
    "6517": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6519": {
      "op": "ADD"
    },
    "6520": {
      "fn": "PWNDeed.burn",
      "offset": [
        10189,
        10259
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6AC"
    },
    "6523": {
      "op": "JUMP"
    },
    "6524": {
      "fn": "PWNDeed.burn",
      "offset": [
        10189,
        10259
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6525": {
      "fn": "PWNDeed.burn",
      "offset": [
        10277,
        10288
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 79,
      "value": "0x0"
    },
    "6527": {
      "fn": "PWNDeed.burn",
      "offset": [
        10277,
        10288
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6528": {
      "fn": "PWNDeed.burn",
      "offset": [
        10277,
        10288
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6529": {
      "fn": "PWNDeed.burn",
      "offset": [
        10277,
        10288
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6530": {
      "fn": "PWNDeed.burn",
      "offset": [
        10277,
        10282
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x7"
    },
    "6532": {
      "fn": "PWNDeed.burn",
      "offset": [
        10277,
        10288
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6534": {
      "fn": "PWNDeed.burn",
      "offset": [
        10277,
        10288
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6535": {
      "fn": "PWNDeed.burn",
      "offset": [
        10277,
        10288
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "6537": {
      "fn": "PWNDeed.burn",
      "offset": [
        10277,
        10288
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6538": {
      "fn": "PWNDeed.burn",
      "offset": [
        10277,
        10288
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "6539": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6540": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "6541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6545": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6547": {
      "op": "SHL"
    },
    "6548": {
      "op": "SUB"
    },
    "6549": {
      "op": "NOT"
    },
    "6550": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "AND",
      "path": "13"
    },
    "6551": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6552": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "6553": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "6555": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6556": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "ADD",
      "path": "13"
    },
    "6557": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6558": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "6559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6565": {
      "op": "SHL"
    },
    "6566": {
      "op": "SUB"
    },
    "6567": {
      "op": "NOT"
    },
    "6568": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "AND",
      "path": "13"
    },
    "6569": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6570": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "6571": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x2"
    },
    "6573": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6574": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "ADD",
      "path": "13"
    },
    "6575": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6576": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6577": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "6578": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x3"
    },
    "6580": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6581": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "ADD",
      "path": "13"
    },
    "6582": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6583": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6584": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "6585": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "6587": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6588": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "ADD",
      "path": "13"
    },
    "6589": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6590": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6591": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "6592": {
      "fn": "PWNDeed.burn",
      "offset": [
        10277,
        10288
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6593": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x19CD"
    },
    "6596": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x5"
    },
    "6598": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "DUP4",
      "path": "13"
    },
    "6599": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "ADD",
      "path": "13"
    },
    "6600": {
      "fn": "PWNDeed.burn",
      "offset": [
        10277,
        10288
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6601": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2349"
    },
    "6604": {
      "fn": "PWNDeed.burn",
      "jump": "i",
      "offset": [
        10270,
        10288
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6605": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "6606": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "POP",
      "path": "13"
    },
    "6607": {
      "fn": "PWNDeed.burn",
      "offset": [
        10270,
        10288
      ],
      "op": "POP",
      "path": "13"
    },
    "6608": {
      "fn": "PWNDeed.burn",
      "offset": [
        10298,
        10320
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 80,
      "value": "0x123F"
    },
    "6611": {
      "fn": "PWNDeed.burn",
      "offset": [
        10304,
        10310
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6612": {
      "fn": "PWNDeed.burn",
      "offset": [
        10312,
        10316
      ],
      "op": "DUP4",
      "path": "13"
    },
    "6613": {
      "fn": "PWNDeed.burn",
      "offset": [
        10318,
        10319
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "6615": {
      "fn": "PWNDeed.burn",
      "offset": [
        10298,
        10303
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F41"
    },
    "6618": {
      "fn": "PWNDeed.burn",
      "jump": "i",
      "offset": [
        10298,
        10320
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6619": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6620": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6288,
        6295
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 81
    },
    "6621": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6288,
        6302
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6622": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6274,
        6277
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6623": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6274,
        6284
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6624": {
      "branch": 139,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6274,
        6302
      ],
      "op": "EQ",
      "path": "1"
    },
    "6625": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A3D"
    },
    "6628": {
      "branch": 139,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6629": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6631": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6632": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6636": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6638": {
      "op": "SHL"
    },
    "6639": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6640": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6643": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6645": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6646": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "ADD",
      "path": "1"
    },
    "6647": {
      "op": "MSTORE"
    },
    "6648": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "6650": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6652": {
      "op": "DUP3"
    },
    "6653": {
      "op": "ADD"
    },
    "6654": {
      "op": "MSTORE"
    },
    "6655": {
      "op": "PUSH32",
      "value": "0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
    },
    "6688": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6690": {
      "op": "DUP3"
    },
    "6691": {
      "op": "ADD"
    },
    "6692": {
      "op": "MSTORE"
    },
    "6693": {
      "op": "PUSH8",
      "value": "0xDAD2E6DAC2E8C6D"
    },
    "6702": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "6704": {
      "op": "SHL"
    },
    "6705": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6707": {
      "op": "DUP3"
    },
    "6708": {
      "op": "ADD"
    },
    "6709": {
      "op": "MSTORE"
    },
    "6710": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6712": {
      "op": "ADD"
    },
    "6713": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "6716": {
      "op": "JUMP"
    },
    "6717": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6724": {
      "op": "SHL"
    },
    "6725": {
      "op": "SUB"
    },
    "6726": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6365,
        6381
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 82
    },
    "6727": {
      "branch": 140,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6365,
        6381
      ],
      "op": "AND",
      "path": "1"
    },
    "6728": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A63"
    },
    "6731": {
      "branch": 140,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6732": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6734": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6735": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6739": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6741": {
      "op": "SHL"
    },
    "6742": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6743": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6744": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6746": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "ADD",
      "path": "1"
    },
    "6747": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "6750": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6751": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BFC"
    },
    "6754": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6357,
        6423
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6755": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6756": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "6757": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6434,
        6450
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6759": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6760": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6571,
        6574
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6761": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6571,
        6581
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6762": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6567,
        6568
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6763": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6567,
        6581
      ],
      "op": "LT",
      "path": "1"
    },
    "6764": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6765": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B66"
    },
    "6768": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6769": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6602,
        6612
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6771": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6618
      ],
      "op": "DUP6",
      "path": "1"
    },
    "6772": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6619,
        6620
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6773": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6774": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6775": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6776": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "LT",
      "path": "1"
    },
    "6777": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A92"
    },
    "6780": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6781": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6786": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6788": {
      "op": "SHL"
    },
    "6789": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6791": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6792": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "6794": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6796": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6797": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "6799": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6801": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6802": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6803": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6805": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "MUL",
      "path": "1"
    },
    "6806": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6808": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "ADD",
      "path": "1"
    },
    "6809": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "ADD",
      "path": "1"
    },
    "6810": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6811": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6602,
        6621
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6812": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6602,
        6621
      ],
      "op": "POP",
      "path": "1"
    },
    "6813": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6635,
        6649
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6815": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6659
      ],
      "op": "DUP6",
      "path": "1"
    },
    "6816": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6660,
        6661
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6817": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6818": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6819": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6820": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "LT",
      "path": "1"
    },
    "6821": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1ABE"
    },
    "6824": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6825": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6830": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6832": {
      "op": "SHL"
    },
    "6833": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6835": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6836": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "6838": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6840": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6841": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "6843": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6845": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6846": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6847": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6849": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6850": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6851": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "MUL",
      "path": "1"
    },
    "6852": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6853": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6854": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6855": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "ADD",
      "path": "1"
    },
    "6856": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6857": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "ADD",
      "path": "1"
    },
    "6858": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6859": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6677,
        6696
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6861": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6862": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6863": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6864": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6865": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6866": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6867": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6869": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6870": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6871": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6878": {
      "op": "SHL"
    },
    "6879": {
      "op": "SUB"
    },
    "6880": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "DUP15",
      "path": "1"
    },
    "6881": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "AND",
      "path": "1"
    },
    "6882": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6883": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6884": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6885": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "6886": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6887": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6888": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6889": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6890": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6891": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6892": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6893": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6894": {
      "op": "POP"
    },
    "6895": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6740,
        6761
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 83
    },
    "6896": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6740,
        6761
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6897": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6740,
        6761
      ],
      "op": "LT",
      "path": "1"
    },
    "6898": {
      "branch": 141,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6740,
        6761
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6899": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B0E"
    },
    "6902": {
      "branch": 141,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6903": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6905": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6906": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6910": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6912": {
      "op": "SHL"
    },
    "6913": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6914": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6915": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6917": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "ADD",
      "path": "1"
    },
    "6918": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "6921": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6922": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C41"
    },
    "6925": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6732,
        6808
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6926": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6927": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6859
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 84,
      "value": "0x0"
    },
    "6929": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6930": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6931": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6932": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6934": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6935": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6936": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6937": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6939": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6940": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6941": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6948": {
      "op": "SHL"
    },
    "6949": {
      "op": "SUB"
    },
    "6950": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP15",
      "path": "1"
    },
    "6951": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6952": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "AND",
      "path": "1"
    },
    "6953": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP6",
      "path": "1"
    },
    "6954": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6955": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6956": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6957": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6958": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6959": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6960": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "DUP6",
      "path": "1"
    },
    "6961": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "DUP6",
      "path": "1"
    },
    "6962": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "SUB",
      "path": "1"
    },
    "6963": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6892
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6964": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6892
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6965": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 85
    },
    "6966": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "DUP12",
      "path": "1"
    },
    "6967": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "AND",
      "path": "1"
    },
    "6968": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6969": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6970": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6971": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6972": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6973": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6974": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6975": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6976": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6859
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6977": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B4B"
    },
    "6980": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6981": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6982": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6983": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DB3"
    },
    "6986": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6920,
        6947
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6987": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6988": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6989": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "POP",
      "path": "1"
    },
    "6990": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "POP",
      "path": "1"
    },
    "6991": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6992": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6993": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6994": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "POP",
      "path": "1"
    },
    "6995": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "POP",
      "path": "1"
    },
    "6996": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "POP",
      "path": "1"
    },
    "6997": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "POP",
      "path": "1"
    },
    "6998": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 86
    },
    "6999": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B5F"
    },
    "7002": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7003": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E5C"
    },
    "7006": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6583,
        6586
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7007": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7008": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7009": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "POP",
      "path": "1"
    },
    "7010": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A67"
    },
    "7013": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7014": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7015": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "POP",
      "path": "1"
    },
    "7016": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7003,
        7005
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 87
    },
    "7017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7023": {
      "op": "SHL"
    },
    "7024": {
      "op": "SUB"
    },
    "7025": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "AND",
      "path": "1"
    },
    "7026": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6997,
        7001
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7033": {
      "op": "SHL"
    },
    "7034": {
      "op": "SUB"
    },
    "7035": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "AND",
      "path": "1"
    },
    "7036": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6987,
        6995
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7043": {
      "op": "SHL"
    },
    "7044": {
      "op": "SUB"
    },
    "7045": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "AND",
      "path": "1"
    },
    "7046": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "7079": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7007,
        7010
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7080": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7019
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7081": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7083": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7084": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BB6"
    },
    "7087": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7088": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7089": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7090": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B1E"
    },
    "7093": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6973,
        7020
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7094": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7095": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7097": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7098": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7099": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7100": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SUB",
      "path": "1"
    },
    "7101": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7102": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "LOG4",
      "path": "1"
    },
    "7103": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7031,
        7106
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 88,
      "value": "0x1BCC"
    },
    "7106": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7067,
        7075
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7107": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7077,
        7081
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7108": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7083,
        7085
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7109": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7087,
        7090
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7110": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7092,
        7099
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7111": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7101,
        7105
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7112": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7031,
        7066
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20BB"
    },
    "7115": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7031,
        7106
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7116": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7031,
        7106
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7117": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "1"
    },
    "7118": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "1"
    },
    "7119": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "1"
    },
    "7120": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "1"
    },
    "7121": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "1"
    },
    "7122": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "1"
    },
    "7123": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        6068,
        7113
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7124": {
      "fn": "ERC1155._mint",
      "offset": [
        8395,
        8948
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7131": {
      "op": "SHL"
    },
    "7132": {
      "op": "SUB"
    },
    "7133": {
      "fn": "ERC1155._mint",
      "offset": [
        8542,
        8558
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 89
    },
    "7134": {
      "branch": 142,
      "fn": "ERC1155._mint",
      "offset": [
        8542,
        8558
      ],
      "op": "AND",
      "path": "1"
    },
    "7135": {
      "fn": "ERC1155._mint",
      "offset": [
        8534,
        8596
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C34"
    },
    "7138": {
      "branch": 142,
      "fn": "ERC1155._mint",
      "offset": [
        8534,
        8596
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7139": {
      "fn": "ERC1155._mint",
      "offset": [
        8534,
        8596
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7141": {
      "fn": "ERC1155._mint",
      "offset": [
        8534,
        8596
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7142": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7146": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7148": {
      "op": "SHL"
    },
    "7149": {
      "fn": "ERC1155._mint",
      "offset": [
        8534,
        8596
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7150": {
      "fn": "ERC1155._mint",
      "offset": [
        8534,
        8596
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7153": {
      "fn": "ERC1155._mint",
      "offset": [
        8534,
        8596
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7155": {
      "fn": "ERC1155._mint",
      "offset": [
        8534,
        8596
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7156": {
      "fn": "ERC1155._mint",
      "offset": [
        8534,
        8596
      ],
      "op": "ADD",
      "path": "1"
    },
    "7157": {
      "op": "MSTORE"
    },
    "7158": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7160": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7162": {
      "op": "DUP3"
    },
    "7163": {
      "op": "ADD"
    },
    "7164": {
      "op": "MSTORE"
    },
    "7165": {
      "op": "PUSH32",
      "value": "0x455243313135353A206D696E7420746F20746865207A65726F20616464726573"
    },
    "7198": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7200": {
      "op": "DUP3"
    },
    "7201": {
      "op": "ADD"
    },
    "7202": {
      "op": "MSTORE"
    },
    "7203": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7207": {
      "op": "SHL"
    },
    "7208": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7210": {
      "op": "DUP3"
    },
    "7211": {
      "op": "ADD"
    },
    "7212": {
      "op": "MSTORE"
    },
    "7213": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7215": {
      "op": "ADD"
    },
    "7216": {
      "fn": "ERC1155._mint",
      "offset": [
        8534,
        8596
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "7219": {
      "op": "JUMP"
    },
    "7220": {
      "fn": "ERC1155._mint",
      "offset": [
        8534,
        8596
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7221": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7222": {
      "fn": "ERC1155._mint",
      "offset": [
        8649,
        8751
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 90,
      "value": "0x1C4E"
    },
    "7225": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7226": {
      "fn": "ERC1155._mint",
      "offset": [
        8607,
        8623
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7228": {
      "fn": "ERC1155._mint",
      "offset": [
        8692,
        8694
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7229": {
      "fn": "ERC1155._mint",
      "offset": [
        8696,
        8717
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C45"
    },
    "7232": {
      "fn": "ERC1155._mint",
      "offset": [
        8714,
        8716
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7233": {
      "fn": "ERC1155._mint",
      "offset": [
        8696,
        8713
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2226"
    },
    "7236": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8696,
        8717
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7237": {
      "fn": "ERC1155._mint",
      "offset": [
        8696,
        8717
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7238": {
      "fn": "ERC1155._mint",
      "offset": [
        8719,
        8744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC96"
    },
    "7241": {
      "fn": "ERC1155._mint",
      "offset": [
        8737,
        8743
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7242": {
      "fn": "ERC1155._mint",
      "offset": [
        8719,
        8736
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2226"
    },
    "7245": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8719,
        8744
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7246": {
      "fn": "ERC1155._mint",
      "offset": [
        8649,
        8751
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7247": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8771
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 91,
      "value": "0x0"
    },
    "7249": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8775
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7250": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8775
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7251": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8775
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7252": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7254": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8775
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7255": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8775
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7256": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8775
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7257": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7259": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7260": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8775
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7261": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8775
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7268": {
      "op": "SHL"
    },
    "7269": {
      "op": "SUB"
    },
    "7270": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8779
      ],
      "op": "DUP10",
      "path": "1"
    },
    "7271": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8779
      ],
      "op": "AND",
      "path": "1"
    },
    "7272": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8779
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7273": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8779
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7274": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8779
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7275": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8779
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7276": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8779
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7277": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8779
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7278": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8779
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7279": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8789
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7280": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8789
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7281": {
      "fn": "ERC1155._mint",
      "offset": [
        8783,
        8789
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7282": {
      "fn": "ERC1155._mint",
      "offset": [
        8783,
        8789
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7283": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8771
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7284": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8789
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C7E"
    },
    "7287": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8789
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7288": {
      "fn": "ERC1155._mint",
      "offset": [
        8783,
        8789
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7289": {
      "fn": "ERC1155._mint",
      "offset": [
        8783,
        8789
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7290": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8789
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DB3"
    },
    "7293": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8762,
        8789
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7294": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8789
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7295": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8789
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7296": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8789
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7297": {
      "fn": "ERC1155._mint",
      "offset": [
        8762,
        8789
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7298": {
      "op": "POP"
    },
    "7299": {
      "op": "POP"
    },
    "7300": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 92,
      "value": "0x40"
    },
    "7302": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7303": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7304": {
      "op": "DUP6"
    },
    "7305": {
      "op": "DUP2"
    },
    "7306": {
      "op": "MSTORE"
    },
    "7307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7309": {
      "op": "DUP2"
    },
    "7310": {
      "op": "ADD"
    },
    "7311": {
      "op": "DUP6"
    },
    "7312": {
      "op": "SWAP1"
    },
    "7313": {
      "op": "MSTORE"
    },
    "7314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7320": {
      "op": "SHL"
    },
    "7321": {
      "op": "SUB"
    },
    "7322": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7323": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7324": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "AND",
      "path": "1"
    },
    "7325": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7326": {
      "fn": "ERC1155._mint",
      "offset": [
        8837,
        8838
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7328": {
      "fn": "ERC1155._mint",
      "offset": [
        8837,
        8838
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7329": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7330": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7331": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "AND",
      "path": "1"
    },
    "7332": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7333": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "7366": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7367": {
      "op": "ADD"
    },
    "7368": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7370": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7371": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7372": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7373": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "SUB",
      "path": "1"
    },
    "7374": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7375": {
      "fn": "ERC1155._mint",
      "offset": [
        8804,
        8856
      ],
      "op": "LOG4",
      "path": "1"
    },
    "7376": {
      "fn": "ERC1155._mint",
      "offset": [
        8867,
        8941
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 93,
      "value": "0xC96"
    },
    "7379": {
      "fn": "ERC1155._mint",
      "offset": [
        8898,
        8906
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7380": {
      "fn": "ERC1155._mint",
      "offset": [
        8916,
        8917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7382": {
      "fn": "ERC1155._mint",
      "offset": [
        8920,
        8922
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7383": {
      "fn": "ERC1155._mint",
      "offset": [
        8924,
        8926
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7384": {
      "fn": "ERC1155._mint",
      "offset": [
        8928,
        8934
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7385": {
      "fn": "ERC1155._mint",
      "offset": [
        8936,
        8940
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7386": {
      "fn": "ERC1155._mint",
      "offset": [
        8867,
        8897
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x227F"
    },
    "7389": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8867,
        8941
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7390": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7391": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "7393": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7394": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7401": {
      "op": "SHL"
    },
    "7402": {
      "op": "SUB"
    },
    "7403": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 94
    },
    "7404": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7405": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "7406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7412": {
      "op": "SHL"
    },
    "7413": {
      "op": "SUB"
    },
    "7414": {
      "op": "NOT"
    },
    "7415": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7416": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "7417": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7418": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "7419": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7420": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "7421": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7422": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 95,
      "value": "0x40"
    },
    "7424": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7425": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7426": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "7427": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7428": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7429": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7430": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7431": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "7464": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7465": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7467": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7468": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "7469": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "7470": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "7471": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7472": {
      "fn": "ERC1155._setURI",
      "offset": [
        7936,
        8022
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7473": {
      "fn": "ERC1155._setURI",
      "offset": [
        8002,
        8015
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 96
    },
    "7474": {
      "fn": "ERC1155._setURI",
      "offset": [
        8002,
        8015
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7475": {
      "fn": "ERC1155._setURI",
      "offset": [
        8002,
        8015
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x123F"
    },
    "7478": {
      "fn": "ERC1155._setURI",
      "offset": [
        8002,
        8015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7479": {
      "fn": "ERC1155._setURI",
      "offset": [
        8002,
        8006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "7481": {
      "fn": "ERC1155._setURI",
      "offset": [
        8002,
        8006
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7482": {
      "fn": "ERC1155._setURI",
      "offset": [
        8002,
        8015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7484": {
      "fn": "ERC1155._setURI",
      "offset": [
        8002,
        8015
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7485": {
      "fn": "ERC1155._setURI",
      "offset": [
        8002,
        8015
      ],
      "op": "ADD",
      "path": "1"
    },
    "7486": {
      "fn": "ERC1155._setURI",
      "offset": [
        8002,
        8015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7487": {
      "fn": "ERC1155._setURI",
      "offset": [
        8002,
        8015
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2367"
    },
    "7490": {
      "fn": "ERC1155._setURI",
      "jump": "i",
      "offset": [
        8002,
        8015
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7491": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12074,
        12397
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7492": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12224,
        12232
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 97
    },
    "7493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7499": {
      "op": "SHL"
    },
    "7500": {
      "op": "SUB"
    },
    "7501": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12215,
        12232
      ],
      "op": "AND",
      "path": "1"
    },
    "7502": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12215,
        12220
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7509": {
      "op": "SHL"
    },
    "7510": {
      "op": "SUB"
    },
    "7511": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12215,
        12232
      ],
      "op": "AND",
      "path": "1"
    },
    "7512": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12215,
        12232
      ],
      "op": "EQ",
      "path": "1"
    },
    "7513": {
      "branch": 143,
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12215,
        12232
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7514": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DB7"
    },
    "7517": {
      "branch": 143,
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7518": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7520": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7521": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7527": {
      "op": "SHL"
    },
    "7528": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7529": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7532": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7534": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7535": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "ADD",
      "path": "1"
    },
    "7536": {
      "op": "MSTORE"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "7539": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7541": {
      "op": "DUP3"
    },
    "7542": {
      "op": "ADD"
    },
    "7543": {
      "op": "MSTORE"
    },
    "7544": {
      "op": "PUSH32",
      "value": "0x455243313135353A2073657474696E6720617070726F76616C20737461747573"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7579": {
      "op": "DUP3"
    },
    "7580": {
      "op": "ADD"
    },
    "7581": {
      "op": "MSTORE"
    },
    "7582": {
      "op": "PUSH9",
      "value": "0x103337B91039B2B633"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "7594": {
      "op": "SHL"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7597": {
      "op": "DUP3"
    },
    "7598": {
      "op": "ADD"
    },
    "7599": {
      "op": "MSTORE"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7602": {
      "op": "ADD"
    },
    "7603": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "7606": {
      "op": "JUMP"
    },
    "7607": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7614": {
      "op": "SHL"
    },
    "7615": {
      "op": "SUB"
    },
    "7616": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 98
    },
    "7617": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7618": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "AND",
      "path": "1"
    },
    "7619": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7621": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7622": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7623": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7624": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12306
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "7626": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7628": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7629": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7630": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7631": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7633": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7634": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7635": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7636": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "7637": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7638": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "AND",
      "path": "1"
    },
    "7639": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7640": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7641": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7642": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "7643": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7644": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7645": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7646": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7647": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7648": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7649": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7650": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7651": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7653": {
      "op": "NOT"
    },
    "7654": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "AND",
      "path": "1"
    },
    "7655": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7656": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7657": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7658": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7659": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7660": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "OR",
      "path": "1"
    },
    "7661": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7662": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7663": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7664": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 99
    },
    "7665": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7666": {
      "op": "SWAP2"
    },
    "7667": {
      "op": "DUP3"
    },
    "7668": {
      "op": "MSTORE"
    },
    "7669": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "7702": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7703": {
      "op": "ADD"
    },
    "7704": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7706": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7707": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7708": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7709": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "SUB",
      "path": "1"
    },
    "7710": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7711": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "LOG3",
      "path": "1"
    },
    "7712": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12074,
        12397
      ],
      "op": "POP",
      "path": "1"
    },
    "7713": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12074,
        12397
      ],
      "op": "POP",
      "path": "1"
    },
    "7714": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12074,
        12397
      ],
      "op": "POP",
      "path": "1"
    },
    "7715": {
      "fn": "ERC1155._setApprovalForAll",
      "jump": "o",
      "offset": [
        12074,
        12397
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7716": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7723": {
      "op": "SHL"
    },
    "7724": {
      "op": "SUB"
    },
    "7725": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5106,
        5122
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 100
    },
    "7726": {
      "branch": 144,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5106,
        5122
      ],
      "op": "AND",
      "path": "1"
    },
    "7727": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E4A"
    },
    "7730": {
      "branch": 144,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7731": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7733": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7734": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7738": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7740": {
      "op": "SHL"
    },
    "7741": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7742": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7743": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7745": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "ADD",
      "path": "1"
    },
    "7746": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "7749": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7750": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BFC"
    },
    "7753": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5098,
        5164
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7754": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7755": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "7756": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5217,
        5313
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 101,
      "value": "0x1E5A"
    },
    "7759": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7760": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5248,
        5252
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7761": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5254,
        5256
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7762": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5258,
        5279
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C45"
    },
    "7765": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5276,
        5278
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7766": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5258,
        5275
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2226"
    },
    "7769": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5258,
        5279
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7770": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5217,
        5313
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7771": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5324,
        5343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7773": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7774": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7775": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7776": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7778": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7779": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7780": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7781": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7783": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7784": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7785": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7792": {
      "op": "SHL"
    },
    "7793": {
      "op": "SUB"
    },
    "7794": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "DUP11",
      "path": "1"
    },
    "7795": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "AND",
      "path": "1"
    },
    "7796": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7797": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7798": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7799": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7800": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7801": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7802": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7803": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7804": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5383,
        5404
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 102
    },
    "7805": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5383,
        5404
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7806": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5383,
        5404
      ],
      "op": "LT",
      "path": "1"
    },
    "7807": {
      "branch": 145,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5383,
        5404
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7808": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E9B"
    },
    "7811": {
      "branch": 145,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7812": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7814": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7815": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7821": {
      "op": "SHL"
    },
    "7822": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7823": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7824": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7826": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "ADD",
      "path": "1"
    },
    "7827": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "7830": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7831": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C41"
    },
    "7834": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5375,
        5451
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7835": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7836": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5494
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 103,
      "value": "0x0"
    },
    "7838": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7839": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7840": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7841": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7843": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7844": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7845": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7846": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7848": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7849": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7850": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7857": {
      "op": "SHL"
    },
    "7858": {
      "op": "SUB"
    },
    "7859": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP12",
      "path": "1"
    },
    "7860": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7861": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "AND",
      "path": "1"
    },
    "7862": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7863": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7864": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7865": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7866": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7867": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7868": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7869": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7870": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7871": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "SUB",
      "path": "1"
    },
    "7872": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5527
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7873": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5527
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7874": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 104
    },
    "7875": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7876": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "AND",
      "path": "1"
    },
    "7877": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7878": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7879": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7880": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7881": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7882": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7883": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7884": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7885": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5494
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7886": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1ED8"
    },
    "7889": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7890": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7891": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7892": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DB3"
    },
    "7895": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5547,
        5574
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7896": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7897": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7898": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7899": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7900": {
      "op": "POP"
    },
    "7901": {
      "op": "POP"
    },
    "7902": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 105,
      "value": "0x40"
    },
    "7904": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7905": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7906": {
      "op": "DUP7"
    },
    "7907": {
      "op": "DUP2"
    },
    "7908": {
      "op": "MSTORE"
    },
    "7909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7911": {
      "op": "DUP2"
    },
    "7912": {
      "op": "ADD"
    },
    "7913": {
      "op": "DUP7"
    },
    "7914": {
      "op": "SWAP1"
    },
    "7915": {
      "op": "MSTORE"
    },
    "7916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7922": {
      "op": "SHL"
    },
    "7923": {
      "op": "SUB"
    },
    "7924": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7925": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP10",
      "path": "1"
    },
    "7926": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "AND",
      "path": "1"
    },
    "7927": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7928": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP11",
      "path": "1"
    },
    "7929": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7930": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "AND",
      "path": "1"
    },
    "7931": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7932": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7933": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7934": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "AND",
      "path": "1"
    },
    "7935": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7936": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "7969": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7970": {
      "op": "ADD"
    },
    "7971": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7973": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7974": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7975": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7976": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SUB",
      "path": "1"
    },
    "7977": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7978": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "LOG4",
      "path": "1"
    },
    "7979": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5647,
        5715
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 106,
      "value": "0x1F38"
    },
    "7982": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5678,
        5686
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7983": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5688,
        5692
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7984": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5694,
        5696
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7985": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5698,
        5700
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7986": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5702,
        5708
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7987": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5710,
        5714
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7988": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5647,
        5677
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x227F"
    },
    "7991": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5647,
        5715
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7992": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5647,
        5715
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7993": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "1"
    },
    "7994": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "1"
    },
    "7995": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "1"
    },
    "7996": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "1"
    },
    "7997": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "1"
    },
    "7998": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "1"
    },
    "7999": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "1"
    },
    "8000": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "o",
      "offset": [
        4925,
        5722
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8001": {
      "fn": "ERC1155._burn",
      "offset": [
        10248,
        10878
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8008": {
      "op": "SHL"
    },
    "8009": {
      "op": "SUB"
    },
    "8010": {
      "fn": "ERC1155._burn",
      "offset": [
        10370,
        10388
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 107
    },
    "8011": {
      "branch": 146,
      "fn": "ERC1155._burn",
      "offset": [
        10370,
        10388
      ],
      "op": "AND",
      "path": "1"
    },
    "8012": {
      "fn": "ERC1155._burn",
      "offset": [
        10362,
        10428
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA3"
    },
    "8015": {
      "branch": 146,
      "fn": "ERC1155._burn",
      "offset": [
        10362,
        10428
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8016": {
      "fn": "ERC1155._burn",
      "offset": [
        10362,
        10428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8018": {
      "fn": "ERC1155._burn",
      "offset": [
        10362,
        10428
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8025": {
      "op": "SHL"
    },
    "8026": {
      "fn": "ERC1155._burn",
      "offset": [
        10362,
        10428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8027": {
      "fn": "ERC1155._burn",
      "offset": [
        10362,
        10428
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8030": {
      "fn": "ERC1155._burn",
      "offset": [
        10362,
        10428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8032": {
      "fn": "ERC1155._burn",
      "offset": [
        10362,
        10428
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8033": {
      "fn": "ERC1155._burn",
      "offset": [
        10362,
        10428
      ],
      "op": "ADD",
      "path": "1"
    },
    "8034": {
      "op": "MSTORE"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "8037": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8039": {
      "op": "DUP3"
    },
    "8040": {
      "op": "ADD"
    },
    "8041": {
      "op": "MSTORE"
    },
    "8042": {
      "op": "PUSH32",
      "value": "0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472"
    },
    "8075": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8077": {
      "op": "DUP3"
    },
    "8078": {
      "op": "ADD"
    },
    "8079": {
      "op": "MSTORE"
    },
    "8080": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "8084": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "8086": {
      "op": "SHL"
    },
    "8087": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8089": {
      "op": "DUP3"
    },
    "8090": {
      "op": "ADD"
    },
    "8091": {
      "op": "MSTORE"
    },
    "8092": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8094": {
      "op": "ADD"
    },
    "8095": {
      "fn": "ERC1155._burn",
      "offset": [
        10362,
        10428
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "8098": {
      "op": "JUMP"
    },
    "8099": {
      "fn": "ERC1155._burn",
      "offset": [
        10362,
        10428
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8100": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8"
    },
    "8101": {
      "fn": "ERC1155._burn",
      "offset": [
        10481,
        10583
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 108,
      "value": "0x1FD3"
    },
    "8104": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8105": {
      "fn": "ERC1155._burn",
      "offset": [
        10512,
        10516
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8106": {
      "fn": "ERC1155._burn",
      "offset": [
        10439,
        10455
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8108": {
      "fn": "ERC1155._burn",
      "offset": [
        10530,
        10551
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FB4"
    },
    "8111": {
      "fn": "ERC1155._burn",
      "offset": [
        10548,
        10550
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8112": {
      "fn": "ERC1155._burn",
      "offset": [
        10530,
        10547
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2226"
    },
    "8115": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10530,
        10551
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8116": {
      "fn": "ERC1155._burn",
      "offset": [
        10530,
        10551
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8117": {
      "fn": "ERC1155._burn",
      "offset": [
        10553,
        10578
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FBD"
    },
    "8120": {
      "fn": "ERC1155._burn",
      "offset": [
        10571,
        10577
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8121": {
      "fn": "ERC1155._burn",
      "offset": [
        10553,
        10570
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2226"
    },
    "8124": {
      "fn": "ERC1155._burn",
      "jump": "i",
      "offset": [
        10553,
        10578
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8125": {
      "fn": "ERC1155._burn",
      "offset": [
        10553,
        10578
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8126": {
      "op": "POP"
    },
    "8127": {
      "op": "POP"
    },
    "8128": {
      "fn": "ERC1155._burn",
      "offset": [
        10481,
        10583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8130": {
      "fn": "ERC1155._burn",
      "offset": [
        10481,
        10583
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8131": {
      "fn": "ERC1155._burn",
      "offset": [
        10481,
        10583
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8132": {
      "fn": "ERC1155._burn",
      "offset": [
        10481,
        10583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8134": {
      "fn": "ERC1155._burn",
      "offset": [
        10481,
        10583
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8135": {
      "fn": "ERC1155._burn",
      "offset": [
        10481,
        10583
      ],
      "op": "ADD",
      "path": "1"
    },
    "8136": {
      "fn": "ERC1155._burn",
      "offset": [
        10481,
        10583
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8137": {
      "fn": "ERC1155._burn",
      "offset": [
        10481,
        10583
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8138": {
      "fn": "ERC1155._burn",
      "offset": [
        10481,
        10583
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8141": {
      "fn": "ERC1155._burn",
      "offset": [
        10481,
        10583
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8142": {
      "fn": "ERC1155._burn",
      "offset": [
        10481,
        10583
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8143": {
      "op": "POP"
    },
    "8144": {
      "op": "POP"
    },
    "8145": {
      "op": "POP"
    },
    "8146": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8147": {
      "fn": "ERC1155._burn",
      "offset": [
        10481,
        10583
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8148": {
      "fn": "ERC1155._burn",
      "offset": [
        10594,
        10613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8150": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10629
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8151": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10629
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8152": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10629
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8153": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8155": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10629
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8156": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10629
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8157": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10629
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8158": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10629
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8160": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10629
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8161": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10629
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8162": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10629
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8169": {
      "op": "SHL"
    },
    "8170": {
      "op": "SUB"
    },
    "8171": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10635
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8172": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10635
      ],
      "op": "AND",
      "path": "1"
    },
    "8173": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10635
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8174": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10635
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8175": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10635
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8176": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10635
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8177": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10635
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8178": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10635
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8179": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10635
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8180": {
      "fn": "ERC1155._burn",
      "offset": [
        10616,
        10635
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8181": {
      "fn": "ERC1155._burn",
      "offset": [
        10653,
        10674
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 109
    },
    "8182": {
      "fn": "ERC1155._burn",
      "offset": [
        10653,
        10674
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8183": {
      "fn": "ERC1155._burn",
      "offset": [
        10653,
        10674
      ],
      "op": "LT",
      "path": "1"
    },
    "8184": {
      "branch": 147,
      "fn": "ERC1155._burn",
      "offset": [
        10653,
        10674
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8185": {
      "fn": "ERC1155._burn",
      "offset": [
        10645,
        10715
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2050"
    },
    "8188": {
      "branch": 147,
      "fn": "ERC1155._burn",
      "offset": [
        10645,
        10715
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8189": {
      "fn": "ERC1155._burn",
      "offset": [
        10645,
        10715
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8191": {
      "fn": "ERC1155._burn",
      "offset": [
        10645,
        10715
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8192": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8196": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8198": {
      "op": "SHL"
    },
    "8199": {
      "fn": "ERC1155._burn",
      "offset": [
        10645,
        10715
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8200": {
      "fn": "ERC1155._burn",
      "offset": [
        10645,
        10715
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8203": {
      "fn": "ERC1155._burn",
      "offset": [
        10645,
        10715
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8205": {
      "fn": "ERC1155._burn",
      "offset": [
        10645,
        10715
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8206": {
      "fn": "ERC1155._burn",
      "offset": [
        10645,
        10715
      ],
      "op": "ADD",
      "path": "1"
    },
    "8207": {
      "op": "MSTORE"
    },
    "8208": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8210": {
      "op": "DUP1"
    },
    "8211": {
      "op": "DUP3"
    },
    "8212": {
      "op": "ADD"
    },
    "8213": {
      "op": "MSTORE"
    },
    "8214": {
      "op": "PUSH32",
      "value": "0x455243313135353A206275726E20616D6F756E7420657863656564732062616C"
    },
    "8247": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8249": {
      "op": "DUP3"
    },
    "8250": {
      "op": "ADD"
    },
    "8251": {
      "op": "MSTORE"
    },
    "8252": {
      "op": "PUSH4",
      "value": "0x616E6365"
    },
    "8257": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8259": {
      "op": "SHL"
    },
    "8260": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8262": {
      "op": "DUP3"
    },
    "8263": {
      "op": "ADD"
    },
    "8264": {
      "op": "MSTORE"
    },
    "8265": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8267": {
      "op": "ADD"
    },
    "8268": {
      "fn": "ERC1155._burn",
      "offset": [
        10645,
        10715
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "8271": {
      "op": "JUMP"
    },
    "8272": {
      "fn": "ERC1155._burn",
      "offset": [
        10645,
        10715
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8273": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10758
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 110,
      "value": "0x0"
    },
    "8275": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10762
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8276": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10762
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8277": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10762
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8278": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10762
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8280": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10762
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8281": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10762
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8282": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10762
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8283": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10762
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8285": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10762
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8286": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10762
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8287": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10762
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8294": {
      "op": "SHL"
    },
    "8295": {
      "op": "SUB"
    },
    "8296": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10768
      ],
      "op": "DUP10",
      "path": "1"
    },
    "8297": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10768
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8298": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10768
      ],
      "op": "AND",
      "path": "1"
    },
    "8299": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10768
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8300": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10768
      ],
      "op": "DUP7",
      "path": "1"
    },
    "8301": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10768
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8302": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10768
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8303": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10768
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8304": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10768
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8305": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10768
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8306": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10768
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8307": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10768
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "8308": {
      "fn": "ERC1155._burn",
      "offset": [
        10771,
        10791
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8309": {
      "fn": "ERC1155._burn",
      "offset": [
        10771,
        10791
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8310": {
      "fn": "ERC1155._burn",
      "offset": [
        10771,
        10791
      ],
      "op": "SUB",
      "path": "1"
    },
    "8311": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10791
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8312": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10791
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8313": {
      "fn": "ERC1155._burn",
      "offset": [
        10817,
        10871
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 111
    },
    "8314": {
      "fn": "ERC1155._burn",
      "offset": [
        10817,
        10871
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8315": {
      "op": "DUP10"
    },
    "8316": {
      "op": "DUP2"
    },
    "8317": {
      "op": "MSTORE"
    },
    "8318": {
      "op": "SWAP4"
    },
    "8319": {
      "op": "DUP5"
    },
    "8320": {
      "op": "ADD"
    },
    "8321": {
      "op": "DUP9"
    },
    "8322": {
      "op": "SWAP1"
    },
    "8323": {
      "op": "MSTORE"
    },
    "8324": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10768
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8325": {
      "fn": "ERC1155._burn",
      "offset": [
        10749,
        10768
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8326": {
      "fn": "ERC1155._burn",
      "offset": [
        10817,
        10871
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8327": {
      "fn": "ERC1155._burn",
      "offset": [
        10817,
        10871
      ],
      "op": "DUP7",
      "path": "1"
    },
    "8328": {
      "fn": "ERC1155._burn",
      "offset": [
        10817,
        10871
      ],
      "op": "AND",
      "path": "1"
    },
    "8329": {
      "fn": "ERC1155._burn",
      "offset": [
        10817,
        10871
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8330": {
      "fn": "ERC1155._burn",
      "offset": [
        10817,
        10871
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "8363": {
      "fn": "ERC1155._burn",
      "offset": [
        10817,
        10871
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8364": {
      "op": "ADD"
    },
    "8365": {
      "fn": "ERC1155._burn",
      "offset": [
        10817,
        10871
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8367": {
      "fn": "ERC1155._burn",
      "offset": [
        10817,
        10871
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8368": {
      "fn": "ERC1155._burn",
      "offset": [
        10817,
        10871
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8369": {
      "fn": "ERC1155._burn",
      "offset": [
        10817,
        10871
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8370": {
      "fn": "ERC1155._burn",
      "offset": [
        10817,
        10871
      ],
      "op": "SUB",
      "path": "1"
    },
    "8371": {
      "fn": "ERC1155._burn",
      "offset": [
        10817,
        10871
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8372": {
      "fn": "ERC1155._burn",
      "offset": [
        10817,
        10871
      ],
      "op": "LOG4",
      "path": "1"
    },
    "8373": {
      "fn": "ERC1155._burn",
      "offset": [
        10248,
        10878
      ],
      "op": "POP",
      "path": "1"
    },
    "8374": {
      "fn": "ERC1155._burn",
      "offset": [
        10248,
        10878
      ],
      "op": "POP",
      "path": "1"
    },
    "8375": {
      "fn": "ERC1155._burn",
      "offset": [
        10248,
        10878
      ],
      "op": "POP",
      "path": "1"
    },
    "8376": {
      "fn": "ERC1155._burn",
      "offset": [
        10248,
        10878
      ],
      "op": "POP",
      "path": "1"
    },
    "8377": {
      "fn": "ERC1155._burn",
      "offset": [
        10248,
        10878
      ],
      "op": "POP",
      "path": "1"
    },
    "8378": {
      "fn": "ERC1155._burn",
      "jump": "o",
      "offset": [
        10248,
        10878
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8379": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14282,
        15074
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8386": {
      "op": "SHL"
    },
    "8387": {
      "op": "SUB"
    },
    "8388": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14514,
        14527
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8389": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14514,
        14527
      ],
      "op": "AND",
      "path": "1"
    },
    "8390": {
      "op": "EXTCODESIZE"
    },
    "8391": {
      "op": "ISZERO"
    },
    "8392": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14510,
        15068
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BCC"
    },
    "8395": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14510,
        15068
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8396": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8398": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8399": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "8404": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8406": {
      "op": "SHL"
    },
    "8407": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8408": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8415": {
      "op": "SHL"
    },
    "8416": {
      "op": "SUB"
    },
    "8417": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14592
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8418": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14592
      ],
      "op": "AND",
      "path": "1"
    },
    "8419": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14592
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8420": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14592
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBC197C81"
    },
    "8425": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14592
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8426": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20FF"
    },
    "8429": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8430": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14593,
        14601
      ],
      "op": "DUP10",
      "path": "1"
    },
    "8431": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14593,
        14601
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8432": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14603,
        14607
      ],
      "op": "DUP10",
      "path": "1"
    },
    "8433": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14603,
        14607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8434": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14609,
        14612
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8435": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14609,
        14612
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8436": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14614,
        14621
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8437": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14614,
        14621
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8438": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14623,
        14627
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8439": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14623,
        14627
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8440": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8442": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ADD",
      "path": "1"
    },
    "8443": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A24"
    },
    "8446": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8447": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8448": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8450": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8452": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8453": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8454": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8455": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SUB",
      "path": "1"
    },
    "8456": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8457": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8459": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8460": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8461": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "8462": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8463": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8464": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8465": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2119"
    },
    "8468": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8469": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8471": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8472": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8473": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8474": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "POP",
      "path": "1"
    },
    "8475": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "GAS",
      "path": "1"
    },
    "8476": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "CALL",
      "path": "1"
    },
    "8477": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8478": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "POP",
      "path": "1"
    },
    "8479": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "POP",
      "path": "1"
    },
    "8480": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "POP",
      "path": "1"
    },
    "8481": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8482": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8483": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2149"
    },
    "8486": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8487": {
      "op": "POP"
    },
    "8488": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8490": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8491": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8492": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8494": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8495": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8496": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8497": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ADD",
      "path": "1"
    },
    "8498": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8500": {
      "op": "NOT"
    },
    "8501": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "AND",
      "path": "1"
    },
    "8502": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8503": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ADD",
      "path": "1"
    },
    "8504": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8505": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8506": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8507": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2146"
    },
    "8510": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8511": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8512": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ADD",
      "path": "1"
    },
    "8513": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8514": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28A9"
    },
    "8517": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8518": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8519": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8521": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8522": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21F6"
    },
    "8525": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8526": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2155"
    },
    "8529": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EA3"
    },
    "8532": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8533": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8534": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8535": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8C379A0"
    },
    "8540": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "EQ",
      "path": "1"
    },
    "8541": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8542": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x218F"
    },
    "8545": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8546": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "POP",
      "path": "1"
    },
    "8547": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x216A"
    },
    "8550": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EBB"
    },
    "8553": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8554": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8555": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8556": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2175"
    },
    "8559": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8560": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "POP",
      "path": "1"
    },
    "8561": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2191"
    },
    "8564": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8565": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8566": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14934,
        14940
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 112
    },
    "8567": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8569": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8570": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8574": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8576": {
      "op": "SHL"
    },
    "8577": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8578": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8579": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8581": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "ADD",
      "path": "1"
    },
    "8582": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "8585": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8586": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8587": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B72"
    },
    "8590": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14927,
        14941
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8591": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8592": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "POP",
      "path": "1"
    },
    "8593": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8594": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 113,
      "value": "0x40"
    },
    "8596": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8597": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8601": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8603": {
      "op": "SHL"
    },
    "8604": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8605": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8608": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8610": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8611": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "ADD",
      "path": "1"
    },
    "8612": {
      "op": "MSTORE"
    },
    "8613": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "8615": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8617": {
      "op": "DUP3"
    },
    "8618": {
      "op": "ADD"
    },
    "8619": {
      "op": "MSTORE"
    },
    "8620": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
    },
    "8653": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8655": {
      "op": "DUP3"
    },
    "8656": {
      "op": "ADD"
    },
    "8657": {
      "op": "MSTORE"
    },
    "8658": {
      "op": "PUSH20",
      "value": "0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "8679": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "8681": {
      "op": "SHL"
    },
    "8682": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8684": {
      "op": "DUP3"
    },
    "8685": {
      "op": "ADD"
    },
    "8686": {
      "op": "MSTORE"
    },
    "8687": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8689": {
      "op": "ADD"
    },
    "8690": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "8693": {
      "op": "JUMP"
    },
    "8694": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8699": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8701": {
      "op": "SHL"
    },
    "8702": {
      "op": "SUB"
    },
    "8703": {
      "op": "NOT"
    },
    "8704": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14707,
        14767
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8705": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14707,
        14767
      ],
      "op": "AND",
      "path": "1"
    },
    "8706": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "8711": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8713": {
      "op": "SHL"
    },
    "8714": {
      "branch": 148,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14707,
        14767
      ],
      "op": "EQ",
      "path": "1"
    },
    "8715": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14703,
        14860
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F38"
    },
    "8718": {
      "branch": 148,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14703,
        14860
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8719": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 114,
      "value": "0x40"
    },
    "8721": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8722": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8726": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8728": {
      "op": "SHL"
    },
    "8729": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8730": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8731": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8733": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "ADD",
      "path": "1"
    },
    "8734": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "8737": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8738": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B85"
    },
    "8741": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14791,
        14841
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8742": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15080,
        15273
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8743": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8745": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8746": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8747": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15213,
        15214
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8749": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8750": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8751": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8752": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8753": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8754": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "ADD",
      "path": "1"
    },
    "8755": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8756": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8757": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8758": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15146,
        15162
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "8760": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15146,
        15162
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8761": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15174,
        15196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8763": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15174,
        15196
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8764": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8765": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8767": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8768": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8769": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "ADD",
      "path": "1"
    },
    "8770": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8771": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8772": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8773": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8774": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "CALLDATACOPY",
      "path": "1"
    },
    "8775": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "ADD",
      "path": "1"
    },
    "8776": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8777": {
      "op": "POP"
    },
    "8778": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "POP",
      "path": "1"
    },
    "8779": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15174,
        15215
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8780": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15174,
        15215
      ],
      "op": "POP",
      "path": "1"
    },
    "8781": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15236,
        15243
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 115
    },
    "8782": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15230
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8783": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15231,
        15232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8785": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8786": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8787": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8788": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "LT",
      "path": "1"
    },
    "8789": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x226E"
    },
    "8792": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8793": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8798": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8800": {
      "op": "SHL"
    },
    "8801": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8803": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8804": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "8806": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8808": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8809": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "8811": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8813": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8814": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8815": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8817": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8818": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8819": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "MUL",
      "path": "1"
    },
    "8820": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8821": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8822": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8823": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "ADD",
      "path": "1"
    },
    "8824": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "ADD",
      "path": "1"
    },
    "8825": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15243
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8826": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15261,
        15266
      ],
      "op": "SWAP3",
      "path": "1",
      "statement": 116
    },
    "8827": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15080,
        15273
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8828": {
      "op": "POP"
    },
    "8829": {
      "op": "POP"
    },
    "8830": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "o",
      "offset": [
        15080,
        15273
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8831": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13551,
        14276
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8838": {
      "op": "SHL"
    },
    "8839": {
      "op": "SUB"
    },
    "8840": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13758,
        13771
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8841": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13758,
        13771
      ],
      "op": "AND",
      "path": "1"
    },
    "8842": {
      "op": "EXTCODESIZE"
    },
    "8843": {
      "op": "ISZERO"
    },
    "8844": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13754,
        14270
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BCC"
    },
    "8847": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13754,
        14270
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8848": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8850": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8851": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8858": {
      "op": "SHL"
    },
    "8859": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8860": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8867": {
      "op": "SHL"
    },
    "8868": {
      "op": "SUB"
    },
    "8869": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13831
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8870": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13831
      ],
      "op": "AND",
      "path": "1"
    },
    "8871": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13831
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8872": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13831
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF23A6E61"
    },
    "8877": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13831
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8878": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22C3"
    },
    "8881": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8882": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13832,
        13840
      ],
      "op": "DUP10",
      "path": "1"
    },
    "8883": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13832,
        13840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8884": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13842,
        13846
      ],
      "op": "DUP10",
      "path": "1"
    },
    "8885": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13842,
        13846
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8886": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13848,
        13850
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8887": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13848,
        13850
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8888": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13852,
        13858
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8889": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13852,
        13858
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8890": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13860,
        13864
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8891": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13860,
        13864
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8892": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8894": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ADD",
      "path": "1"
    },
    "8895": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A82"
    },
    "8898": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8899": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8900": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8902": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8904": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8905": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8906": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8907": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SUB",
      "path": "1"
    },
    "8908": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8909": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8911": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8912": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8913": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "8914": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8915": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8916": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8917": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22DD"
    },
    "8920": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8921": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8923": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8924": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8925": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8926": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "POP",
      "path": "1"
    },
    "8927": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "GAS",
      "path": "1"
    },
    "8928": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "CALL",
      "path": "1"
    },
    "8929": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8930": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "POP",
      "path": "1"
    },
    "8931": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "POP",
      "path": "1"
    },
    "8932": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "POP",
      "path": "1"
    },
    "8933": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8934": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8935": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x230D"
    },
    "8938": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8939": {
      "op": "POP"
    },
    "8940": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8942": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8943": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8944": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8946": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8947": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8948": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8949": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ADD",
      "path": "1"
    },
    "8950": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8952": {
      "op": "NOT"
    },
    "8953": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "AND",
      "path": "1"
    },
    "8954": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8955": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ADD",
      "path": "1"
    },
    "8956": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8957": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8958": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8959": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x230A"
    },
    "8962": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8963": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8964": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ADD",
      "path": "1"
    },
    "8965": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8966": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28A9"
    },
    "8969": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8970": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8971": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8973": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8974": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13789,
        14260
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2319"
    },
    "8977": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13789,
        14260
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8978": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13789,
        14260
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2155"
    },
    "8981": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13789,
        14260
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EA3"
    },
    "8984": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13789,
        14260
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8985": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13789,
        14260
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8990": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8992": {
      "op": "SHL"
    },
    "8993": {
      "op": "SUB"
    },
    "8994": {
      "op": "NOT"
    },
    "8995": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13914,
        13969
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8996": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13914,
        13969
      ],
      "op": "AND",
      "path": "1"
    },
    "8997": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "9002": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9004": {
      "op": "SHL"
    },
    "9005": {
      "branch": 149,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13914,
        13969
      ],
      "op": "EQ",
      "path": "1"
    },
    "9006": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13910,
        14062
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F38"
    },
    "9009": {
      "branch": 149,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13910,
        14062
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9010": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 117,
      "value": "0x40"
    },
    "9012": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9013": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9017": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9019": {
      "op": "SHL"
    },
    "9020": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9021": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9022": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9024": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "ADD",
      "path": "1"
    },
    "9025": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AC"
    },
    "9028": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9029": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B85"
    },
    "9032": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13993,
        14043
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9033": {
      "op": "JUMPDEST"
    },
    "9034": {
      "op": "POP"
    },
    "9035": {
      "op": "DUP1"
    },
    "9036": {
      "op": "SLOAD"
    },
    "9037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9039": {
      "op": "DUP3"
    },
    "9040": {
      "op": "SSTORE"
    },
    "9041": {
      "op": "SWAP1"
    },
    "9042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9044": {
      "op": "MSTORE"
    },
    "9045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9049": {
      "op": "KECCAK256"
    },
    "9050": {
      "op": "SWAP1"
    },
    "9051": {
      "op": "DUP2"
    },
    "9052": {
      "op": "ADD"
    },
    "9053": {
      "op": "SWAP1"
    },
    "9054": {
      "op": "PUSH2",
      "value": "0x1231"
    },
    "9057": {
      "op": "SWAP2"
    },
    "9058": {
      "op": "SWAP1"
    },
    "9059": {
      "op": "PUSH2",
      "value": "0x23EB"
    },
    "9062": {
      "jump": "i",
      "op": "JUMP"
    },
    "9063": {
      "op": "JUMPDEST"
    },
    "9064": {
      "op": "DUP3"
    },
    "9065": {
      "op": "DUP1"
    },
    "9066": {
      "op": "SLOAD"
    },
    "9067": {
      "op": "PUSH2",
      "value": "0x2373"
    },
    "9070": {
      "op": "SWAP1"
    },
    "9071": {
      "op": "PUSH2",
      "value": "0x2DF4"
    },
    "9074": {
      "jump": "i",
      "op": "JUMP"
    },
    "9075": {
      "op": "JUMPDEST"
    },
    "9076": {
      "op": "SWAP1"
    },
    "9077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9079": {
      "op": "MSTORE"
    },
    "9080": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9084": {
      "op": "KECCAK256"
    },
    "9085": {
      "op": "SWAP1"
    },
    "9086": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9088": {
      "op": "ADD"
    },
    "9089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9091": {
      "op": "SWAP1"
    },
    "9092": {
      "op": "DIV"
    },
    "9093": {
      "op": "DUP2"
    },
    "9094": {
      "op": "ADD"
    },
    "9095": {
      "op": "SWAP3"
    },
    "9096": {
      "op": "DUP3"
    },
    "9097": {
      "op": "PUSH2",
      "value": "0x2395"
    },
    "9100": {
      "op": "JUMPI"
    },
    "9101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9103": {
      "op": "DUP6"
    },
    "9104": {
      "op": "SSTORE"
    },
    "9105": {
      "op": "PUSH2",
      "value": "0x23DB"
    },
    "9108": {
      "op": "JUMP"
    },
    "9109": {
      "op": "JUMPDEST"
    },
    "9110": {
      "op": "DUP3"
    },
    "9111": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9113": {
      "op": "LT"
    },
    "9114": {
      "op": "PUSH2",
      "value": "0x23AE"
    },
    "9117": {
      "op": "JUMPI"
    },
    "9118": {
      "op": "DUP1"
    },
    "9119": {
      "op": "MLOAD"
    },
    "9120": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9122": {
      "op": "NOT"
    },
    "9123": {
      "op": "AND"
    },
    "9124": {
      "op": "DUP4"
    },
    "9125": {
      "op": "DUP1"
    },
    "9126": {
      "op": "ADD"
    },
    "9127": {
      "op": "OR"
    },
    "9128": {
      "op": "DUP6"
    },
    "9129": {
      "op": "SSTORE"
    },
    "9130": {
      "op": "PUSH2",
      "value": "0x23DB"
    },
    "9133": {
      "op": "JUMP"
    },
    "9134": {
      "op": "JUMPDEST"
    },
    "9135": {
      "op": "DUP3"
    },
    "9136": {
      "op": "DUP1"
    },
    "9137": {
      "op": "ADD"
    },
    "9138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9140": {
      "op": "ADD"
    },
    "9141": {
      "op": "DUP6"
    },
    "9142": {
      "op": "SSTORE"
    },
    "9143": {
      "op": "DUP3"
    },
    "9144": {
      "op": "ISZERO"
    },
    "9145": {
      "op": "PUSH2",
      "value": "0x23DB"
    },
    "9148": {
      "op": "JUMPI"
    },
    "9149": {
      "op": "SWAP2"
    },
    "9150": {
      "op": "DUP3"
    },
    "9151": {
      "op": "ADD"
    },
    "9152": {
      "op": "JUMPDEST"
    },
    "9153": {
      "op": "DUP3"
    },
    "9154": {
      "op": "DUP2"
    },
    "9155": {
      "op": "GT"
    },
    "9156": {
      "op": "ISZERO"
    },
    "9157": {
      "op": "PUSH2",
      "value": "0x23DB"
    },
    "9160": {
      "op": "JUMPI"
    },
    "9161": {
      "op": "DUP3"
    },
    "9162": {
      "op": "MLOAD"
    },
    "9163": {
      "op": "DUP3"
    },
    "9164": {
      "op": "SSTORE"
    },
    "9165": {
      "op": "SWAP2"
    },
    "9166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9168": {
      "op": "ADD"
    },
    "9169": {
      "op": "SWAP2"
    },
    "9170": {
      "op": "SWAP1"
    },
    "9171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9173": {
      "op": "ADD"
    },
    "9174": {
      "op": "SWAP1"
    },
    "9175": {
      "op": "PUSH2",
      "value": "0x23C0"
    },
    "9178": {
      "op": "JUMP"
    },
    "9179": {
      "op": "JUMPDEST"
    },
    "9180": {
      "op": "POP"
    },
    "9181": {
      "op": "PUSH2",
      "value": "0x23E7"
    },
    "9184": {
      "op": "SWAP3"
    },
    "9185": {
      "op": "SWAP2"
    },
    "9186": {
      "op": "POP"
    },
    "9187": {
      "op": "PUSH2",
      "value": "0x23EB"
    },
    "9190": {
      "jump": "i",
      "op": "JUMP"
    },
    "9191": {
      "op": "JUMPDEST"
    },
    "9192": {
      "op": "POP"
    },
    "9193": {
      "op": "SWAP1"
    },
    "9194": {
      "jump": "o",
      "op": "JUMP"
    },
    "9195": {
      "op": "JUMPDEST"
    },
    "9196": {
      "op": "JUMPDEST"
    },
    "9197": {
      "op": "DUP1"
    },
    "9198": {
      "op": "DUP3"
    },
    "9199": {
      "op": "GT"
    },
    "9200": {
      "op": "ISZERO"
    },
    "9201": {
      "op": "PUSH2",
      "value": "0x23E7"
    },
    "9204": {
      "op": "JUMPI"
    },
    "9205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9207": {
      "op": "DUP2"
    },
    "9208": {
      "op": "SSTORE"
    },
    "9209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9211": {
      "op": "ADD"
    },
    "9212": {
      "op": "PUSH2",
      "value": "0x23EC"
    },
    "9215": {
      "op": "JUMP"
    },
    "9216": {
      "op": "JUMPDEST"
    },
    "9217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9219": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9228": {
      "op": "DUP4"
    },
    "9229": {
      "op": "GT"
    },
    "9230": {
      "op": "ISZERO"
    },
    "9231": {
      "op": "PUSH2",
      "value": "0x241A"
    },
    "9234": {
      "op": "JUMPI"
    },
    "9235": {
      "op": "PUSH2",
      "value": "0x241A"
    },
    "9238": {
      "op": "PUSH2",
      "value": "0x2E8D"
    },
    "9241": {
      "jump": "i",
      "op": "JUMP"
    },
    "9242": {
      "op": "JUMPDEST"
    },
    "9243": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9245": {
      "op": "MLOAD"
    },
    "9246": {
      "op": "PUSH2",
      "value": "0x2431"
    },
    "9249": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9251": {
      "op": "DUP6"
    },
    "9252": {
      "op": "ADD"
    },
    "9253": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9255": {
      "op": "NOT"
    },
    "9256": {
      "op": "AND"
    },
    "9257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9259": {
      "op": "ADD"
    },
    "9260": {
      "op": "DUP3"
    },
    "9261": {
      "op": "PUSH2",
      "value": "0x2E2F"
    },
    "9264": {
      "jump": "i",
      "op": "JUMP"
    },
    "9265": {
      "op": "JUMPDEST"
    },
    "9266": {
      "op": "DUP1"
    },
    "9267": {
      "op": "SWAP2"
    },
    "9268": {
      "op": "POP"
    },
    "9269": {
      "op": "DUP4"
    },
    "9270": {
      "op": "DUP2"
    },
    "9271": {
      "op": "MSTORE"
    },
    "9272": {
      "op": "DUP5"
    },
    "9273": {
      "op": "DUP5"
    },
    "9274": {
      "op": "DUP5"
    },
    "9275": {
      "op": "ADD"
    },
    "9276": {
      "op": "GT"
    },
    "9277": {
      "op": "ISZERO"
    },
    "9278": {
      "op": "PUSH2",
      "value": "0x2446"
    },
    "9281": {
      "op": "JUMPI"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9284": {
      "op": "DUP1"
    },
    "9285": {
      "op": "REVERT"
    },
    "9286": {
      "op": "JUMPDEST"
    },
    "9287": {
      "op": "DUP4"
    },
    "9288": {
      "op": "DUP4"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9291": {
      "op": "DUP4"
    },
    "9292": {
      "op": "ADD"
    },
    "9293": {
      "op": "CALLDATACOPY"
    },
    "9294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9298": {
      "op": "DUP6"
    },
    "9299": {
      "op": "DUP4"
    },
    "9300": {
      "op": "ADD"
    },
    "9301": {
      "op": "ADD"
    },
    "9302": {
      "op": "MSTORE"
    },
    "9303": {
      "op": "POP"
    },
    "9304": {
      "op": "SWAP4"
    },
    "9305": {
      "op": "SWAP3"
    },
    "9306": {
      "op": "POP"
    },
    "9307": {
      "op": "POP"
    },
    "9308": {
      "op": "POP"
    },
    "9309": {
      "jump": "o",
      "op": "JUMP"
    },
    "9310": {
      "op": "JUMPDEST"
    },
    "9311": {
      "op": "DUP1"
    },
    "9312": {
      "op": "CALLDATALOAD"
    },
    "9313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9319": {
      "op": "SHL"
    },
    "9320": {
      "op": "SUB"
    },
    "9321": {
      "op": "DUP2"
    },
    "9322": {
      "op": "AND"
    },
    "9323": {
      "op": "DUP2"
    },
    "9324": {
      "op": "EQ"
    },
    "9325": {
      "op": "PUSH2",
      "value": "0x15D5"
    },
    "9328": {
      "op": "JUMPI"
    },
    "9329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9331": {
      "op": "DUP1"
    },
    "9332": {
      "op": "REVERT"
    },
    "9333": {
      "op": "JUMPDEST"
    },
    "9334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9336": {
      "op": "DUP3"
    },
    "9337": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9339": {
      "op": "DUP4"
    },
    "9340": {
      "op": "ADD"
    },
    "9341": {
      "op": "SLT"
    },
    "9342": {
      "op": "PUSH2",
      "value": "0x2485"
    },
    "9345": {
      "op": "JUMPI"
    },
    "9346": {
      "op": "DUP1"
    },
    "9347": {
      "op": "DUP2"
    },
    "9348": {
      "op": "REVERT"
    },
    "9349": {
      "op": "JUMPDEST"
    },
    "9350": {
      "op": "DUP2"
    },
    "9351": {
      "op": "CALLDATALOAD"
    },
    "9352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9354": {
      "op": "PUSH2",
      "value": "0x2492"
    },
    "9357": {
      "op": "DUP3"
    },
    "9358": {
      "op": "PUSH2",
      "value": "0x2D8F"
    },
    "9361": {
      "jump": "i",
      "op": "JUMP"
    },
    "9362": {
      "op": "JUMPDEST"
    },
    "9363": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9365": {
      "op": "MLOAD"
    },
    "9366": {
      "op": "PUSH2",
      "value": "0x249F"
    },
    "9369": {
      "op": "DUP3"
    },
    "9370": {
      "op": "DUP3"
    },
    "9371": {
      "op": "PUSH2",
      "value": "0x2E2F"
    },
    "9374": {
      "jump": "i",
      "op": "JUMP"
    },
    "9375": {
      "op": "JUMPDEST"
    },
    "9376": {
      "op": "DUP4"
    },
    "9377": {
      "op": "DUP2"
    },
    "9378": {
      "op": "MSTORE"
    },
    "9379": {
      "op": "DUP3"
    },
    "9380": {
      "op": "DUP2"
    },
    "9381": {
      "op": "ADD"
    },
    "9382": {
      "op": "SWAP2"
    },
    "9383": {
      "op": "POP"
    },
    "9384": {
      "op": "DUP6"
    },
    "9385": {
      "op": "DUP4"
    },
    "9386": {
      "op": "ADD"
    },
    "9387": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9389": {
      "op": "DUP6"
    },
    "9390": {
      "op": "SWAP1"
    },
    "9391": {
      "op": "SHL"
    },
    "9392": {
      "op": "DUP8"
    },
    "9393": {
      "op": "ADD"
    },
    "9394": {
      "op": "DUP5"
    },
    "9395": {
      "op": "ADD"
    },
    "9396": {
      "op": "DUP9"
    },
    "9397": {
      "op": "LT"
    },
    "9398": {
      "op": "ISZERO"
    },
    "9399": {
      "op": "PUSH2",
      "value": "0x24BE"
    },
    "9402": {
      "op": "JUMPI"
    },
    "9403": {
      "op": "DUP6"
    },
    "9404": {
      "op": "DUP7"
    },
    "9405": {
      "op": "REVERT"
    },
    "9406": {
      "op": "JUMPDEST"
    },
    "9407": {
      "op": "DUP6"
    },
    "9408": {
      "op": "JUMPDEST"
    },
    "9409": {
      "op": "DUP6"
    },
    "9410": {
      "op": "DUP2"
    },
    "9411": {
      "op": "LT"
    },
    "9412": {
      "op": "ISZERO"
    },
    "9413": {
      "op": "PUSH2",
      "value": "0x24DC"
    },
    "9416": {
      "op": "JUMPI"
    },
    "9417": {
      "op": "DUP2"
    },
    "9418": {
      "op": "CALLDATALOAD"
    },
    "9419": {
      "op": "DUP5"
    },
    "9420": {
      "op": "MSTORE"
    },
    "9421": {
      "op": "SWAP3"
    },
    "9422": {
      "op": "DUP5"
    },
    "9423": {
      "op": "ADD"
    },
    "9424": {
      "op": "SWAP3"
    },
    "9425": {
      "op": "SWAP1"
    },
    "9426": {
      "op": "DUP5"
    },
    "9427": {
      "op": "ADD"
    },
    "9428": {
      "op": "SWAP1"
    },
    "9429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9431": {
      "op": "ADD"
    },
    "9432": {
      "op": "PUSH2",
      "value": "0x24C0"
    },
    "9435": {
      "op": "JUMP"
    },
    "9436": {
      "op": "JUMPDEST"
    },
    "9437": {
      "op": "POP"
    },
    "9438": {
      "op": "SWAP1"
    },
    "9439": {
      "op": "SWAP8"
    },
    "9440": {
      "op": "SWAP7"
    },
    "9441": {
      "op": "POP"
    },
    "9442": {
      "op": "POP"
    },
    "9443": {
      "op": "POP"
    },
    "9444": {
      "op": "POP"
    },
    "9445": {
      "op": "POP"
    },
    "9446": {
      "op": "POP"
    },
    "9447": {
      "op": "POP"
    },
    "9448": {
      "jump": "o",
      "op": "JUMP"
    },
    "9449": {
      "op": "JUMPDEST"
    },
    "9450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9452": {
      "op": "DUP3"
    },
    "9453": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9455": {
      "op": "DUP4"
    },
    "9456": {
      "op": "ADD"
    },
    "9457": {
      "op": "SLT"
    },
    "9458": {
      "op": "PUSH2",
      "value": "0x24F9"
    },
    "9461": {
      "op": "JUMPI"
    },
    "9462": {
      "op": "DUP1"
    },
    "9463": {
      "op": "DUP2"
    },
    "9464": {
      "op": "REVERT"
    },
    "9465": {
      "op": "JUMPDEST"
    },
    "9466": {
      "op": "PUSH2",
      "value": "0x2508"
    },
    "9469": {
      "op": "DUP4"
    },
    "9470": {
      "op": "DUP4"
    },
    "9471": {
      "op": "CALLDATALOAD"
    },
    "9472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9474": {
      "op": "DUP6"
    },
    "9475": {
      "op": "ADD"
    },
    "9476": {
      "op": "PUSH2",
      "value": "0x2400"
    },
    "9479": {
      "jump": "i",
      "op": "JUMP"
    },
    "9480": {
      "op": "JUMPDEST"
    },
    "9481": {
      "op": "SWAP4"
    },
    "9482": {
      "op": "SWAP3"
    },
    "9483": {
      "op": "POP"
    },
    "9484": {
      "op": "POP"
    },
    "9485": {
      "op": "POP"
    },
    "9486": {
      "jump": "o",
      "op": "JUMP"
    },
    "9487": {
      "op": "JUMPDEST"
    },
    "9488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9492": {
      "op": "DUP3"
    },
    "9493": {
      "op": "DUP5"
    },
    "9494": {
      "op": "SUB"
    },
    "9495": {
      "op": "SLT"
    },
    "9496": {
      "op": "ISZERO"
    },
    "9497": {
      "op": "PUSH2",
      "value": "0x2520"
    },
    "9500": {
      "op": "JUMPI"
    },
    "9501": {
      "op": "DUP1"
    },
    "9502": {
      "op": "DUP2"
    },
    "9503": {
      "op": "REVERT"
    },
    "9504": {
      "op": "JUMPDEST"
    },
    "9505": {
      "op": "PUSH2",
      "value": "0x2508"
    },
    "9508": {
      "op": "DUP3"
    },
    "9509": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "9512": {
      "jump": "i",
      "op": "JUMP"
    },
    "9513": {
      "op": "JUMPDEST"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9516": {
      "op": "DUP1"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9519": {
      "op": "DUP4"
    },
    "9520": {
      "op": "DUP6"
    },
    "9521": {
      "op": "SUB"
    },
    "9522": {
      "op": "SLT"
    },
    "9523": {
      "op": "ISZERO"
    },
    "9524": {
      "op": "PUSH2",
      "value": "0x253B"
    },
    "9527": {
      "op": "JUMPI"
    },
    "9528": {
      "op": "DUP1"
    },
    "9529": {
      "op": "DUP2"
    },
    "9530": {
      "op": "REVERT"
    },
    "9531": {
      "op": "JUMPDEST"
    },
    "9532": {
      "op": "PUSH2",
      "value": "0x2544"
    },
    "9535": {
      "op": "DUP4"
    },
    "9536": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "9539": {
      "jump": "i",
      "op": "JUMP"
    },
    "9540": {
      "op": "JUMPDEST"
    },
    "9541": {
      "op": "SWAP2"
    },
    "9542": {
      "op": "POP"
    },
    "9543": {
      "op": "PUSH2",
      "value": "0x2552"
    },
    "9546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9548": {
      "op": "DUP5"
    },
    "9549": {
      "op": "ADD"
    },
    "9550": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "9553": {
      "jump": "i",
      "op": "JUMP"
    },
    "9554": {
      "op": "JUMPDEST"
    },
    "9555": {
      "op": "SWAP1"
    },
    "9556": {
      "op": "POP"
    },
    "9557": {
      "op": "SWAP3"
    },
    "9558": {
      "op": "POP"
    },
    "9559": {
      "op": "SWAP3"
    },
    "9560": {
      "op": "SWAP1"
    },
    "9561": {
      "op": "POP"
    },
    "9562": {
      "jump": "o",
      "op": "JUMP"
    },
    "9563": {
      "op": "JUMPDEST"
    },
    "9564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9566": {
      "op": "DUP1"
    },
    "9567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9569": {
      "op": "DUP1"
    },
    "9570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9574": {
      "op": "DUP7"
    },
    "9575": {
      "op": "DUP9"
    },
    "9576": {
      "op": "SUB"
    },
    "9577": {
      "op": "SLT"
    },
    "9578": {
      "op": "ISZERO"
    },
    "9579": {
      "op": "PUSH2",
      "value": "0x2572"
    },
    "9582": {
      "op": "JUMPI"
    },
    "9583": {
      "op": "DUP1"
    },
    "9584": {
      "op": "DUP2"
    },
    "9585": {
      "op": "REVERT"
    },
    "9586": {
      "op": "JUMPDEST"
    },
    "9587": {
      "op": "PUSH2",
      "value": "0x257B"
    },
    "9590": {
      "op": "DUP7"
    },
    "9591": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "9594": {
      "jump": "i",
      "op": "JUMP"
    },
    "9595": {
      "op": "JUMPDEST"
    },
    "9596": {
      "op": "SWAP5"
    },
    "9597": {
      "op": "POP"
    },
    "9598": {
      "op": "PUSH2",
      "value": "0x2589"
    },
    "9601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9603": {
      "op": "DUP8"
    },
    "9604": {
      "op": "ADD"
    },
    "9605": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "9608": {
      "jump": "i",
      "op": "JUMP"
    },
    "9609": {
      "op": "JUMPDEST"
    },
    "9610": {
      "op": "SWAP4"
    },
    "9611": {
      "op": "POP"
    },
    "9612": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9614": {
      "op": "DUP7"
    },
    "9615": {
      "op": "ADD"
    },
    "9616": {
      "op": "CALLDATALOAD"
    },
    "9617": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9626": {
      "op": "DUP1"
    },
    "9627": {
      "op": "DUP3"
    },
    "9628": {
      "op": "GT"
    },
    "9629": {
      "op": "ISZERO"
    },
    "9630": {
      "op": "PUSH2",
      "value": "0x25A5"
    },
    "9633": {
      "op": "JUMPI"
    },
    "9634": {
      "op": "DUP3"
    },
    "9635": {
      "op": "DUP4"
    },
    "9636": {
      "op": "REVERT"
    },
    "9637": {
      "op": "JUMPDEST"
    },
    "9638": {
      "op": "PUSH2",
      "value": "0x25B1"
    },
    "9641": {
      "op": "DUP10"
    },
    "9642": {
      "op": "DUP4"
    },
    "9643": {
      "op": "DUP11"
    },
    "9644": {
      "op": "ADD"
    },
    "9645": {
      "op": "PUSH2",
      "value": "0x2475"
    },
    "9648": {
      "jump": "i",
      "op": "JUMP"
    },
    "9649": {
      "op": "JUMPDEST"
    },
    "9650": {
      "op": "SWAP5"
    },
    "9651": {
      "op": "POP"
    },
    "9652": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9654": {
      "op": "DUP9"
    },
    "9655": {
      "op": "ADD"
    },
    "9656": {
      "op": "CALLDATALOAD"
    },
    "9657": {
      "op": "SWAP2"
    },
    "9658": {
      "op": "POP"
    },
    "9659": {
      "op": "DUP1"
    },
    "9660": {
      "op": "DUP3"
    },
    "9661": {
      "op": "GT"
    },
    "9662": {
      "op": "ISZERO"
    },
    "9663": {
      "op": "PUSH2",
      "value": "0x25C6"
    },
    "9666": {
      "op": "JUMPI"
    },
    "9667": {
      "op": "DUP3"
    },
    "9668": {
      "op": "DUP4"
    },
    "9669": {
      "op": "REVERT"
    },
    "9670": {
      "op": "JUMPDEST"
    },
    "9671": {
      "op": "PUSH2",
      "value": "0x25D2"
    },
    "9674": {
      "op": "DUP10"
    },
    "9675": {
      "op": "DUP4"
    },
    "9676": {
      "op": "DUP11"
    },
    "9677": {
      "op": "ADD"
    },
    "9678": {
      "op": "PUSH2",
      "value": "0x2475"
    },
    "9681": {
      "jump": "i",
      "op": "JUMP"
    },
    "9682": {
      "op": "JUMPDEST"
    },
    "9683": {
      "op": "SWAP4"
    },
    "9684": {
      "op": "POP"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9687": {
      "op": "DUP9"
    },
    "9688": {
      "op": "ADD"
    },
    "9689": {
      "op": "CALLDATALOAD"
    },
    "9690": {
      "op": "SWAP2"
    },
    "9691": {
      "op": "POP"
    },
    "9692": {
      "op": "DUP1"
    },
    "9693": {
      "op": "DUP3"
    },
    "9694": {
      "op": "GT"
    },
    "9695": {
      "op": "ISZERO"
    },
    "9696": {
      "op": "PUSH2",
      "value": "0x25E7"
    },
    "9699": {
      "op": "JUMPI"
    },
    "9700": {
      "op": "DUP3"
    },
    "9701": {
      "op": "DUP4"
    },
    "9702": {
      "op": "REVERT"
    },
    "9703": {
      "op": "JUMPDEST"
    },
    "9704": {
      "op": "POP"
    },
    "9705": {
      "op": "PUSH2",
      "value": "0x25F4"
    },
    "9708": {
      "op": "DUP9"
    },
    "9709": {
      "op": "DUP3"
    },
    "9710": {
      "op": "DUP10"
    },
    "9711": {
      "op": "ADD"
    },
    "9712": {
      "op": "PUSH2",
      "value": "0x24E9"
    },
    "9715": {
      "jump": "i",
      "op": "JUMP"
    },
    "9716": {
      "op": "JUMPDEST"
    },
    "9717": {
      "op": "SWAP2"
    },
    "9718": {
      "op": "POP"
    },
    "9719": {
      "op": "POP"
    },
    "9720": {
      "op": "SWAP3"
    },
    "9721": {
      "op": "SWAP6"
    },
    "9722": {
      "op": "POP"
    },
    "9723": {
      "op": "SWAP3"
    },
    "9724": {
      "op": "SWAP6"
    },
    "9725": {
      "op": "SWAP1"
    },
    "9726": {
      "op": "SWAP4"
    },
    "9727": {
      "op": "POP"
    },
    "9728": {
      "jump": "o",
      "op": "JUMP"
    },
    "9729": {
      "op": "JUMPDEST"
    },
    "9730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9732": {
      "op": "DUP1"
    },
    "9733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9735": {
      "op": "DUP1"
    },
    "9736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9740": {
      "op": "DUP7"
    },
    "9741": {
      "op": "DUP9"
    },
    "9742": {
      "op": "SUB"
    },
    "9743": {
      "op": "SLT"
    },
    "9744": {
      "op": "ISZERO"
    },
    "9745": {
      "op": "PUSH2",
      "value": "0x2618"
    },
    "9748": {
      "op": "JUMPI"
    },
    "9749": {
      "op": "DUP1"
    },
    "9750": {
      "op": "DUP2"
    },
    "9751": {
      "op": "REVERT"
    },
    "9752": {
      "op": "JUMPDEST"
    },
    "9753": {
      "op": "PUSH2",
      "value": "0x2621"
    },
    "9756": {
      "op": "DUP7"
    },
    "9757": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "9760": {
      "jump": "i",
      "op": "JUMP"
    },
    "9761": {
      "op": "JUMPDEST"
    },
    "9762": {
      "op": "SWAP5"
    },
    "9763": {
      "op": "POP"
    },
    "9764": {
      "op": "PUSH2",
      "value": "0x262F"
    },
    "9767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9769": {
      "op": "DUP8"
    },
    "9770": {
      "op": "ADD"
    },
    "9771": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "9774": {
      "jump": "i",
      "op": "JUMP"
    },
    "9775": {
      "op": "JUMPDEST"
    },
    "9776": {
      "op": "SWAP4"
    },
    "9777": {
      "op": "POP"
    },
    "9778": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9780": {
      "op": "DUP7"
    },
    "9781": {
      "op": "ADD"
    },
    "9782": {
      "op": "CALLDATALOAD"
    },
    "9783": {
      "op": "SWAP3"
    },
    "9784": {
      "op": "POP"
    },
    "9785": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9787": {
      "op": "DUP7"
    },
    "9788": {
      "op": "ADD"
    },
    "9789": {
      "op": "CALLDATALOAD"
    },
    "9790": {
      "op": "SWAP2"
    },
    "9791": {
      "op": "POP"
    },
    "9792": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9794": {
      "op": "DUP7"
    },
    "9795": {
      "op": "ADD"
    },
    "9796": {
      "op": "CALLDATALOAD"
    },
    "9797": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9806": {
      "op": "DUP2"
    },
    "9807": {
      "op": "GT"
    },
    "9808": {
      "op": "ISZERO"
    },
    "9809": {
      "op": "PUSH2",
      "value": "0x2658"
    },
    "9812": {
      "op": "JUMPI"
    },
    "9813": {
      "op": "DUP2"
    },
    "9814": {
      "op": "DUP3"
    },
    "9815": {
      "op": "REVERT"
    },
    "9816": {
      "op": "JUMPDEST"
    },
    "9817": {
      "op": "PUSH2",
      "value": "0x25F4"
    },
    "9820": {
      "op": "DUP9"
    },
    "9821": {
      "op": "DUP3"
    },
    "9822": {
      "op": "DUP10"
    },
    "9823": {
      "op": "ADD"
    },
    "9824": {
      "op": "PUSH2",
      "value": "0x24E9"
    },
    "9827": {
      "jump": "i",
      "op": "JUMP"
    },
    "9828": {
      "op": "JUMPDEST"
    },
    "9829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9831": {
      "op": "DUP1"
    },
    "9832": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9834": {
      "op": "DUP4"
    },
    "9835": {
      "op": "DUP6"
    },
    "9836": {
      "op": "SUB"
    },
    "9837": {
      "op": "SLT"
    },
    "9838": {
      "op": "ISZERO"
    },
    "9839": {
      "op": "PUSH2",
      "value": "0x2676"
    },
    "9842": {
      "op": "JUMPI"
    },
    "9843": {
      "op": "DUP2"
    },
    "9844": {
      "op": "DUP3"
    },
    "9845": {
      "op": "REVERT"
    },
    "9846": {
      "op": "JUMPDEST"
    },
    "9847": {
      "op": "PUSH2",
      "value": "0x267F"
    },
    "9850": {
      "op": "DUP4"
    },
    "9851": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "9854": {
      "jump": "i",
      "op": "JUMP"
    },
    "9855": {
      "op": "JUMPDEST"
    },
    "9856": {
      "op": "SWAP2"
    },
    "9857": {
      "op": "POP"
    },
    "9858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9860": {
      "op": "DUP4"
    },
    "9861": {
      "op": "ADD"
    },
    "9862": {
      "op": "CALLDATALOAD"
    },
    "9863": {
      "op": "DUP1"
    },
    "9864": {
      "op": "ISZERO"
    },
    "9865": {
      "op": "ISZERO"
    },
    "9866": {
      "op": "DUP2"
    },
    "9867": {
      "op": "EQ"
    },
    "9868": {
      "op": "PUSH2",
      "value": "0x2693"
    },
    "9871": {
      "op": "JUMPI"
    },
    "9872": {
      "op": "DUP2"
    },
    "9873": {
      "op": "DUP3"
    },
    "9874": {
      "op": "REVERT"
    },
    "9875": {
      "op": "JUMPDEST"
    },
    "9876": {
      "op": "DUP1"
    },
    "9877": {
      "op": "SWAP2"
    },
    "9878": {
      "op": "POP"
    },
    "9879": {
      "op": "POP"
    },
    "9880": {
      "op": "SWAP3"
    },
    "9881": {
      "op": "POP"
    },
    "9882": {
      "op": "SWAP3"
    },
    "9883": {
      "op": "SWAP1"
    },
    "9884": {
      "op": "POP"
    },
    "9885": {
      "jump": "o",
      "op": "JUMP"
    },
    "9886": {
      "op": "JUMPDEST"
    },
    "9887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9889": {
      "op": "DUP1"
    },
    "9890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9892": {
      "op": "DUP1"
    },
    "9893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9895": {
      "op": "DUP1"
    },
    "9896": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9898": {
      "op": "DUP8"
    },
    "9899": {
      "op": "DUP10"
    },
    "9900": {
      "op": "SUB"
    },
    "9901": {
      "op": "SLT"
    },
    "9902": {
      "op": "ISZERO"
    },
    "9903": {
      "op": "PUSH2",
      "value": "0x26B6"
    },
    "9906": {
      "op": "JUMPI"
    },
    "9907": {
      "op": "DUP1"
    },
    "9908": {
      "op": "DUP2"
    },
    "9909": {
      "op": "REVERT"
    },
    "9910": {
      "op": "JUMPDEST"
    },
    "9911": {
      "op": "PUSH2",
      "value": "0x26BF"
    },
    "9914": {
      "op": "DUP8"
    },
    "9915": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "9918": {
      "jump": "i",
      "op": "JUMP"
    },
    "9919": {
      "op": "JUMPDEST"
    },
    "9920": {
      "op": "SWAP6"
    },
    "9921": {
      "op": "POP"
    },
    "9922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9924": {
      "op": "DUP8"
    },
    "9925": {
      "op": "ADD"
    },
    "9926": {
      "op": "CALLDATALOAD"
    },
    "9927": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "9929": {
      "op": "DUP2"
    },
    "9930": {
      "op": "LT"
    },
    "9931": {
      "op": "PUSH2",
      "value": "0x26D2"
    },
    "9934": {
      "op": "JUMPI"
    },
    "9935": {
      "op": "DUP2"
    },
    "9936": {
      "op": "DUP3"
    },
    "9937": {
      "op": "REVERT"
    },
    "9938": {
      "op": "JUMPDEST"
    },
    "9939": {
      "op": "SWAP5"
    },
    "9940": {
      "op": "POP"
    },
    "9941": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9943": {
      "op": "DUP8"
    },
    "9944": {
      "op": "ADD"
    },
    "9945": {
      "op": "CALLDATALOAD"
    },
    "9946": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "9951": {
      "op": "DUP2"
    },
    "9952": {
      "op": "AND"
    },
    "9953": {
      "op": "DUP2"
    },
    "9954": {
      "op": "EQ"
    },
    "9955": {
      "op": "PUSH2",
      "value": "0x26EA"
    },
    "9958": {
      "op": "JUMPI"
    },
    "9959": {
      "op": "DUP2"
    },
    "9960": {
      "op": "DUP3"
    },
    "9961": {
      "op": "REVERT"
    },
    "9962": {
      "op": "JUMPDEST"
    },
    "9963": {
      "op": "SWAP4"
    },
    "9964": {
      "op": "POP"
    },
    "9965": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9967": {
      "op": "DUP8"
    },
    "9968": {
      "op": "ADD"
    },
    "9969": {
      "op": "CALLDATALOAD"
    },
    "9970": {
      "op": "SWAP3"
    },
    "9971": {
      "op": "POP"
    },
    "9972": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9974": {
      "op": "DUP8"
    },
    "9975": {
      "op": "ADD"
    },
    "9976": {
      "op": "CALLDATALOAD"
    },
    "9977": {
      "op": "SWAP2"
    },
    "9978": {
      "op": "POP"
    },
    "9979": {
      "op": "PUSH2",
      "value": "0x2706"
    },
    "9982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9984": {
      "op": "DUP9"
    },
    "9985": {
      "op": "ADD"
    },
    "9986": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "9989": {
      "jump": "i",
      "op": "JUMP"
    },
    "9990": {
      "op": "JUMPDEST"
    },
    "9991": {
      "op": "SWAP1"
    },
    "9992": {
      "op": "POP"
    },
    "9993": {
      "op": "SWAP3"
    },
    "9994": {
      "op": "SWAP6"
    },
    "9995": {
      "op": "POP"
    },
    "9996": {
      "op": "SWAP3"
    },
    "9997": {
      "op": "SWAP6"
    },
    "9998": {
      "op": "POP"
    },
    "9999": {
      "op": "SWAP3"
    },
    "10000": {
      "op": "SWAP6"
    },
    "10001": {
      "jump": "o",
      "op": "JUMP"
    },
    "10002": {
      "op": "JUMPDEST"
    },
    "10003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10005": {
      "op": "DUP1"
    },
    "10006": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10008": {
      "op": "DUP4"
    },
    "10009": {
      "op": "DUP6"
    },
    "10010": {
      "op": "SUB"
    },
    "10011": {
      "op": "SLT"
    },
    "10012": {
      "op": "ISZERO"
    },
    "10013": {
      "op": "PUSH2",
      "value": "0x2724"
    },
    "10016": {
      "op": "JUMPI"
    },
    "10017": {
      "op": "DUP2"
    },
    "10018": {
      "op": "DUP3"
    },
    "10019": {
      "op": "REVERT"
    },
    "10020": {
      "op": "JUMPDEST"
    },
    "10021": {
      "op": "PUSH2",
      "value": "0x272D"
    },
    "10024": {
      "op": "DUP4"
    },
    "10025": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "10028": {
      "jump": "i",
      "op": "JUMP"
    },
    "10029": {
      "op": "JUMPDEST"
    },
    "10030": {
      "op": "SWAP5"
    },
    "10031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10033": {
      "op": "SWAP4"
    },
    "10034": {
      "op": "SWAP1"
    },
    "10035": {
      "op": "SWAP4"
    },
    "10036": {
      "op": "ADD"
    },
    "10037": {
      "op": "CALLDATALOAD"
    },
    "10038": {
      "op": "SWAP4"
    },
    "10039": {
      "op": "POP"
    },
    "10040": {
      "op": "POP"
    },
    "10041": {
      "op": "POP"
    },
    "10042": {
      "jump": "o",
      "op": "JUMP"
    },
    "10043": {
      "op": "JUMPDEST"
    },
    "10044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10046": {
      "op": "DUP1"
    },
    "10047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10049": {
      "op": "DUP1"
    },
    "10050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10054": {
      "op": "DUP7"
    },
    "10055": {
      "op": "DUP9"
    },
    "10056": {
      "op": "SUB"
    },
    "10057": {
      "op": "SLT"
    },
    "10058": {
      "op": "ISZERO"
    },
    "10059": {
      "op": "PUSH2",
      "value": "0x2752"
    },
    "10062": {
      "op": "JUMPI"
    },
    "10063": {
      "op": "DUP3"
    },
    "10064": {
      "op": "DUP4"
    },
    "10065": {
      "op": "REVERT"
    },
    "10066": {
      "op": "JUMPDEST"
    },
    "10067": {
      "op": "PUSH2",
      "value": "0x275B"
    },
    "10070": {
      "op": "DUP7"
    },
    "10071": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "10074": {
      "jump": "i",
      "op": "JUMP"
    },
    "10075": {
      "op": "JUMPDEST"
    },
    "10076": {
      "op": "SWAP5"
    },
    "10077": {
      "op": "POP"
    },
    "10078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10080": {
      "op": "DUP7"
    },
    "10081": {
      "op": "ADD"
    },
    "10082": {
      "op": "CALLDATALOAD"
    },
    "10083": {
      "op": "SWAP4"
    },
    "10084": {
      "op": "POP"
    },
    "10085": {
      "op": "PUSH2",
      "value": "0x2770"
    },
    "10088": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10090": {
      "op": "DUP8"
    },
    "10091": {
      "op": "ADD"
    },
    "10092": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "10095": {
      "jump": "i",
      "op": "JUMP"
    },
    "10096": {
      "op": "JUMPDEST"
    },
    "10097": {
      "op": "SWAP5"
    },
    "10098": {
      "op": "SWAP8"
    },
    "10099": {
      "op": "SWAP4"
    },
    "10100": {
      "op": "SWAP7"
    },
    "10101": {
      "op": "POP"
    },
    "10102": {
      "op": "SWAP4"
    },
    "10103": {
      "op": "SWAP5"
    },
    "10104": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10106": {
      "op": "DUP2"
    },
    "10107": {
      "op": "ADD"
    },
    "10108": {
      "op": "CALLDATALOAD"
    },
    "10109": {
      "op": "SWAP5"
    },
    "10110": {
      "op": "POP"
    },
    "10111": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10113": {
      "op": "ADD"
    },
    "10114": {
      "op": "CALLDATALOAD"
    },
    "10115": {
      "op": "SWAP3"
    },
    "10116": {
      "op": "SWAP2"
    },
    "10117": {
      "op": "POP"
    },
    "10118": {
      "op": "POP"
    },
    "10119": {
      "jump": "o",
      "op": "JUMP"
    },
    "10120": {
      "op": "JUMPDEST"
    },
    "10121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10123": {
      "op": "DUP1"
    },
    "10124": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10126": {
      "op": "DUP4"
    },
    "10127": {
      "op": "DUP6"
    },
    "10128": {
      "op": "SUB"
    },
    "10129": {
      "op": "SLT"
    },
    "10130": {
      "op": "ISZERO"
    },
    "10131": {
      "op": "PUSH2",
      "value": "0x279A"
    },
    "10134": {
      "op": "JUMPI"
    },
    "10135": {
      "op": "DUP2"
    },
    "10136": {
      "op": "DUP3"
    },
    "10137": {
      "op": "REVERT"
    },
    "10138": {
      "op": "JUMPDEST"
    },
    "10139": {
      "op": "DUP3"
    },
    "10140": {
      "op": "CALLDATALOAD"
    },
    "10141": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10150": {
      "op": "DUP1"
    },
    "10151": {
      "op": "DUP3"
    },
    "10152": {
      "op": "GT"
    },
    "10153": {
      "op": "ISZERO"
    },
    "10154": {
      "op": "PUSH2",
      "value": "0x27B1"
    },
    "10157": {
      "op": "JUMPI"
    },
    "10158": {
      "op": "DUP4"
    },
    "10159": {
      "op": "DUP5"
    },
    "10160": {
      "op": "REVERT"
    },
    "10161": {
      "op": "JUMPDEST"
    },
    "10162": {
      "op": "DUP2"
    },
    "10163": {
      "op": "DUP6"
    },
    "10164": {
      "op": "ADD"
    },
    "10165": {
      "op": "SWAP2"
    },
    "10166": {
      "op": "POP"
    },
    "10167": {
      "op": "DUP6"
    },
    "10168": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10170": {
      "op": "DUP4"
    },
    "10171": {
      "op": "ADD"
    },
    "10172": {
      "op": "SLT"
    },
    "10173": {
      "op": "PUSH2",
      "value": "0x27C4"
    },
    "10176": {
      "op": "JUMPI"
    },
    "10177": {
      "op": "DUP4"
    },
    "10178": {
      "op": "DUP5"
    },
    "10179": {
      "op": "REVERT"
    },
    "10180": {
      "op": "JUMPDEST"
    },
    "10181": {
      "op": "DUP2"
    },
    "10182": {
      "op": "CALLDATALOAD"
    },
    "10183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10185": {
      "op": "PUSH2",
      "value": "0x27D1"
    },
    "10188": {
      "op": "DUP3"
    },
    "10189": {
      "op": "PUSH2",
      "value": "0x2D8F"
    },
    "10192": {
      "jump": "i",
      "op": "JUMP"
    },
    "10193": {
      "op": "JUMPDEST"
    },
    "10194": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10196": {
      "op": "MLOAD"
    },
    "10197": {
      "op": "PUSH2",
      "value": "0x27DE"
    },
    "10200": {
      "op": "DUP3"
    },
    "10201": {
      "op": "DUP3"
    },
    "10202": {
      "op": "PUSH2",
      "value": "0x2E2F"
    },
    "10205": {
      "jump": "i",
      "op": "JUMP"
    },
    "10206": {
      "op": "JUMPDEST"
    },
    "10207": {
      "op": "DUP4"
    },
    "10208": {
      "op": "DUP2"
    },
    "10209": {
      "op": "MSTORE"
    },
    "10210": {
      "op": "DUP3"
    },
    "10211": {
      "op": "DUP2"
    },
    "10212": {
      "op": "ADD"
    },
    "10213": {
      "op": "SWAP2"
    },
    "10214": {
      "op": "POP"
    },
    "10215": {
      "op": "DUP6"
    },
    "10216": {
      "op": "DUP4"
    },
    "10217": {
      "op": "ADD"
    },
    "10218": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10220": {
      "op": "DUP6"
    },
    "10221": {
      "op": "SWAP1"
    },
    "10222": {
      "op": "SHL"
    },
    "10223": {
      "op": "DUP8"
    },
    "10224": {
      "op": "ADD"
    },
    "10225": {
      "op": "DUP5"
    },
    "10226": {
      "op": "ADD"
    },
    "10227": {
      "op": "DUP12"
    },
    "10228": {
      "op": "LT"
    },
    "10229": {
      "op": "ISZERO"
    },
    "10230": {
      "op": "PUSH2",
      "value": "0x27FD"
    },
    "10233": {
      "op": "JUMPI"
    },
    "10234": {
      "op": "DUP9"
    },
    "10235": {
      "op": "DUP10"
    },
    "10236": {
      "op": "REVERT"
    },
    "10237": {
      "op": "JUMPDEST"
    },
    "10238": {
      "op": "DUP9"
    },
    "10239": {
      "op": "SWAP7"
    },
    "10240": {
      "op": "POP"
    },
    "10241": {
      "op": "JUMPDEST"
    },
    "10242": {
      "op": "DUP5"
    },
    "10243": {
      "op": "DUP8"
    },
    "10244": {
      "op": "LT"
    },
    "10245": {
      "op": "ISZERO"
    },
    "10246": {
      "op": "PUSH2",
      "value": "0x2826"
    },
    "10249": {
      "op": "JUMPI"
    },
    "10250": {
      "op": "PUSH2",
      "value": "0x2812"
    },
    "10253": {
      "op": "DUP2"
    },
    "10254": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "10257": {
      "jump": "i",
      "op": "JUMP"
    },
    "10258": {
      "op": "JUMPDEST"
    },
    "10259": {
      "op": "DUP4"
    },
    "10260": {
      "op": "MSTORE"
    },
    "10261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10263": {
      "op": "SWAP7"
    },
    "10264": {
      "op": "SWAP1"
    },
    "10265": {
      "op": "SWAP7"
    },
    "10266": {
      "op": "ADD"
    },
    "10267": {
      "op": "SWAP6"
    },
    "10268": {
      "op": "SWAP2"
    },
    "10269": {
      "op": "DUP4"
    },
    "10270": {
      "op": "ADD"
    },
    "10271": {
      "op": "SWAP2"
    },
    "10272": {
      "op": "DUP4"
    },
    "10273": {
      "op": "ADD"
    },
    "10274": {
      "op": "PUSH2",
      "value": "0x2801"
    },
    "10277": {
      "op": "JUMP"
    },
    "10278": {
      "op": "JUMPDEST"
    },
    "10279": {
      "op": "POP"
    },
    "10280": {
      "op": "SWAP7"
    },
    "10281": {
      "op": "POP"
    },
    "10282": {
      "op": "POP"
    },
    "10283": {
      "op": "DUP7"
    },
    "10284": {
      "op": "ADD"
    },
    "10285": {
      "op": "CALLDATALOAD"
    },
    "10286": {
      "op": "SWAP3"
    },
    "10287": {
      "op": "POP"
    },
    "10288": {
      "op": "POP"
    },
    "10289": {
      "op": "DUP1"
    },
    "10290": {
      "op": "DUP3"
    },
    "10291": {
      "op": "GT"
    },
    "10292": {
      "op": "ISZERO"
    },
    "10293": {
      "op": "PUSH2",
      "value": "0x283C"
    },
    "10296": {
      "op": "JUMPI"
    },
    "10297": {
      "op": "DUP3"
    },
    "10298": {
      "op": "DUP4"
    },
    "10299": {
      "op": "REVERT"
    },
    "10300": {
      "op": "JUMPDEST"
    },
    "10301": {
      "op": "POP"
    },
    "10302": {
      "op": "PUSH2",
      "value": "0x2849"
    },
    "10305": {
      "op": "DUP6"
    },
    "10306": {
      "op": "DUP3"
    },
    "10307": {
      "op": "DUP7"
    },
    "10308": {
      "op": "ADD"
    },
    "10309": {
      "op": "PUSH2",
      "value": "0x2475"
    },
    "10312": {
      "jump": "i",
      "op": "JUMP"
    },
    "10313": {
      "op": "JUMPDEST"
    },
    "10314": {
      "op": "SWAP2"
    },
    "10315": {
      "op": "POP"
    },
    "10316": {
      "op": "POP"
    },
    "10317": {
      "op": "SWAP3"
    },
    "10318": {
      "op": "POP"
    },
    "10319": {
      "op": "SWAP3"
    },
    "10320": {
      "op": "SWAP1"
    },
    "10321": {
      "op": "POP"
    },
    "10322": {
      "jump": "o",
      "op": "JUMP"
    },
    "10323": {
      "op": "JUMPDEST"
    },
    "10324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10328": {
      "op": "DUP3"
    },
    "10329": {
      "op": "DUP5"
    },
    "10330": {
      "op": "SUB"
    },
    "10331": {
      "op": "SLT"
    },
    "10332": {
      "op": "ISZERO"
    },
    "10333": {
      "op": "PUSH2",
      "value": "0x2864"
    },
    "10336": {
      "op": "JUMPI"
    },
    "10337": {
      "op": "DUP1"
    },
    "10338": {
      "op": "DUP2"
    },
    "10339": {
      "op": "REVERT"
    },
    "10340": {
      "op": "JUMPDEST"
    },
    "10341": {
      "op": "POP"
    },
    "10342": {
      "op": "CALLDATALOAD"
    },
    "10343": {
      "op": "SWAP2"
    },
    "10344": {
      "op": "SWAP1"
    },
    "10345": {
      "op": "POP"
    },
    "10346": {
      "jump": "o",
      "op": "JUMP"
    },
    "10347": {
      "op": "JUMPDEST"
    },
    "10348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10350": {
      "op": "DUP1"
    },
    "10351": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10353": {
      "op": "DUP4"
    },
    "10354": {
      "op": "DUP6"
    },
    "10355": {
      "op": "SUB"
    },
    "10356": {
      "op": "SLT"
    },
    "10357": {
      "op": "ISZERO"
    },
    "10358": {
      "op": "PUSH2",
      "value": "0x287D"
    },
    "10361": {
      "op": "JUMPI"
    },
    "10362": {
      "op": "DUP2"
    },
    "10363": {
      "op": "DUP3"
    },
    "10364": {
      "op": "REVERT"
    },
    "10365": {
      "op": "JUMPDEST"
    },
    "10366": {
      "op": "DUP3"
    },
    "10367": {
      "op": "CALLDATALOAD"
    },
    "10368": {
      "op": "SWAP2"
    },
    "10369": {
      "op": "POP"
    },
    "10370": {
      "op": "PUSH2",
      "value": "0x2552"
    },
    "10373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10375": {
      "op": "DUP5"
    },
    "10376": {
      "op": "ADD"
    },
    "10377": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "10380": {
      "jump": "i",
      "op": "JUMP"
    },
    "10381": {
      "op": "JUMPDEST"
    },
    "10382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10386": {
      "op": "DUP3"
    },
    "10387": {
      "op": "DUP5"
    },
    "10388": {
      "op": "SUB"
    },
    "10389": {
      "op": "SLT"
    },
    "10390": {
      "op": "ISZERO"
    },
    "10391": {
      "op": "PUSH2",
      "value": "0x289E"
    },
    "10394": {
      "op": "JUMPI"
    },
    "10395": {
      "op": "DUP1"
    },
    "10396": {
      "op": "DUP2"
    },
    "10397": {
      "op": "REVERT"
    },
    "10398": {
      "op": "JUMPDEST"
    },
    "10399": {
      "op": "DUP2"
    },
    "10400": {
      "op": "CALLDATALOAD"
    },
    "10401": {
      "op": "PUSH2",
      "value": "0x2508"
    },
    "10404": {
      "op": "DUP2"
    },
    "10405": {
      "op": "PUSH2",
      "value": "0x2F45"
    },
    "10408": {
      "jump": "i",
      "op": "JUMP"
    },
    "10409": {
      "op": "JUMPDEST"
    },
    "10410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10414": {
      "op": "DUP3"
    },
    "10415": {
      "op": "DUP5"
    },
    "10416": {
      "op": "SUB"
    },
    "10417": {
      "op": "SLT"
    },
    "10418": {
      "op": "ISZERO"
    },
    "10419": {
      "op": "PUSH2",
      "value": "0x28BA"
    },
    "10422": {
      "op": "JUMPI"
    },
    "10423": {
      "op": "DUP1"
    },
    "10424": {
      "op": "DUP2"
    },
    "10425": {
      "op": "REVERT"
    },
    "10426": {
      "op": "JUMPDEST"
    },
    "10427": {
      "op": "DUP2"
    },
    "10428": {
      "op": "MLOAD"
    },
    "10429": {
      "op": "PUSH2",
      "value": "0x2508"
    },
    "10432": {
      "op": "DUP2"
    },
    "10433": {
      "op": "PUSH2",
      "value": "0x2F45"
    },
    "10436": {
      "jump": "i",
      "op": "JUMP"
    },
    "10437": {
      "op": "JUMPDEST"
    },
    "10438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10442": {
      "op": "DUP3"
    },
    "10443": {
      "op": "DUP5"
    },
    "10444": {
      "op": "SUB"
    },
    "10445": {
      "op": "SLT"
    },
    "10446": {
      "op": "ISZERO"
    },
    "10447": {
      "op": "PUSH2",
      "value": "0x28D6"
    },
    "10450": {
      "op": "JUMPI"
    },
    "10451": {
      "op": "DUP1"
    },
    "10452": {
      "op": "DUP2"
    },
    "10453": {
      "op": "REVERT"
    },
    "10454": {
      "op": "JUMPDEST"
    },
    "10455": {
      "op": "DUP2"
    },
    "10456": {
      "op": "CALLDATALOAD"
    },
    "10457": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10466": {
      "op": "DUP2"
    },
    "10467": {
      "op": "GT"
    },
    "10468": {
      "op": "ISZERO"
    },
    "10469": {
      "op": "PUSH2",
      "value": "0x28EC"
    },
    "10472": {
      "op": "JUMPI"
    },
    "10473": {
      "op": "DUP2"
    },
    "10474": {
      "op": "DUP3"
    },
    "10475": {
      "op": "REVERT"
    },
    "10476": {
      "op": "JUMPDEST"
    },
    "10477": {
      "op": "DUP3"
    },
    "10478": {
      "op": "ADD"
    },
    "10479": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10481": {
      "op": "DUP2"
    },
    "10482": {
      "op": "ADD"
    },
    "10483": {
      "op": "DUP5"
    },
    "10484": {
      "op": "SGT"
    },
    "10485": {
      "op": "PUSH2",
      "value": "0x28FC"
    },
    "10488": {
      "op": "JUMPI"
    },
    "10489": {
      "op": "DUP2"
    },
    "10490": {
      "op": "DUP3"
    },
    "10491": {
      "op": "REVERT"
    },
    "10492": {
      "op": "JUMPDEST"
    },
    "10493": {
      "op": "PUSH2",
      "value": "0x290B"
    },
    "10496": {
      "op": "DUP5"
    },
    "10497": {
      "op": "DUP3"
    },
    "10498": {
      "op": "CALLDATALOAD"
    },
    "10499": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10501": {
      "op": "DUP5"
    },
    "10502": {
      "op": "ADD"
    },
    "10503": {
      "op": "PUSH2",
      "value": "0x2400"
    },
    "10506": {
      "jump": "i",
      "op": "JUMP"
    },
    "10507": {
      "op": "JUMPDEST"
    },
    "10508": {
      "op": "SWAP5"
    },
    "10509": {
      "op": "SWAP4"
    },
    "10510": {
      "op": "POP"
    },
    "10511": {
      "op": "POP"
    },
    "10512": {
      "op": "POP"
    },
    "10513": {
      "op": "POP"
    },
    "10514": {
      "jump": "o",
      "op": "JUMP"
    },
    "10515": {
      "op": "JUMPDEST"
    },
    "10516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10518": {
      "op": "DUP1"
    },
    "10519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10521": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10523": {
      "op": "DUP5"
    },
    "10524": {
      "op": "DUP7"
    },
    "10525": {
      "op": "SUB"
    },
    "10526": {
      "op": "SLT"
    },
    "10527": {
      "op": "ISZERO"
    },
    "10528": {
      "op": "PUSH2",
      "value": "0x2927"
    },
    "10531": {
      "op": "JUMPI"
    },
    "10532": {
      "op": "DUP1"
    },
    "10533": {
      "op": "DUP2"
    },
    "10534": {
      "op": "REVERT"
    },
    "10535": {
      "op": "JUMPDEST"
    },
    "10536": {
      "op": "DUP4"
    },
    "10537": {
      "op": "CALLDATALOAD"
    },
    "10538": {
      "op": "SWAP3"
    },
    "10539": {
      "op": "POP"
    },
    "10540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10542": {
      "op": "DUP5"
    },
    "10543": {
      "op": "ADD"
    },
    "10544": {
      "op": "CALLDATALOAD"
    },
    "10545": {
      "op": "SWAP2"
    },
    "10546": {
      "op": "POP"
    },
    "10547": {
      "op": "PUSH2",
      "value": "0x293E"
    },
    "10550": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10552": {
      "op": "DUP6"
    },
    "10553": {
      "op": "ADD"
    },
    "10554": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "10557": {
      "jump": "i",
      "op": "JUMP"
    },
    "10558": {
      "op": "JUMPDEST"
    },
    "10559": {
      "op": "SWAP1"
    },
    "10560": {
      "op": "POP"
    },
    "10561": {
      "op": "SWAP3"
    },
    "10562": {
      "op": "POP"
    },
    "10563": {
      "op": "SWAP3"
    },
    "10564": {
      "op": "POP"
    },
    "10565": {
      "op": "SWAP3"
    },
    "10566": {
      "jump": "o",
      "op": "JUMP"
    },
    "10567": {
      "op": "JUMPDEST"
    },
    "10568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10570": {
      "op": "DUP2"
    },
    "10571": {
      "op": "MLOAD"
    },
    "10572": {
      "op": "DUP1"
    },
    "10573": {
      "op": "DUP5"
    },
    "10574": {
      "op": "MSTORE"
    },
    "10575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10577": {
      "op": "DUP1"
    },
    "10578": {
      "op": "DUP6"
    },
    "10579": {
      "op": "ADD"
    },
    "10580": {
      "op": "SWAP5"
    },
    "10581": {
      "op": "POP"
    },
    "10582": {
      "op": "DUP1"
    },
    "10583": {
      "op": "DUP5"
    },
    "10584": {
      "op": "ADD"
    },
    "10585": {
      "op": "DUP4"
    },
    "10586": {
      "op": "JUMPDEST"
    },
    "10587": {
      "op": "DUP4"
    },
    "10588": {
      "op": "DUP2"
    },
    "10589": {
      "op": "LT"
    },
    "10590": {
      "op": "ISZERO"
    },
    "10591": {
      "op": "PUSH2",
      "value": "0x2976"
    },
    "10594": {
      "op": "JUMPI"
    },
    "10595": {
      "op": "DUP2"
    },
    "10596": {
      "op": "MLOAD"
    },
    "10597": {
      "op": "DUP8"
    },
    "10598": {
      "op": "MSTORE"
    },
    "10599": {
      "op": "SWAP6"
    },
    "10600": {
      "op": "DUP3"
    },
    "10601": {
      "op": "ADD"
    },
    "10602": {
      "op": "SWAP6"
    },
    "10603": {
      "op": "SWAP1"
    },
    "10604": {
      "op": "DUP3"
    },
    "10605": {
      "op": "ADD"
    },
    "10606": {
      "op": "SWAP1"
    },
    "10607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10609": {
      "op": "ADD"
    },
    "10610": {
      "op": "PUSH2",
      "value": "0x295A"
    },
    "10613": {
      "op": "JUMP"
    },
    "10614": {
      "op": "JUMPDEST"
    },
    "10615": {
      "op": "POP"
    },
    "10616": {
      "op": "SWAP5"
    },
    "10617": {
      "op": "SWAP6"
    },
    "10618": {
      "op": "SWAP5"
    },
    "10619": {
      "op": "POP"
    },
    "10620": {
      "op": "POP"
    },
    "10621": {
      "op": "POP"
    },
    "10622": {
      "op": "POP"
    },
    "10623": {
      "op": "POP"
    },
    "10624": {
      "jump": "o",
      "op": "JUMP"
    },
    "10625": {
      "op": "JUMPDEST"
    },
    "10626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10628": {
      "op": "DUP2"
    },
    "10629": {
      "op": "MLOAD"
    },
    "10630": {
      "op": "DUP1"
    },
    "10631": {
      "op": "DUP5"
    },
    "10632": {
      "op": "MSTORE"
    },
    "10633": {
      "op": "DUP2"
    },
    "10634": {
      "op": "JUMPDEST"
    },
    "10635": {
      "op": "DUP2"
    },
    "10636": {
      "op": "DUP2"
    },
    "10637": {
      "op": "LT"
    },
    "10638": {
      "op": "ISZERO"
    },
    "10639": {
      "op": "PUSH2",
      "value": "0x29A6"
    },
    "10642": {
      "op": "JUMPI"
    },
    "10643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10645": {
      "op": "DUP2"
    },
    "10646": {
      "op": "DUP6"
    },
    "10647": {
      "op": "ADD"
    },
    "10648": {
      "op": "DUP2"
    },
    "10649": {
      "op": "ADD"
    },
    "10650": {
      "op": "MLOAD"
    },
    "10651": {
      "op": "DUP7"
    },
    "10652": {
      "op": "DUP4"
    },
    "10653": {
      "op": "ADD"
    },
    "10654": {
      "op": "DUP3"
    },
    "10655": {
      "op": "ADD"
    },
    "10656": {
      "op": "MSTORE"
    },
    "10657": {
      "op": "ADD"
    },
    "10658": {
      "op": "PUSH2",
      "value": "0x298A"
    },
    "10661": {
      "op": "JUMP"
    },
    "10662": {
      "op": "JUMPDEST"
    },
    "10663": {
      "op": "DUP2"
    },
    "10664": {
      "op": "DUP2"
    },
    "10665": {
      "op": "GT"
    },
    "10666": {
      "op": "ISZERO"
    },
    "10667": {
      "op": "PUSH2",
      "value": "0x29B7"
    },
    "10670": {
      "op": "JUMPI"
    },
    "10671": {
      "op": "DUP3"
    },
    "10672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10674": {
      "op": "DUP4"
    },
    "10675": {
      "op": "DUP8"
    },
    "10676": {
      "op": "ADD"
    },
    "10677": {
      "op": "ADD"
    },
    "10678": {
      "op": "MSTORE"
    },
    "10679": {
      "op": "JUMPDEST"
    },
    "10680": {
      "op": "POP"
    },
    "10681": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10683": {
      "op": "ADD"
    },
    "10684": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10686": {
      "op": "NOT"
    },
    "10687": {
      "op": "AND"
    },
    "10688": {
      "op": "SWAP3"
    },
    "10689": {
      "op": "SWAP1"
    },
    "10690": {
      "op": "SWAP3"
    },
    "10691": {
      "op": "ADD"
    },
    "10692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10694": {
      "op": "ADD"
    },
    "10695": {
      "op": "SWAP3"
    },
    "10696": {
      "op": "SWAP2"
    },
    "10697": {
      "op": "POP"
    },
    "10698": {
      "op": "POP"
    },
    "10699": {
      "jump": "o",
      "op": "JUMP"
    },
    "10700": {
      "op": "JUMPDEST"
    },
    "10701": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10703": {
      "op": "DUP2"
    },
    "10704": {
      "op": "LT"
    },
    "10705": {
      "op": "PUSH2",
      "value": "0x29EA"
    },
    "10708": {
      "op": "JUMPI"
    },
    "10709": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10714": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10716": {
      "op": "SHL"
    },
    "10717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10719": {
      "op": "MSTORE"
    },
    "10720": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10722": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10724": {
      "op": "MSTORE"
    },
    "10725": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10729": {
      "op": "REVERT"
    },
    "10730": {
      "op": "JUMPDEST"
    },
    "10731": {
      "op": "SWAP1"
    },
    "10732": {
      "op": "MSTORE"
    },
    "10733": {
      "jump": "o",
      "op": "JUMP"
    },
    "10734": {
      "op": "JUMPDEST"
    },
    "10735": {
      "op": "DUP1"
    },
    "10736": {
      "op": "MLOAD"
    },
    "10737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10743": {
      "op": "SHL"
    },
    "10744": {
      "op": "SUB"
    },
    "10745": {
      "op": "AND"
    },
    "10746": {
      "op": "DUP3"
    },
    "10747": {
      "op": "MSTORE"
    },
    "10748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10750": {
      "op": "DUP1"
    },
    "10751": {
      "op": "DUP3"
    },
    "10752": {
      "op": "ADD"
    },
    "10753": {
      "op": "MLOAD"
    },
    "10754": {
      "op": "SWAP1"
    },
    "10755": {
      "op": "PUSH2",
      "value": "0x2A0E"
    },
    "10758": {
      "op": "SWAP1"
    },
    "10759": {
      "op": "DUP5"
    },
    "10760": {
      "op": "ADD"
    },
    "10761": {
      "op": "DUP3"
    },
    "10762": {
      "op": "PUSH2",
      "value": "0x29CC"
    },
    "10765": {
      "jump": "i",
      "op": "JUMP"
    },
    "10766": {
      "op": "JUMPDEST"
    },
    "10767": {
      "op": "POP"
    },
    "10768": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10770": {
      "op": "DUP2"
    },
    "10771": {
      "op": "DUP2"
    },
    "10772": {
      "op": "ADD"
    },
    "10773": {
      "op": "MLOAD"
    },
    "10774": {
      "op": "SWAP1"
    },
    "10775": {
      "op": "DUP4"
    },
    "10776": {
      "op": "ADD"
    },
    "10777": {
      "op": "MSTORE"
    },
    "10778": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10780": {
      "op": "SWAP1"
    },
    "10781": {
      "op": "DUP2"
    },
    "10782": {
      "op": "ADD"
    },
    "10783": {
      "op": "MLOAD"
    },
    "10784": {
      "op": "SWAP2"
    },
    "10785": {
      "op": "ADD"
    },
    "10786": {
      "op": "MSTORE"
    },
    "10787": {
      "jump": "o",
      "op": "JUMP"
    },
    "10788": {
      "op": "JUMPDEST"
    },
    "10789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10795": {
      "op": "SHL"
    },
    "10796": {
      "op": "SUB"
    },
    "10797": {
      "op": "DUP7"
    },
    "10798": {
      "op": "DUP2"
    },
    "10799": {
      "op": "AND"
    },
    "10800": {
      "op": "DUP3"
    },
    "10801": {
      "op": "MSTORE"
    },
    "10802": {
      "op": "DUP6"
    },
    "10803": {
      "op": "AND"
    },
    "10804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10806": {
      "op": "DUP3"
    },
    "10807": {
      "op": "ADD"
    },
    "10808": {
      "op": "MSTORE"
    },
    "10809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10811": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10813": {
      "op": "DUP3"
    },
    "10814": {
      "op": "ADD"
    },
    "10815": {
      "op": "DUP2"
    },
    "10816": {
      "op": "SWAP1"
    },
    "10817": {
      "op": "MSTORE"
    },
    "10818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10820": {
      "op": "SWAP1"
    },
    "10821": {
      "op": "PUSH2",
      "value": "0x2A50"
    },
    "10824": {
      "op": "SWAP1"
    },
    "10825": {
      "op": "DUP4"
    },
    "10826": {
      "op": "ADD"
    },
    "10827": {
      "op": "DUP7"
    },
    "10828": {
      "op": "PUSH2",
      "value": "0x2947"
    },
    "10831": {
      "jump": "i",
      "op": "JUMP"
    },
    "10832": {
      "op": "JUMPDEST"
    },
    "10833": {
      "op": "DUP3"
    },
    "10834": {
      "op": "DUP2"
    },
    "10835": {
      "op": "SUB"
    },
    "10836": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10838": {
      "op": "DUP5"
    },
    "10839": {
      "op": "ADD"
    },
    "10840": {
      "op": "MSTORE"
    },
    "10841": {
      "op": "PUSH2",
      "value": "0x2A62"
    },
    "10844": {
      "op": "DUP2"
    },
    "10845": {
      "op": "DUP7"
    },
    "10846": {
      "op": "PUSH2",
      "value": "0x2947"
    },
    "10849": {
      "jump": "i",
      "op": "JUMP"
    },
    "10850": {
      "op": "JUMPDEST"
    },
    "10851": {
      "op": "SWAP1"
    },
    "10852": {
      "op": "POP"
    },
    "10853": {
      "op": "DUP3"
    },
    "10854": {
      "op": "DUP2"
    },
    "10855": {
      "op": "SUB"
    },
    "10856": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10858": {
      "op": "DUP5"
    },
    "10859": {
      "op": "ADD"
    },
    "10860": {
      "op": "MSTORE"
    },
    "10861": {
      "op": "PUSH2",
      "value": "0x2A76"
    },
    "10864": {
      "op": "DUP2"
    },
    "10865": {
      "op": "DUP6"
    },
    "10866": {
      "op": "PUSH2",
      "value": "0x2981"
    },
    "10869": {
      "jump": "i",
      "op": "JUMP"
    },
    "10870": {
      "op": "JUMPDEST"
    },
    "10871": {
      "op": "SWAP9"
    },
    "10872": {
      "op": "SWAP8"
    },
    "10873": {
      "op": "POP"
    },
    "10874": {
      "op": "POP"
    },
    "10875": {
      "op": "POP"
    },
    "10876": {
      "op": "POP"
    },
    "10877": {
      "op": "POP"
    },
    "10878": {
      "op": "POP"
    },
    "10879": {
      "op": "POP"
    },
    "10880": {
      "op": "POP"
    },
    "10881": {
      "jump": "o",
      "op": "JUMP"
    },
    "10882": {
      "op": "JUMPDEST"
    },
    "10883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10887": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10889": {
      "op": "SHL"
    },
    "10890": {
      "op": "SUB"
    },
    "10891": {
      "op": "DUP7"
    },
    "10892": {
      "op": "DUP2"
    },
    "10893": {
      "op": "AND"
    },
    "10894": {
      "op": "DUP3"
    },
    "10895": {
      "op": "MSTORE"
    },
    "10896": {
      "op": "DUP6"
    },
    "10897": {
      "op": "AND"
    },
    "10898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10900": {
      "op": "DUP3"
    },
    "10901": {
      "op": "ADD"
    },
    "10902": {
      "op": "MSTORE"
    },
    "10903": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10905": {
      "op": "DUP2"
    },
    "10906": {
      "op": "ADD"
    },
    "10907": {
      "op": "DUP5"
    },
    "10908": {
      "op": "SWAP1"
    },
    "10909": {
      "op": "MSTORE"
    },
    "10910": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10912": {
      "op": "DUP2"
    },
    "10913": {
      "op": "ADD"
    },
    "10914": {
      "op": "DUP4"
    },
    "10915": {
      "op": "SWAP1"
    },
    "10916": {
      "op": "MSTORE"
    },
    "10917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10919": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10921": {
      "op": "DUP3"
    },
    "10922": {
      "op": "ADD"
    },
    "10923": {
      "op": "DUP2"
    },
    "10924": {
      "op": "SWAP1"
    },
    "10925": {
      "op": "MSTORE"
    },
    "10926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10928": {
      "op": "SWAP1"
    },
    "10929": {
      "op": "PUSH2",
      "value": "0x2ABC"
    },
    "10932": {
      "op": "SWAP1"
    },
    "10933": {
      "op": "DUP4"
    },
    "10934": {
      "op": "ADD"
    },
    "10935": {
      "op": "DUP5"
    },
    "10936": {
      "op": "PUSH2",
      "value": "0x2981"
    },
    "10939": {
      "jump": "i",
      "op": "JUMP"
    },
    "10940": {
      "op": "JUMPDEST"
    },
    "10941": {
      "op": "SWAP8"
    },
    "10942": {
      "op": "SWAP7"
    },
    "10943": {
      "op": "POP"
    },
    "10944": {
      "op": "POP"
    },
    "10945": {
      "op": "POP"
    },
    "10946": {
      "op": "POP"
    },
    "10947": {
      "op": "POP"
    },
    "10948": {
      "op": "POP"
    },
    "10949": {
      "op": "POP"
    },
    "10950": {
      "jump": "o",
      "op": "JUMP"
    },
    "10951": {
      "op": "JUMPDEST"
    },
    "10952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10954": {
      "op": "DUP1"
    },
    "10955": {
      "op": "DUP3"
    },
    "10956": {
      "op": "MSTORE"
    },
    "10957": {
      "op": "DUP3"
    },
    "10958": {
      "op": "MLOAD"
    },
    "10959": {
      "op": "DUP3"
    },
    "10960": {
      "op": "DUP3"
    },
    "10961": {
      "op": "ADD"
    },
    "10962": {
      "op": "DUP2"
    },
    "10963": {
      "op": "SWAP1"
    },
    "10964": {
      "op": "MSTORE"
    },
    "10965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10967": {
      "op": "SWAP2"
    },
    "10968": {
      "op": "SWAP1"
    },
    "10969": {
      "op": "DUP5"
    },
    "10970": {
      "op": "DUP3"
    },
    "10971": {
      "op": "ADD"
    },
    "10972": {
      "op": "SWAP1"
    },
    "10973": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10975": {
      "op": "DUP6"
    },
    "10976": {
      "op": "ADD"
    },
    "10977": {
      "op": "SWAP1"
    },
    "10978": {
      "op": "DUP5"
    },
    "10979": {
      "op": "JUMPDEST"
    },
    "10980": {
      "op": "DUP2"
    },
    "10981": {
      "op": "DUP2"
    },
    "10982": {
      "op": "LT"
    },
    "10983": {
      "op": "ISZERO"
    },
    "10984": {
      "op": "PUSH2",
      "value": "0x2AFF"
    },
    "10987": {
      "op": "JUMPI"
    },
    "10988": {
      "op": "DUP4"
    },
    "10989": {
      "op": "MLOAD"
    },
    "10990": {
      "op": "DUP4"
    },
    "10991": {
      "op": "MSTORE"
    },
    "10992": {
      "op": "SWAP3"
    },
    "10993": {
      "op": "DUP5"
    },
    "10994": {
      "op": "ADD"
    },
    "10995": {
      "op": "SWAP3"
    },
    "10996": {
      "op": "SWAP2"
    },
    "10997": {
      "op": "DUP5"
    },
    "10998": {
      "op": "ADD"
    },
    "10999": {
      "op": "SWAP2"
    },
    "11000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11002": {
      "op": "ADD"
    },
    "11003": {
      "op": "PUSH2",
      "value": "0x2AE3"
    },
    "11006": {
      "op": "JUMP"
    },
    "11007": {
      "op": "JUMPDEST"
    },
    "11008": {
      "op": "POP"
    },
    "11009": {
      "op": "SWAP1"
    },
    "11010": {
      "op": "SWAP7"
    },
    "11011": {
      "op": "SWAP6"
    },
    "11012": {
      "op": "POP"
    },
    "11013": {
      "op": "POP"
    },
    "11014": {
      "op": "POP"
    },
    "11015": {
      "op": "POP"
    },
    "11016": {
      "op": "POP"
    },
    "11017": {
      "op": "POP"
    },
    "11018": {
      "jump": "o",
      "op": "JUMP"
    },
    "11019": {
      "op": "JUMPDEST"
    },
    "11020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11022": {
      "op": "DUP2"
    },
    "11023": {
      "op": "MSTORE"
    },
    "11024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11026": {
      "op": "PUSH2",
      "value": "0x2508"
    },
    "11029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11031": {
      "op": "DUP4"
    },
    "11032": {
      "op": "ADD"
    },
    "11033": {
      "op": "DUP5"
    },
    "11034": {
      "op": "PUSH2",
      "value": "0x2947"
    },
    "11037": {
      "jump": "i",
      "op": "JUMP"
    },
    "11038": {
      "op": "JUMPDEST"
    },
    "11039": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11041": {
      "op": "DUP2"
    },
    "11042": {
      "op": "MSTORE"
    },
    "11043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11045": {
      "op": "PUSH2",
      "value": "0x2B31"
    },
    "11048": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11050": {
      "op": "DUP4"
    },
    "11051": {
      "op": "ADD"
    },
    "11052": {
      "op": "DUP6"
    },
    "11053": {
      "op": "PUSH2",
      "value": "0x2947"
    },
    "11056": {
      "jump": "i",
      "op": "JUMP"
    },
    "11057": {
      "op": "JUMPDEST"
    },
    "11058": {
      "op": "DUP3"
    },
    "11059": {
      "op": "DUP2"
    },
    "11060": {
      "op": "SUB"
    },
    "11061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11063": {
      "op": "DUP5"
    },
    "11064": {
      "op": "ADD"
    },
    "11065": {
      "op": "MSTORE"
    },
    "11066": {
      "op": "PUSH2",
      "value": "0xA23"
    },
    "11069": {
      "op": "DUP2"
    },
    "11070": {
      "op": "DUP6"
    },
    "11071": {
      "op": "PUSH2",
      "value": "0x2947"
    },
    "11074": {
      "jump": "i",
      "op": "JUMP"
    },
    "11075": {
      "op": "JUMPDEST"
    },
    "11076": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11078": {
      "op": "DUP2"
    },
    "11079": {
      "op": "ADD"
    },
    "11080": {
      "op": "PUSH2",
      "value": "0x2B51"
    },
    "11083": {
      "op": "DUP3"
    },
    "11084": {
      "op": "DUP8"
    },
    "11085": {
      "op": "PUSH2",
      "value": "0x29CC"
    },
    "11088": {
      "jump": "i",
      "op": "JUMP"
    },
    "11089": {
      "op": "JUMPDEST"
    },
    "11090": {
      "op": "DUP5"
    },
    "11091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11093": {
      "op": "DUP4"
    },
    "11094": {
      "op": "ADD"
    },
    "11095": {
      "op": "MSTORE"
    },
    "11096": {
      "op": "DUP4"
    },
    "11097": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11099": {
      "op": "DUP4"
    },
    "11100": {
      "op": "ADD"
    },
    "11101": {
      "op": "MSTORE"
    },
    "11102": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "11107": {
      "op": "DUP4"
    },
    "11108": {
      "op": "AND"
    },
    "11109": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11111": {
      "op": "DUP4"
    },
    "11112": {
      "op": "ADD"
    },
    "11113": {
      "op": "MSTORE"
    },
    "11114": {
      "op": "SWAP6"
    },
    "11115": {
      "op": "SWAP5"
    },
    "11116": {
      "op": "POP"
    },
    "11117": {
      "op": "POP"
    },
    "11118": {
      "op": "POP"
    },
    "11119": {
      "op": "POP"
    },
    "11120": {
      "op": "POP"
    },
    "11121": {
      "jump": "o",
      "op": "JUMP"
    },
    "11122": {
      "op": "JUMPDEST"
    },
    "11123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11125": {
      "op": "DUP2"
    },
    "11126": {
      "op": "MSTORE"
    },
    "11127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11129": {
      "op": "PUSH2",
      "value": "0x2508"
    },
    "11132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11134": {
      "op": "DUP4"
    },
    "11135": {
      "op": "ADD"
    },
    "11136": {
      "op": "DUP5"
    },
    "11137": {
      "op": "PUSH2",
      "value": "0x2981"
    },
    "11140": {
      "jump": "i",
      "op": "JUMP"
    },
    "11141": {
      "op": "JUMPDEST"
    },
    "11142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11144": {
      "op": "DUP1"
    },
    "11145": {
      "op": "DUP3"
    },
    "11146": {
      "op": "MSTORE"
    },
    "11147": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "11149": {
      "op": "SWAP1"
    },
    "11150": {
      "op": "DUP3"
    },
    "11151": {
      "op": "ADD"
    },
    "11152": {
      "op": "MSTORE"
    },
    "11153": {
      "op": "PUSH32",
      "value": "0x455243313135353A204552433131353552656365697665722072656A65637465"
    },
    "11186": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11188": {
      "op": "DUP3"
    },
    "11189": {
      "op": "ADD"
    },
    "11190": {
      "op": "MSTORE"
    },
    "11191": {
      "op": "PUSH8",
      "value": "0x6420746F6B656E73"
    },
    "11200": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11202": {
      "op": "SHL"
    },
    "11203": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11205": {
      "op": "DUP3"
    },
    "11206": {
      "op": "ADD"
    },
    "11207": {
      "op": "MSTORE"
    },
    "11208": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11210": {
      "op": "ADD"
    },
    "11211": {
      "op": "SWAP1"
    },
    "11212": {
      "jump": "o",
      "op": "JUMP"
    },
    "11213": {
      "op": "JUMPDEST"
    },
    "11214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11216": {
      "op": "DUP1"
    },
    "11217": {
      "op": "DUP3"
    },
    "11218": {
      "op": "MSTORE"
    },
    "11219": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "11221": {
      "op": "SWAP1"
    },
    "11222": {
      "op": "DUP3"
    },
    "11223": {
      "op": "ADD"
    },
    "11224": {
      "op": "MSTORE"
    },
    "11225": {
      "op": "PUSH21",
      "value": "0x21B0B63632B91034B9903737BA103A343290282BA7"
    },
    "11247": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "11249": {
      "op": "SHL"
    },
    "11250": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11252": {
      "op": "DUP3"
    },
    "11253": {
      "op": "ADD"
    },
    "11254": {
      "op": "MSTORE"
    },
    "11255": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11257": {
      "op": "ADD"
    },
    "11258": {
      "op": "SWAP1"
    },
    "11259": {
      "jump": "o",
      "op": "JUMP"
    },
    "11260": {
      "op": "JUMPDEST"
    },
    "11261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11263": {
      "op": "DUP1"
    },
    "11264": {
      "op": "DUP3"
    },
    "11265": {
      "op": "MSTORE"
    },
    "11266": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "11268": {
      "op": "SWAP1"
    },
    "11269": {
      "op": "DUP3"
    },
    "11270": {
      "op": "ADD"
    },
    "11271": {
      "op": "MSTORE"
    },
    "11272": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F20746865207A65726F206164"
    },
    "11305": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11307": {
      "op": "DUP3"
    },
    "11308": {
      "op": "ADD"
    },
    "11309": {
      "op": "MSTORE"
    },
    "11310": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "11316": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "11318": {
      "op": "SHL"
    },
    "11319": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11321": {
      "op": "DUP3"
    },
    "11322": {
      "op": "ADD"
    },
    "11323": {
      "op": "MSTORE"
    },
    "11324": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11326": {
      "op": "ADD"
    },
    "11327": {
      "op": "SWAP1"
    },
    "11328": {
      "jump": "o",
      "op": "JUMP"
    },
    "11329": {
      "op": "JUMPDEST"
    },
    "11330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11332": {
      "op": "DUP1"
    },
    "11333": {
      "op": "DUP3"
    },
    "11334": {
      "op": "MSTORE"
    },
    "11335": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "11337": {
      "op": "SWAP1"
    },
    "11338": {
      "op": "DUP3"
    },
    "11339": {
      "op": "ADD"
    },
    "11340": {
      "op": "MSTORE"
    },
    "11341": {
      "op": "PUSH32",
      "value": "0x455243313135353A20696E73756666696369656E742062616C616E636520666F"
    },
    "11374": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11376": {
      "op": "DUP3"
    },
    "11377": {
      "op": "ADD"
    },
    "11378": {
      "op": "MSTORE"
    },
    "11379": {
      "op": "PUSH10",
      "value": "0x39103A3930B739B332B9"
    },
    "11390": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "11392": {
      "op": "SHL"
    },
    "11393": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11395": {
      "op": "DUP3"
    },
    "11396": {
      "op": "ADD"
    },
    "11397": {
      "op": "MSTORE"
    },
    "11398": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11400": {
      "op": "ADD"
    },
    "11401": {
      "op": "SWAP1"
    },
    "11402": {
      "jump": "o",
      "op": "JUMP"
    },
    "11403": {
      "op": "JUMPDEST"
    },
    "11404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11406": {
      "op": "DUP1"
    },
    "11407": {
      "op": "DUP3"
    },
    "11408": {
      "op": "MSTORE"
    },
    "11409": {
      "op": "DUP2"
    },
    "11410": {
      "op": "DUP2"
    },
    "11411": {
      "op": "ADD"
    },
    "11412": {
      "op": "MSTORE"
    },
    "11413": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "11446": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11448": {
      "op": "DUP3"
    },
    "11449": {
      "op": "ADD"
    },
    "11450": {
      "op": "MSTORE"
    },
    "11451": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11453": {
      "op": "ADD"
    },
    "11454": {
      "op": "SWAP1"
    },
    "11455": {
      "jump": "o",
      "op": "JUMP"
    },
    "11456": {
      "op": "JUMPDEST"
    },
    "11457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11459": {
      "op": "DUP1"
    },
    "11460": {
      "op": "DUP3"
    },
    "11461": {
      "op": "MSTORE"
    },
    "11462": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "11464": {
      "op": "SWAP1"
    },
    "11465": {
      "op": "DUP3"
    },
    "11466": {
      "op": "ADD"
    },
    "11467": {
      "op": "MSTORE"
    },
    "11468": {
      "op": "PUSH32",
      "value": "0x546865206465656420646F65736E27742062656C6F6E6720746F207468652063"
    },
    "11501": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11503": {
      "op": "DUP3"
    },
    "11504": {
      "op": "ADD"
    },
    "11505": {
      "op": "MSTORE"
    },
    "11506": {
      "op": "PUSH5",
      "value": "0x30B63632B9"
    },
    "11512": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "11514": {
      "op": "SHL"
    },
    "11515": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11517": {
      "op": "DUP3"
    },
    "11518": {
      "op": "ADD"
    },
    "11519": {
      "op": "MSTORE"
    },
    "11520": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11522": {
      "op": "ADD"
    },
    "11523": {
      "op": "SWAP1"
    },
    "11524": {
      "jump": "o",
      "op": "JUMP"
    },
    "11525": {
      "op": "JUMPDEST"
    },
    "11526": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11528": {
      "op": "DUP2"
    },
    "11529": {
      "op": "ADD"
    },
    "11530": {
      "op": "PUSH2",
      "value": "0x6D8"
    },
    "11533": {
      "op": "DUP3"
    },
    "11534": {
      "op": "DUP5"
    },
    "11535": {
      "op": "PUSH2",
      "value": "0x29EE"
    },
    "11538": {
      "jump": "i",
      "op": "JUMP"
    },
    "11539": {
      "op": "JUMPDEST"
    },
    "11540": {
      "op": "DUP5"
    },
    "11541": {
      "op": "DUP2"
    },
    "11542": {
      "op": "MSTORE"
    },
    "11543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11545": {
      "op": "DUP2"
    },
    "11546": {
      "op": "ADD"
    },
    "11547": {
      "op": "DUP5"
    },
    "11548": {
      "op": "SWAP1"
    },
    "11549": {
      "op": "MSTORE"
    },
    "11550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11556": {
      "op": "SHL"
    },
    "11557": {
      "op": "SUB"
    },
    "11558": {
      "op": "DUP4"
    },
    "11559": {
      "op": "AND"
    },
    "11560": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11562": {
      "op": "DUP3"
    },
    "11563": {
      "op": "ADD"
    },
    "11564": {
      "op": "MSTORE"
    },
    "11565": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11567": {
      "op": "DUP2"
    },
    "11568": {
      "op": "ADD"
    },
    "11569": {
      "op": "PUSH2",
      "value": "0xA23"
    },
    "11572": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11574": {
      "op": "DUP4"
    },
    "11575": {
      "op": "ADD"
    },
    "11576": {
      "op": "DUP5"
    },
    "11577": {
      "op": "PUSH2",
      "value": "0x29EE"
    },
    "11580": {
      "jump": "i",
      "op": "JUMP"
    },
    "11581": {
      "op": "JUMPDEST"
    },
    "11582": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11584": {
      "op": "DUP8"
    },
    "11585": {
      "op": "AND"
    },
    "11586": {
      "op": "DUP2"
    },
    "11587": {
      "op": "MSTORE"
    },
    "11588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11594": {
      "op": "SHL"
    },
    "11595": {
      "op": "SUB"
    },
    "11596": {
      "op": "DUP7"
    },
    "11597": {
      "op": "AND"
    },
    "11598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11600": {
      "op": "DUP3"
    },
    "11601": {
      "op": "ADD"
    },
    "11602": {
      "op": "MSTORE"
    },
    "11603": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "11608": {
      "op": "DUP6"
    },
    "11609": {
      "op": "AND"
    },
    "11610": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11612": {
      "op": "DUP3"
    },
    "11613": {
      "op": "ADD"
    },
    "11614": {
      "op": "MSTORE"
    },
    "11615": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "11621": {
      "op": "DUP5"
    },
    "11622": {
      "op": "AND"
    },
    "11623": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11625": {
      "op": "DUP3"
    },
    "11626": {
      "op": "ADD"
    },
    "11627": {
      "op": "MSTORE"
    },
    "11628": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "11631": {
      "op": "DUP2"
    },
    "11632": {
      "op": "ADD"
    },
    "11633": {
      "op": "PUSH2",
      "value": "0x2D7D"
    },
    "11636": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11638": {
      "op": "DUP4"
    },
    "11639": {
      "op": "ADD"
    },
    "11640": {
      "op": "DUP6"
    },
    "11641": {
      "op": "PUSH2",
      "value": "0x29EE"
    },
    "11644": {
      "jump": "i",
      "op": "JUMP"
    },
    "11645": {
      "op": "JUMPDEST"
    },
    "11646": {
      "op": "DUP3"
    },
    "11647": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11650": {
      "op": "DUP4"
    },
    "11651": {
      "op": "ADD"
    },
    "11652": {
      "op": "MSTORE"
    },
    "11653": {
      "op": "SWAP8"
    },
    "11654": {
      "op": "SWAP7"
    },
    "11655": {
      "op": "POP"
    },
    "11656": {
      "op": "POP"
    },
    "11657": {
      "op": "POP"
    },
    "11658": {
      "op": "POP"
    },
    "11659": {
      "op": "POP"
    },
    "11660": {
      "op": "POP"
    },
    "11661": {
      "op": "POP"
    },
    "11662": {
      "jump": "o",
      "op": "JUMP"
    },
    "11663": {
      "op": "JUMPDEST"
    },
    "11664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11666": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11675": {
      "op": "DUP3"
    },
    "11676": {
      "op": "GT"
    },
    "11677": {
      "op": "ISZERO"
    },
    "11678": {
      "op": "PUSH2",
      "value": "0x2DA9"
    },
    "11681": {
      "op": "JUMPI"
    },
    "11682": {
      "op": "PUSH2",
      "value": "0x2DA9"
    },
    "11685": {
      "op": "PUSH2",
      "value": "0x2E8D"
    },
    "11688": {
      "jump": "i",
      "op": "JUMP"
    },
    "11689": {
      "op": "JUMPDEST"
    },
    "11690": {
      "op": "POP"
    },
    "11691": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11693": {
      "op": "SHL"
    },
    "11694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11696": {
      "op": "ADD"
    },
    "11697": {
      "op": "SWAP1"
    },
    "11698": {
      "jump": "o",
      "op": "JUMP"
    },
    "11699": {
      "op": "JUMPDEST"
    },
    "11700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11702": {
      "op": "DUP3"
    },
    "11703": {
      "op": "NOT"
    },
    "11704": {
      "op": "DUP3"
    },
    "11705": {
      "op": "GT"
    },
    "11706": {
      "op": "ISZERO"
    },
    "11707": {
      "op": "PUSH2",
      "value": "0x2DC6"
    },
    "11710": {
      "op": "JUMPI"
    },
    "11711": {
      "op": "PUSH2",
      "value": "0x2DC6"
    },
    "11714": {
      "op": "PUSH2",
      "value": "0x2E77"
    },
    "11717": {
      "jump": "i",
      "op": "JUMP"
    },
    "11718": {
      "op": "JUMPDEST"
    },
    "11719": {
      "op": "POP"
    },
    "11720": {
      "op": "ADD"
    },
    "11721": {
      "op": "SWAP1"
    },
    "11722": {
      "jump": "o",
      "op": "JUMP"
    },
    "11723": {
      "op": "JUMPDEST"
    },
    "11724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11726": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "11732": {
      "op": "DUP1"
    },
    "11733": {
      "op": "DUP4"
    },
    "11734": {
      "op": "AND"
    },
    "11735": {
      "op": "DUP2"
    },
    "11736": {
      "op": "DUP6"
    },
    "11737": {
      "op": "AND"
    },
    "11738": {
      "op": "DUP1"
    },
    "11739": {
      "op": "DUP4"
    },
    "11740": {
      "op": "SUB"
    },
    "11741": {
      "op": "DUP3"
    },
    "11742": {
      "op": "GT"
    },
    "11743": {
      "op": "ISZERO"
    },
    "11744": {
      "op": "PUSH2",
      "value": "0x2DEB"
    },
    "11747": {
      "op": "JUMPI"
    },
    "11748": {
      "op": "PUSH2",
      "value": "0x2DEB"
    },
    "11751": {
      "op": "PUSH2",
      "value": "0x2E77"
    },
    "11754": {
      "jump": "i",
      "op": "JUMP"
    },
    "11755": {
      "op": "JUMPDEST"
    },
    "11756": {
      "op": "ADD"
    },
    "11757": {
      "op": "SWAP5"
    },
    "11758": {
      "op": "SWAP4"
    },
    "11759": {
      "op": "POP"
    },
    "11760": {
      "op": "POP"
    },
    "11761": {
      "op": "POP"
    },
    "11762": {
      "op": "POP"
    },
    "11763": {
      "jump": "o",
      "op": "JUMP"
    },
    "11764": {
      "op": "JUMPDEST"
    },
    "11765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11767": {
      "op": "DUP2"
    },
    "11768": {
      "op": "DUP2"
    },
    "11769": {
      "op": "SHR"
    },
    "11770": {
      "op": "SWAP1"
    },
    "11771": {
      "op": "DUP3"
    },
    "11772": {
      "op": "AND"
    },
    "11773": {
      "op": "DUP1"
    },
    "11774": {
      "op": "PUSH2",
      "value": "0x2E08"
    },
    "11777": {
      "op": "JUMPI"
    },
    "11778": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11780": {
      "op": "DUP3"
    },
    "11781": {
      "op": "AND"
    },
    "11782": {
      "op": "SWAP2"
    },
    "11783": {
      "op": "POP"
    },
    "11784": {
      "op": "JUMPDEST"
    },
    "11785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11787": {
      "op": "DUP3"
    },
    "11788": {
      "op": "LT"
    },
    "11789": {
      "op": "DUP2"
    },
    "11790": {
      "op": "EQ"
    },
    "11791": {
      "op": "ISZERO"
    },
    "11792": {
      "op": "PUSH2",
      "value": "0x2E29"
    },
    "11795": {
      "op": "JUMPI"
    },
    "11796": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11801": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11803": {
      "op": "SHL"
    },
    "11804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11806": {
      "op": "MSTORE"
    },
    "11807": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11809": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11811": {
      "op": "MSTORE"
    },
    "11812": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11816": {
      "op": "REVERT"
    },
    "11817": {
      "op": "JUMPDEST"
    },
    "11818": {
      "op": "POP"
    },
    "11819": {
      "op": "SWAP2"
    },
    "11820": {
      "op": "SWAP1"
    },
    "11821": {
      "op": "POP"
    },
    "11822": {
      "jump": "o",
      "op": "JUMP"
    },
    "11823": {
      "op": "JUMPDEST"
    },
    "11824": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11826": {
      "op": "DUP3"
    },
    "11827": {
      "op": "ADD"
    },
    "11828": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11830": {
      "op": "NOT"
    },
    "11831": {
      "op": "AND"
    },
    "11832": {
      "op": "DUP2"
    },
    "11833": {
      "op": "ADD"
    },
    "11834": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11843": {
      "op": "DUP2"
    },
    "11844": {
      "op": "GT"
    },
    "11845": {
      "op": "DUP3"
    },
    "11846": {
      "op": "DUP3"
    },
    "11847": {
      "op": "LT"
    },
    "11848": {
      "op": "OR"
    },
    "11849": {
      "op": "ISZERO"
    },
    "11850": {
      "op": "PUSH2",
      "value": "0x2E55"
    },
    "11853": {
      "op": "JUMPI"
    },
    "11854": {
      "op": "PUSH2",
      "value": "0x2E55"
    },
    "11857": {
      "op": "PUSH2",
      "value": "0x2E8D"
    },
    "11860": {
      "jump": "i",
      "op": "JUMP"
    },
    "11861": {
      "op": "JUMPDEST"
    },
    "11862": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11864": {
      "op": "MSTORE"
    },
    "11865": {
      "op": "POP"
    },
    "11866": {
      "op": "POP"
    },
    "11867": {
      "jump": "o",
      "op": "JUMP"
    },
    "11868": {
      "op": "JUMPDEST"
    },
    "11869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11873": {
      "op": "NOT"
    },
    "11874": {
      "op": "DUP3"
    },
    "11875": {
      "op": "EQ"
    },
    "11876": {
      "op": "ISZERO"
    },
    "11877": {
      "op": "PUSH2",
      "value": "0x2E70"
    },
    "11880": {
      "op": "JUMPI"
    },
    "11881": {
      "op": "PUSH2",
      "value": "0x2E70"
    },
    "11884": {
      "op": "PUSH2",
      "value": "0x2E77"
    },
    "11887": {
      "jump": "i",
      "op": "JUMP"
    },
    "11888": {
      "op": "JUMPDEST"
    },
    "11889": {
      "op": "POP"
    },
    "11890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11892": {
      "op": "ADD"
    },
    "11893": {
      "op": "SWAP1"
    },
    "11894": {
      "jump": "o",
      "op": "JUMP"
    },
    "11895": {
      "op": "JUMPDEST"
    },
    "11896": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11901": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11903": {
      "op": "SHL"
    },
    "11904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11906": {
      "op": "MSTORE"
    },
    "11907": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "11909": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11911": {
      "op": "MSTORE"
    },
    "11912": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11916": {
      "op": "REVERT"
    },
    "11917": {
      "op": "JUMPDEST"
    },
    "11918": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11923": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11925": {
      "op": "SHL"
    },
    "11926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11928": {
      "op": "MSTORE"
    },
    "11929": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "11931": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11933": {
      "op": "MSTORE"
    },
    "11934": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11938": {
      "op": "REVERT"
    },
    "11939": {
      "op": "JUMPDEST"
    },
    "11940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11942": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11944": {
      "op": "RETURNDATASIZE"
    },
    "11945": {
      "op": "GT"
    },
    "11946": {
      "op": "ISZERO"
    },
    "11947": {
      "op": "PUSH2",
      "value": "0x2EB8"
    },
    "11950": {
      "op": "JUMPI"
    },
    "11951": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11953": {
      "op": "DUP2"
    },
    "11954": {
      "op": "DUP3"
    },
    "11955": {
      "op": "RETURNDATACOPY"
    },
    "11956": {
      "op": "MLOAD"
    },
    "11957": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11959": {
      "op": "SHR"
    },
    "11960": {
      "op": "JUMPDEST"
    },
    "11961": {
      "op": "SWAP1"
    },
    "11962": {
      "jump": "o",
      "op": "JUMP"
    },
    "11963": {
      "op": "JUMPDEST"
    },
    "11964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11966": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11968": {
      "op": "RETURNDATASIZE"
    },
    "11969": {
      "op": "LT"
    },
    "11970": {
      "op": "ISZERO"
    },
    "11971": {
      "op": "PUSH2",
      "value": "0x2EC9"
    },
    "11974": {
      "op": "JUMPI"
    },
    "11975": {
      "op": "SWAP1"
    },
    "11976": {
      "jump": "o",
      "op": "JUMP"
    },
    "11977": {
      "op": "JUMPDEST"
    },
    "11978": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11980": {
      "op": "MLOAD"
    },
    "11981": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11983": {
      "op": "NOT"
    },
    "11984": {
      "op": "RETURNDATASIZE"
    },
    "11985": {
      "op": "DUP2"
    },
    "11986": {
      "op": "ADD"
    },
    "11987": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11989": {
      "op": "DUP4"
    },
    "11990": {
      "op": "RETURNDATACOPY"
    },
    "11991": {
      "op": "DUP2"
    },
    "11992": {
      "op": "MLOAD"
    },
    "11993": {
      "op": "RETURNDATASIZE"
    },
    "11994": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12003": {
      "op": "DUP2"
    },
    "12004": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12006": {
      "op": "DUP5"
    },
    "12007": {
      "op": "ADD"
    },
    "12008": {
      "op": "GT"
    },
    "12009": {
      "op": "DUP2"
    },
    "12010": {
      "op": "DUP5"
    },
    "12011": {
      "op": "GT"
    },
    "12012": {
      "op": "OR"
    },
    "12013": {
      "op": "ISZERO"
    },
    "12014": {
      "op": "PUSH2",
      "value": "0x2EF9"
    },
    "12017": {
      "op": "JUMPI"
    },
    "12018": {
      "op": "POP"
    },
    "12019": {
      "op": "POP"
    },
    "12020": {
      "op": "POP"
    },
    "12021": {
      "op": "POP"
    },
    "12022": {
      "op": "POP"
    },
    "12023": {
      "op": "SWAP1"
    },
    "12024": {
      "jump": "o",
      "op": "JUMP"
    },
    "12025": {
      "op": "JUMPDEST"
    },
    "12026": {
      "op": "DUP3"
    },
    "12027": {
      "op": "DUP6"
    },
    "12028": {
      "op": "ADD"
    },
    "12029": {
      "op": "SWAP2"
    },
    "12030": {
      "op": "POP"
    },
    "12031": {
      "op": "DUP2"
    },
    "12032": {
      "op": "MLOAD"
    },
    "12033": {
      "op": "DUP2"
    },
    "12034": {
      "op": "DUP2"
    },
    "12035": {
      "op": "GT"
    },
    "12036": {
      "op": "ISZERO"
    },
    "12037": {
      "op": "PUSH2",
      "value": "0x2F11"
    },
    "12040": {
      "op": "JUMPI"
    },
    "12041": {
      "op": "POP"
    },
    "12042": {
      "op": "POP"
    },
    "12043": {
      "op": "POP"
    },
    "12044": {
      "op": "POP"
    },
    "12045": {
      "op": "POP"
    },
    "12046": {
      "op": "POP"
    },
    "12047": {
      "op": "SWAP1"
    },
    "12048": {
      "jump": "o",
      "op": "JUMP"
    },
    "12049": {
      "op": "JUMPDEST"
    },
    "12050": {
      "op": "DUP5"
    },
    "12051": {
      "op": "RETURNDATASIZE"
    },
    "12052": {
      "op": "DUP8"
    },
    "12053": {
      "op": "ADD"
    },
    "12054": {
      "op": "ADD"
    },
    "12055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12057": {
      "op": "DUP3"
    },
    "12058": {
      "op": "DUP6"
    },
    "12059": {
      "op": "ADD"
    },
    "12060": {
      "op": "ADD"
    },
    "12061": {
      "op": "GT"
    },
    "12062": {
      "op": "ISZERO"
    },
    "12063": {
      "op": "PUSH2",
      "value": "0x2F2B"
    },
    "12066": {
      "op": "JUMPI"
    },
    "12067": {
      "op": "POP"
    },
    "12068": {
      "op": "POP"
    },
    "12069": {
      "op": "POP"
    },
    "12070": {
      "op": "POP"
    },
    "12071": {
      "op": "POP"
    },
    "12072": {
      "op": "POP"
    },
    "12073": {
      "op": "SWAP1"
    },
    "12074": {
      "jump": "o",
      "op": "JUMP"
    },
    "12075": {
      "op": "JUMPDEST"
    },
    "12076": {
      "op": "PUSH2",
      "value": "0x2F3A"
    },
    "12079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12081": {
      "op": "DUP3"
    },
    "12082": {
      "op": "DUP7"
    },
    "12083": {
      "op": "ADD"
    },
    "12084": {
      "op": "ADD"
    },
    "12085": {
      "op": "DUP8"
    },
    "12086": {
      "op": "PUSH2",
      "value": "0x2E2F"
    },
    "12089": {
      "jump": "i",
      "op": "JUMP"
    },
    "12090": {
      "op": "JUMPDEST"
    },
    "12091": {
      "op": "POP"
    },
    "12092": {
      "op": "SWAP1"
    },
    "12093": {
      "op": "SWAP6"
    },
    "12094": {
      "op": "SWAP5"
    },
    "12095": {
      "op": "POP"
    },
    "12096": {
      "op": "POP"
    },
    "12097": {
      "op": "POP"
    },
    "12098": {
      "op": "POP"
    },
    "12099": {
      "op": "POP"
    },
    "12100": {
      "jump": "o",
      "op": "JUMP"
    },
    "12101": {
      "op": "JUMPDEST"
    },
    "12102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12106": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12108": {
      "op": "SHL"
    },
    "12109": {
      "op": "SUB"
    },
    "12110": {
      "op": "NOT"
    },
    "12111": {
      "op": "DUP2"
    },
    "12112": {
      "op": "AND"
    },
    "12113": {
      "op": "DUP2"
    },
    "12114": {
      "op": "EQ"
    },
    "12115": {
      "op": "PUSH2",
      "value": "0x1231"
    },
    "12118": {
      "op": "JUMPI"
    },
    "12119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12121": {
      "op": "DUP1"
    },
    "12122": {
      "op": "REVERT"
    }
  },
  "sha1": "de6bb9f31a506c246359b9ed443cb989f2e6b29b",
  "source": "// SPDX-License-Identifier: GPL-3.0-only\n\npragma solidity 0.8.4;\n\nimport \"@pwnfinance/contracts/MultiToken.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\n\ncontract PWNDeed is ERC1155, Ownable {\n\n    /*----------------------------------------------------------*|\n    |*  # VARIABLES & CONSTANTS DEFINITIONS                     *|\n    |*----------------------------------------------------------*/\n\n    address public PWN;                 // necessary msg.sender for all Deed related manipulations\n    uint256 public id;                  // simple DeedID counter\n    uint256 private nonce;              // server for offer hash generation\n\n    /**\n     * Construct defining a Deed\n     * @param status 0 == none/dead || 1 == new/open || 2 == running/accepted offer || 3 == paid back || 4 == expired\n     * @param borrower Address of the issuer / borrower - stays the same for entire lifespan of the token\n     * @param duration Loan duration in seconds\n     * @param expiration Unix timestamp (in seconds) setting up the default deadline\n     * @param collateral Consisting of another an `Asset` struct defined in the MultiToken library\n     * @param acceptedOffer Hash of the offer which will be bound to the deed\n     * @param pendingOffers List of offers made to the Deed\n     */\n    struct Deed {\n        uint8 status;\n        address borrower;\n        uint32 duration;\n        uint40 expiration;\n        MultiToken.Asset collateral;\n        bytes32 acceptedOffer;\n        bytes32[] pendingOffers;\n    }\n\n    /**\n     * Construct defining an offer\n     * @param did Deed ID the offer is bound to\n     * @param toBePaid Nn amount to be paid back (borrowed + interest)\n     * @param lender Address of the lender to be the loan withdrawn from\n     * @param loan Consisting of another an `Asset` struct defined in the MultiToken library\n     */\n    struct Offer {\n        uint256 did;\n        uint256 toBePaid;\n        address lender;\n        MultiToken.Asset loan;\n    }\n\n    mapping (uint256 => Deed) public deeds;             // mapping of all Deed data\n    mapping (bytes32 => Offer) public offers;           // mapping of all Offer data\n\n    /*----------------------------------------------------------*|\n    |*  # EVENTS & ERRORS DEFINITIONS                           *|\n    |*----------------------------------------------------------*/\n\n    event DeedCreated(address indexed assetAddress, MultiToken.Category category, uint256 id, uint256 amount, uint32 duration, uint256 indexed did);\n    event OfferMade(address assetAddress, uint256 amount, address indexed lender, uint256 toBePaid, uint256 indexed did, bytes32 offer);\n    event DeedRevoked(uint256 did);\n    event OfferRevoked(bytes32 offer);\n    event OfferAccepted(uint256 did, bytes32 offer);\n    event PaidBack(uint256 did, bytes32 offer);\n    event DeedClaimed(uint256 did);\n\n    /*----------------------------------------------------------*|\n    |*  # MODIFIERS                                             *|\n    |*----------------------------------------------------------*/\n\n    modifier onlyPWN() {\n        require(msg.sender == PWN, \"Caller is not the PWN\");\n        _;\n    }\n\n    /*----------------------------------------------------------*|\n    |*  # CONSTRUCTOR & FUNCTIONS                               *|\n    |*----------------------------------------------------------*/\n\n    /*\n     *  PWN Deed constructor\n     *  @dev Creates the PWN Deed token contract - ERC1155 with extra use case specific features\n     *  @dev Once the PWN contract is set, you'll have to call `this.setPWN(PWN.address)` for this contract to work\n     *  @param _uri Uri to be used for finding the token metadata (https://api.pwn.finance/deed/...)\n     */\n    constructor(string memory _uri) ERC1155(_uri) Ownable() {\n\n    }\n\n    /*\n     *   All contracts of this section can only be called by the PWN contract itself - once set via `setPWN(PWN.address)`\n     */\n\n    /**\n     * create\n     * @dev Creates the PWN Deed token contract - ERC1155 with extra use case specific features\n     * @param _assetAddress Address of the asset contract\n     * @param _assetCategory Category of the asset - see { MultiToken.sol }\n     * @param _duration Loan duration in seconds\n     * @param _assetId ID of an ERC721 or ERC1155 token || 0 in case the token doesn't have IDs\n     * @param _assetAmount Amount of an ERC20 or ERC1155 token || 0 in case of NFTs\n     * @param _owner Address initiating the new Deed\n     * @return Deed ID of the newly minted Deed\n     */\n    function create(\n        address _assetAddress,\n        MultiToken.Category _assetCategory,\n        uint32 _duration,\n        uint256 _assetId,\n        uint256 _assetAmount,\n        address _owner\n    ) external onlyPWN returns (uint256) {\n        id++;\n\n        Deed storage deed = deeds[id];\n        deed.duration = _duration;\n        deed.collateral.assetAddress = _assetAddress;\n        deed.collateral.category = _assetCategory;\n        deed.collateral.id = _assetId;\n        deed.collateral.amount = _assetAmount;\n\n        _mint(_owner, id, 1, \"\");\n\n        deed.status = 1;\n\n        emit DeedCreated(_assetAddress, _assetCategory, _assetId, _assetAmount, _duration, id);\n\n        return id;\n    }\n\n    /**\n     * revoke\n     * @dev Burns a deed token\n     * @param _did Deed ID of the token to be burned\n     * @param _owner Address of the borrower who issued the Deed\n     */\n    function revoke(\n        uint256 _did,\n        address _owner\n    ) external onlyPWN {\n        require(balanceOf(_owner, _did) == 1, \"The deed doesn't belong to the caller\");\n        require(getDeedStatus(_did) == 1, \"Deed can't be revoked at this stage\");\n\n        deeds[_did].status = 0;\n\n        emit DeedRevoked(_did);\n    }\n\n    /**\n     * makeOffer\n     * @dev saves an offer object that defines loan terms\n     * @dev only ERC20 tokens can be offered as loan\n     * @param _assetAddress Address of the asset contract\n     * @param _assetAmount Amount of an ERC20 token to be offered as loan\n     * @param _lender Address of the asset lender\n     * @param _did ID of the Deed the offer should be bound to\n     * @param _toBePaid Amount to be paid back by the borrower\n     * @return hash of the newly created offer\n     */\n    function makeOffer(\n        address _assetAddress,\n        uint256 _assetAmount,\n        address _lender,\n        uint256 _did,\n        uint256 _toBePaid\n    ) external onlyPWN returns (bytes32) {\n        require(getDeedStatus(_did) == 1, \"Deed not accepting offers\");\n\n        bytes32 hash = keccak256(abi.encodePacked(_lender, nonce));\n        nonce++;\n\n        Offer storage offer = offers[hash];\n        offer.loan.assetAddress = _assetAddress;\n        offer.loan.amount = _assetAmount;\n        offer.toBePaid = _toBePaid;\n        offer.lender = _lender;\n        offer.did = _did;\n\n        deeds[_did].pendingOffers.push(hash);\n\n        emit OfferMade(_assetAddress, _assetAmount, _lender, _toBePaid, _did, hash);\n\n        return hash;\n    }\n\n    /**\n     * revokeOffer\n     * @dev function to remove a pending offer\n     * @dev This only removes the offer representation but it doesn't remove the offer from a list of pending offers.\n     *         The offers associated with a deed has to be filtered on the front end to only list the valid ones.\n     *         No longer existent offers will simply return 0 if prompted about their DID.\n     * @param _offer Hash identifying an offer\n     * @param _lender Address of the lender who made the offer\n     * @dev TODO: consider ways to remove the offer from the pending offers array / maybe replace for a mapping\n     */\n    function revokeOffer(\n        bytes32 _offer,\n        address _lender\n    ) external onlyPWN {\n        require(offers[_offer].lender == _lender, \"This address didn't create the offer\");\n        require(getDeedStatus(offers[_offer].did) == 1, \"Can only remove offers from open Deeds\");\n\n        delete offers[_offer];\n\n        emit OfferRevoked(_offer);\n    }\n\n    /**\n     * acceptOffer\n     * @dev function to set accepted offer\n     * @param _did ID of the Deed the offer should be bound to\n     * @param _offer Hash identifying an offer\n     * @param _owner Address of the borrower who issued the Deed\n     */\n    function acceptOffer(\n        uint256 _did,\n        bytes32 _offer,\n        address _owner\n    ) external onlyPWN {\n        require(balanceOf(_owner, _did) == 1, \"The deed doesn't belong to the caller\");\n        require(getDeedStatus(_did) == 1, \"Deed can't accept more offers\");\n\n        Deed storage deed = deeds[_did];\n        deed.borrower = _owner;\n        deed.expiration = uint40(block.timestamp) + deed.duration;\n        deed.acceptedOffer = _offer;\n        delete deed.pendingOffers;\n        deed.status = 2;\n\n        emit OfferAccepted(_did, _offer);\n    }\n\n    /**\n     * repayLoan\n     * @dev function to make proper state transition\n     * @param _did ID of the Deed which is paid back\n     */\n    function repayLoan(uint256 _did) external onlyPWN {\n        require(getDeedStatus(_did) == 2, \"Deed doesn't have an accepted offer to be paid back\");\n\n        deeds[_did].status = 3;\n\n        emit PaidBack(_did, deeds[_did].acceptedOffer);\n    }\n\n    /**\n     * claim\n     * @dev function that would burn the deed token if the token is in paidBack or expired state\n     * @param _did ID of the Deed which is claimed\n     * @param _owner Address of the deed token owner\n     */\n    function claim(\n        uint256 _did,\n        address _owner\n    ) external onlyPWN {\n        require(balanceOf(_owner, _did) == 1, \"Caller is not the deed owner\");\n        require(getDeedStatus(_did) >= 3, \"Deed can't be claimed yet\");\n\n        deeds[_did].status = 0;\n\n        emit DeedClaimed(_did);\n    }\n\n    /**\n     * burn\n     * @dev function that would burn the deed token if the token is in dead state\n     * @param _did ID of the Deed which is burned\n     * @param _owner Address of the deed token owner\n     */\n    function burn(\n        uint256 _did,\n        address _owner\n    ) external onlyPWN {\n        require(balanceOf(_owner, _did) == 1, \"Caller is not the deed owner\");\n        require(deeds[_did].status == 0, \"Deed can't be burned at this stage\");\n\n        delete deeds[_did];\n        _burn(_owner, _did, 1);\n    }\n\n    /*----------------------------------------------------------*|\n    |*  ## VIEW FUNCTIONS                                       *|\n    |*----------------------------------------------------------*/\n\n    /*--------------------------------*|\n    |*  ## VIEW FUNCTIONS - DEEDS     *|\n    |*--------------------------------*/\n\n    /**\n     * getDeedStatus\n     * @dev used in contract calls & status checks and also in UI for elementary deed status categorization\n     * @param _did Deed ID checked for status\n     * @return a status number\n     */\n    function getDeedStatus(uint256 _did) public view returns (uint8) {\n        if (deeds[_did].expiration > 0 && deeds[_did].expiration < block.timestamp && deeds[_did].status != 3) {\n            return 4;\n        } else {\n            return deeds[_did].status;\n        }\n    }\n\n    /**\n     * getExpiration\n     * @dev utility function to find out exact expiration time of a particular Deed\n     * @dev for simple status check use `this.getDeedStatus(did)` if `status == 4` then Deed has expired\n     * @param _did Deed ID to be checked\n     * @return unix time stamp in seconds\n     */\n    function getExpiration(uint256 _did) public view returns (uint40) {\n        return deeds[_did].expiration;\n    }\n\n    /**\n     * getDuration\n     * @dev utility function to find out loan duration period of a particular Deed\n     * @param _did Deed ID to be checked\n     * @return loan duration period in seconds\n     */\n    function getDuration(uint256 _did) public view returns (uint32) {\n        return deeds[_did].duration;\n    }\n\n    /**\n     * getBorrower\n     * @dev utility function to find out a borrower address of a particular Deed\n     * @param _did Deed ID to be checked\n     * @return address of the borrower\n     */\n    function getBorrower(uint256 _did) public view returns (address) {\n        return deeds[_did].borrower;\n    }\n\n    /**\n     * getDeedCollateral\n     * @dev utility function to find out collateral asset of a particular Deed\n     * @param _did Deed ID to be checked\n     * @return Asset construct - for definition see { MultiToken.sol }\n     */\n    function getDeedCollateral(uint256 _did) public view returns (MultiToken.Asset memory) {\n        return deeds[_did].collateral;\n    }\n\n    /**\n     * getOffers\n     * @dev utility function to get a list of all pending offers of a Deed\n     * @param _did Deed ID to be checked\n     * @return a list of offer hashes\n     */\n    function getOffers(uint256 _did) public view returns (bytes32[] memory) {\n        return deeds[_did].pendingOffers;\n    }\n\n    /**\n     * getAcceptedOffer\n     * @dev used to get a list of made offers to be queried in the UI - needs additional check for re-validating each offer\n     * @dev revalidation requires checking if the lender has sufficient balance and approved the asset\n     * @param _did Deed ID being queried for offers\n     * @return Hash of the accepted offer\n     */\n    function getAcceptedOffer(uint256 _did) public view returns (bytes32) {\n        return deeds[_did].acceptedOffer;\n    }\n\n    /*--------------------------------*|\n    |*  ## VIEW FUNCTIONS - OFFERS    *|\n    |*--------------------------------*/\n\n    /**\n     * getDeedID\n     * @dev utility function to find out which Deed is an offer associated with\n     * @param _offer Offer hash of an offer to be prompted\n     * @return Deed ID\n     */\n    function getDeedID(bytes32 _offer) public view returns (uint256) {\n        return offers[_offer].did;\n    }\n\n    /**\n     * getOfferLoan\n     * @dev utility function that returns the loan asset of a particular offer\n     * @param _offer Offer hash of an offer to be prompted\n     * @return Asset construct - for definition see { MultiToken.sol }\n     */\n    function getOfferLoan(bytes32 _offer) public view returns (MultiToken.Asset memory) {\n        return offers[_offer].loan;\n    }\n\n    /**\n     * toBePaid\n     * @dev quick query of the total amount to be paid to an offer\n     * @param _offer Offer hash of an offer to be prompted\n     * @return Amount to be paid back\n     */\n    function toBePaid(bytes32 _offer) public view returns (uint256) {\n        return offers[_offer].toBePaid;\n    }\n\n    /**\n     * getLender\n     * @dev utility function to find out a lender address of a particular offer\n     * @param _offer Offer hash of an offer to be prompted\n     * @return Address of the lender\n     */\n    function getLender(bytes32 _offer) public view returns (address) {\n        return offers[_offer].lender;\n    }\n\n    /*--------------------------------*|\n    |*  ## SETUP FUNCTIONS            *|\n    |*--------------------------------*/\n\n    /**\n     * setPWN\n     * @dev An essential setup function. Has to be called once PWN contract was deployed\n     * @param _address Identifying the PWN contract\n     */\n    function setPWN(address _address) external onlyOwner {\n        PWN = _address;\n    }\n\n    /**\n     * setUri\n     * @dev An non-essential setup function. Can be called to adjust the Deed token metadata URI\n     * @param _newUri setting the new origin of Deed metadata\n     */\n    function setUri(string memory _newUri) external onlyOwner {\n        _setURI(_newUri);\n    }\n}",
  "sourceMap": "227:15277:13:-:0;;;3784:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3824:4;1134:13:1;3824:4:13;1134:7:1;:13::i;:::-;-1:-1:-1;921:32:0;719:10:8;921:18:0;:32::i;:::-;3784:64:13;227:15277;;7936:86:1;8002:13;;;;:4;;:13;;;;;:::i;:::-;;7936:86;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2270:187;;:::o;227:15277:13:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;227:15277:13;;;-1:-1:-1;227:15277:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1137:15;94:6;125:2;168;156:9;147:7;143:23;139:32;136:2;;;189:6;181;174:22;136:2;221:16;;-1:-1:-1;;;;;286:14:15;;;283:2;;;318:6;310;303:22;283:2;361:6;350:9;346:22;336:32;;406:7;399:4;395:2;391:13;387:27;377:2;;433:6;425;418:22;377:2;467;461:9;489:2;485;482:10;479:2;;;495:18;;:::i;:::-;570:2;564:9;538:2;624:13;;-1:-1:-1;;620:22:15;;;644:2;616:31;612:40;600:53;;;668:18;;;688:22;;;665:46;662:2;;;714:18;;:::i;:::-;754:10;750:2;743:22;789:2;781:6;774:18;829:7;824:2;819;815;811:11;807:20;804:33;801:2;;;855:6;847;840:22;801:2;882:6;873:15;;897:129;911:2;908:1;905:9;897:129;;;999:10;;;995:19;;989:26;968:14;;;964:23;;957:59;922:10;;;;897:129;;;1044:2;1041:1;1038:9;1035:2;;;1103:6;1098:2;1093;1085:6;1081:15;1077:24;1070:40;1035:2;1139:6;105:1046;-1:-1:-1;;;;;;;;105:1046:15:o;1156:380::-;1235:1;1231:12;;;;1278;;;1299:2;;1353:4;1345:6;1341:17;1331:27;;1299:2;1406;1398:6;1395:14;1375:18;1372:38;1369:2;;;1452:10;1447:3;1443:20;1440:1;1433:31;1487:4;1484:1;1477:15;1515:4;1512:1;1505:15;1369:2;;1211:325;;;:::o;1541:127::-;1602:10;1597:3;1593:20;1590:1;1583:31;1633:4;1630:1;1623:15;1657:4;1654:1;1647:15;1573:95;227:15277:13;;;;;;",
  "sourcePath": "contracts/PWNDeed.sol",
  "type": "contract"
}